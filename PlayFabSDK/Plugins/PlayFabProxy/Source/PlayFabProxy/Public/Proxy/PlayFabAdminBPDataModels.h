// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "Core/PlayFabAdminAPI.h"
#include "Core/PlayFabAdminDataModels.h"
#include "PlayFabAdminBPDataModels.generated.h"

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAbortTaskInstanceRequest"))
struct FBPAdminAbortTaskInstanceRequest
{
    GENERATED_BODY()
public:
    FBPAdminAbortTaskInstanceRequest() {};
    FBPAdminAbortTaskInstanceRequest(PlayFab::AdminModels::FAbortTaskInstanceRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FAbortTaskInstanceRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminActionsOnPlayersInSegmentTaskParameter", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminActionsOnPlayersInSegmentTaskParameter"))
struct FBPAdminActionsOnPlayersInSegmentTaskParameter
{
    GENERATED_BODY()
public:
    FBPAdminActionsOnPlayersInSegmentTaskParameter() {};
    FBPAdminActionsOnPlayersInSegmentTaskParameter(PlayFab::AdminModels::FActionsOnPlayersInSegmentTaskParameter InData) : Data(InData) {};
    PlayFab::AdminModels::FActionsOnPlayersInSegmentTaskParameter Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminActionsOnPlayersInSegmentTaskSummary", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminActionsOnPlayersInSegmentTaskSummary"))
struct FBPAdminActionsOnPlayersInSegmentTaskSummary
{
    GENERATED_BODY()
public:
    FBPAdminActionsOnPlayersInSegmentTaskSummary() {};
    FBPAdminActionsOnPlayersInSegmentTaskSummary(PlayFab::AdminModels::FActionsOnPlayersInSegmentTaskSummary InData) : Data(InData) {};
    PlayFab::AdminModels::FActionsOnPlayersInSegmentTaskSummary Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAdCampaignAttribution", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminAdCampaignAttribution"))
struct FBPAdminAdCampaignAttribution
{
    GENERATED_BODY()
public:
    FBPAdminAdCampaignAttribution() {};
    FBPAdminAdCampaignAttribution(PlayFab::AdminModels::FAdCampaignAttribution InData) : Data(InData) {};
    PlayFab::AdminModels::FAdCampaignAttribution Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAdCampaignAttributionModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminAdCampaignAttributionModel"))
struct FBPAdminAdCampaignAttributionModel
{
    GENERATED_BODY()
public:
    FBPAdminAdCampaignAttributionModel() {};
    FBPAdminAdCampaignAttributionModel(PlayFab::AdminModels::FAdCampaignAttributionModel InData) : Data(InData) {};
    PlayFab::AdminModels::FAdCampaignAttributionModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAddNewsRequest"))
struct FBPAdminAddNewsRequest
{
    GENERATED_BODY()
public:
    FBPAdminAddNewsRequest() {};
    FBPAdminAddNewsRequest(PlayFab::AdminModels::FAddNewsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FAddNewsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminAddNewsResult"))
struct FBPAdminAddNewsResult
{
    GENERATED_BODY()
public:
    FBPAdminAddNewsResult() {};
    FBPAdminAddNewsResult(PlayFab::AdminModels::FAddNewsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FAddNewsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAddPlayerTagRequest"))
struct FBPAdminAddPlayerTagRequest
{
    GENERATED_BODY()
public:
    FBPAdminAddPlayerTagRequest() {};
    FBPAdminAddPlayerTagRequest(PlayFab::AdminModels::FAddPlayerTagRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FAddPlayerTagRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminAddPlayerTagResult"))
struct FBPAdminAddPlayerTagResult
{
    GENERATED_BODY()
public:
    FBPAdminAddPlayerTagResult() {};
    FBPAdminAddPlayerTagResult(PlayFab::AdminModels::FAddPlayerTagResult InData) : Data(InData) {};
    PlayFab::AdminModels::FAddPlayerTagResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAddServerBuildRequest"))
struct FBPAdminAddServerBuildRequest
{
    GENERATED_BODY()
public:
    FBPAdminAddServerBuildRequest() {};
    FBPAdminAddServerBuildRequest(PlayFab::AdminModels::FAddServerBuildRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FAddServerBuildRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminAddServerBuildResult"))
struct FBPAdminAddServerBuildResult
{
    GENERATED_BODY()
public:
    FBPAdminAddServerBuildResult() {};
    FBPAdminAddServerBuildResult(PlayFab::AdminModels::FAddServerBuildResult InData) : Data(InData) {};
    PlayFab::AdminModels::FAddServerBuildResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAddUserVirtualCurrencyRequest"))
struct FBPAdminAddUserVirtualCurrencyRequest
{
    GENERATED_BODY()
public:
    FBPAdminAddUserVirtualCurrencyRequest() {};
    FBPAdminAddUserVirtualCurrencyRequest(PlayFab::AdminModels::FAddUserVirtualCurrencyRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FAddUserVirtualCurrencyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminAddVirtualCurrencyTypesRequest"))
struct FBPAdminAddVirtualCurrencyTypesRequest
{
    GENERATED_BODY()
public:
    FBPAdminAddVirtualCurrencyTypesRequest() {};
    FBPAdminAddVirtualCurrencyTypesRequest(PlayFab::AdminModels::FAddVirtualCurrencyTypesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FAddVirtualCurrencyTypesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminApiCondition", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminApiCondition"))
struct FBPAdminApiCondition
{
    GENERATED_BODY()
public:
    FBPAdminApiCondition() {};
    FBPAdminApiCondition(PlayFab::AdminModels::FApiCondition InData) : Data(InData) {};
    PlayFab::AdminModels::FApiCondition Data;
};

UENUM(BlueprintType)
enum class EBPAdminAuthTokenType : uint8
{
    AuthTokenType_Email UMETA(DisplayName = "Email")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminBanInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminBanInfo"))
struct FBPAdminBanInfo
{
    GENERATED_BODY()
public:
    FBPAdminBanInfo() {};
    FBPAdminBanInfo(PlayFab::AdminModels::FBanInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FBanInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminBanRequest"))
struct FBPAdminBanRequest
{
    GENERATED_BODY()
public:
    FBPAdminBanRequest() {};
    FBPAdminBanRequest(PlayFab::AdminModels::FBanRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FBanRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminBanUsersRequest"))
struct FBPAdminBanUsersRequest
{
    GENERATED_BODY()
public:
    FBPAdminBanUsersRequest() {};
    FBPAdminBanUsersRequest(PlayFab::AdminModels::FBanUsersRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FBanUsersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminBanUsersResult"))
struct FBPAdminBanUsersResult
{
    GENERATED_BODY()
public:
    FBPAdminBanUsersResult() {};
    FBPAdminBanUsersResult(PlayFab::AdminModels::FBanUsersResult InData) : Data(InData) {};
    PlayFab::AdminModels::FBanUsersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminBlankResult"))
struct FBPAdminBlankResult
{
    GENERATED_BODY()
public:
    FBPAdminBlankResult() {};
    FBPAdminBlankResult(PlayFab::AdminModels::FBlankResult InData) : Data(InData) {};
    PlayFab::AdminModels::FBlankResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCatalogItem", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCatalogItem"))
struct FBPAdminCatalogItem
{
    GENERATED_BODY()
public:
    FBPAdminCatalogItem() {};
    FBPAdminCatalogItem(PlayFab::AdminModels::FCatalogItem InData) : Data(InData) {};
    PlayFab::AdminModels::FCatalogItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCatalogItemBundleInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCatalogItemBundleInfo"))
struct FBPAdminCatalogItemBundleInfo
{
    GENERATED_BODY()
public:
    FBPAdminCatalogItemBundleInfo() {};
    FBPAdminCatalogItemBundleInfo(PlayFab::AdminModels::FCatalogItemBundleInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FCatalogItemBundleInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCatalogItemConsumableInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCatalogItemConsumableInfo"))
struct FBPAdminCatalogItemConsumableInfo
{
    GENERATED_BODY()
public:
    FBPAdminCatalogItemConsumableInfo() {};
    FBPAdminCatalogItemConsumableInfo(PlayFab::AdminModels::FCatalogItemConsumableInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FCatalogItemConsumableInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCatalogItemContainerInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCatalogItemContainerInfo"))
struct FBPAdminCatalogItemContainerInfo
{
    GENERATED_BODY()
public:
    FBPAdminCatalogItemContainerInfo() {};
    FBPAdminCatalogItemContainerInfo(PlayFab::AdminModels::FCatalogItemContainerInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FCatalogItemContainerInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCheckLimitedEditionItemAvailabilityRequest"))
struct FBPAdminCheckLimitedEditionItemAvailabilityRequest
{
    GENERATED_BODY()
public:
    FBPAdminCheckLimitedEditionItemAvailabilityRequest() {};
    FBPAdminCheckLimitedEditionItemAvailabilityRequest(PlayFab::AdminModels::FCheckLimitedEditionItemAvailabilityRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FCheckLimitedEditionItemAvailabilityRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCheckLimitedEditionItemAvailabilityResult"))
struct FBPAdminCheckLimitedEditionItemAvailabilityResult
{
    GENERATED_BODY()
public:
    FBPAdminCheckLimitedEditionItemAvailabilityResult() {};
    FBPAdminCheckLimitedEditionItemAvailabilityResult(PlayFab::AdminModels::FCheckLimitedEditionItemAvailabilityResult InData) : Data(InData) {};
    PlayFab::AdminModels::FCheckLimitedEditionItemAvailabilityResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCloudScriptFile", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCloudScriptFile"))
struct FBPAdminCloudScriptFile
{
    GENERATED_BODY()
public:
    FBPAdminCloudScriptFile() {};
    FBPAdminCloudScriptFile(PlayFab::AdminModels::FCloudScriptFile InData) : Data(InData) {};
    PlayFab::AdminModels::FCloudScriptFile Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCloudScriptTaskParameter", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCloudScriptTaskParameter"))
struct FBPAdminCloudScriptTaskParameter
{
    GENERATED_BODY()
public:
    FBPAdminCloudScriptTaskParameter() {};
    FBPAdminCloudScriptTaskParameter(PlayFab::AdminModels::FCloudScriptTaskParameter InData) : Data(InData) {};
    PlayFab::AdminModels::FCloudScriptTaskParameter Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCloudScriptTaskSummary", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCloudScriptTaskSummary"))
struct FBPAdminCloudScriptTaskSummary
{
    GENERATED_BODY()
public:
    FBPAdminCloudScriptTaskSummary() {};
    FBPAdminCloudScriptTaskSummary(PlayFab::AdminModels::FCloudScriptTaskSummary InData) : Data(InData) {};
    PlayFab::AdminModels::FCloudScriptTaskSummary Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCloudScriptVersionStatus", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCloudScriptVersionStatus"))
struct FBPAdminCloudScriptVersionStatus
{
    GENERATED_BODY()
public:
    FBPAdminCloudScriptVersionStatus() {};
    FBPAdminCloudScriptVersionStatus(PlayFab::AdminModels::FCloudScriptVersionStatus InData) : Data(InData) {};
    PlayFab::AdminModels::FCloudScriptVersionStatus Data;
};

UENUM(BlueprintType)
enum class EBPAdminConditionals : uint8
{
    Conditionals_Any UMETA(DisplayName = "Any"),
    Conditionals_True UMETA(DisplayName = "True"),
    Conditionals_False UMETA(DisplayName = "False")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminContactEmailInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminContactEmailInfo"))
struct FBPAdminContactEmailInfo
{
    GENERATED_BODY()
public:
    FBPAdminContactEmailInfo() {};
    FBPAdminContactEmailInfo(PlayFab::AdminModels::FContactEmailInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FContactEmailInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminContactEmailInfoModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminContactEmailInfoModel"))
struct FBPAdminContactEmailInfoModel
{
    GENERATED_BODY()
public:
    FBPAdminContactEmailInfoModel() {};
    FBPAdminContactEmailInfoModel(PlayFab::AdminModels::FContactEmailInfoModel InData) : Data(InData) {};
    PlayFab::AdminModels::FContactEmailInfoModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminContentInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminContentInfo"))
struct FBPAdminContentInfo
{
    GENERATED_BODY()
public:
    FBPAdminContentInfo() {};
    FBPAdminContentInfo(PlayFab::AdminModels::FContentInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FContentInfo Data;
};

UENUM(BlueprintType)
enum class EBPAdminContinentCode : uint8
{
    ContinentCode_AF UMETA(DisplayName = "AF"),
    ContinentCode_AN UMETA(DisplayName = "AN"),
    ContinentCode_AS UMETA(DisplayName = "AS"),
    ContinentCode_EU UMETA(DisplayName = "EU"),
    ContinentCode_NA UMETA(DisplayName = "NA"),
    ContinentCode_OC UMETA(DisplayName = "OC"),
    ContinentCode_SA UMETA(DisplayName = "SA")
};

UENUM(BlueprintType)
enum class EBPAdminCountryCode : uint8
{
    CountryCode_AF UMETA(DisplayName = "AF"),
    CountryCode_AX UMETA(DisplayName = "AX"),
    CountryCode_AL UMETA(DisplayName = "AL"),
    CountryCode_DZ UMETA(DisplayName = "DZ"),
    CountryCode_AS UMETA(DisplayName = "AS"),
    CountryCode_AD UMETA(DisplayName = "AD"),
    CountryCode_AO UMETA(DisplayName = "AO"),
    CountryCode_AI UMETA(DisplayName = "AI"),
    CountryCode_AQ UMETA(DisplayName = "AQ"),
    CountryCode_AG UMETA(DisplayName = "AG"),
    CountryCode_AR UMETA(DisplayName = "AR"),
    CountryCode_AM UMETA(DisplayName = "AM"),
    CountryCode_AW UMETA(DisplayName = "AW"),
    CountryCode_AU UMETA(DisplayName = "AU"),
    CountryCode_AT UMETA(DisplayName = "AT"),
    CountryCode_AZ UMETA(DisplayName = "AZ"),
    CountryCode_BS UMETA(DisplayName = "BS"),
    CountryCode_BH UMETA(DisplayName = "BH"),
    CountryCode_BD UMETA(DisplayName = "BD"),
    CountryCode_BB UMETA(DisplayName = "BB"),
    CountryCode_BY UMETA(DisplayName = "BY"),
    CountryCode_BE UMETA(DisplayName = "BE"),
    CountryCode_BZ UMETA(DisplayName = "BZ"),
    CountryCode_BJ UMETA(DisplayName = "BJ"),
    CountryCode_BM UMETA(DisplayName = "BM"),
    CountryCode_BT UMETA(DisplayName = "BT"),
    CountryCode_BO UMETA(DisplayName = "BO"),
    CountryCode_BQ UMETA(DisplayName = "BQ"),
    CountryCode_BA UMETA(DisplayName = "BA"),
    CountryCode_BW UMETA(DisplayName = "BW"),
    CountryCode_BV UMETA(DisplayName = "BV"),
    CountryCode_BR UMETA(DisplayName = "BR"),
    CountryCode_IO UMETA(DisplayName = "IO"),
    CountryCode_BN UMETA(DisplayName = "BN"),
    CountryCode_BG UMETA(DisplayName = "BG"),
    CountryCode_BF UMETA(DisplayName = "BF"),
    CountryCode_BI UMETA(DisplayName = "BI"),
    CountryCode_KH UMETA(DisplayName = "KH"),
    CountryCode_CM UMETA(DisplayName = "CM"),
    CountryCode_CA UMETA(DisplayName = "CA"),
    CountryCode_CV UMETA(DisplayName = "CV"),
    CountryCode_KY UMETA(DisplayName = "KY"),
    CountryCode_CF UMETA(DisplayName = "CF"),
    CountryCode_TD UMETA(DisplayName = "TD"),
    CountryCode_CL UMETA(DisplayName = "CL"),
    CountryCode_CN UMETA(DisplayName = "CN"),
    CountryCode_CX UMETA(DisplayName = "CX"),
    CountryCode_CC UMETA(DisplayName = "CC"),
    CountryCode_CO UMETA(DisplayName = "CO"),
    CountryCode_KM UMETA(DisplayName = "KM"),
    CountryCode_CG UMETA(DisplayName = "CG"),
    CountryCode_CD UMETA(DisplayName = "CD"),
    CountryCode_CK UMETA(DisplayName = "CK"),
    CountryCode_CR UMETA(DisplayName = "CR"),
    CountryCode_CI UMETA(DisplayName = "CI"),
    CountryCode_HR UMETA(DisplayName = "HR"),
    CountryCode_CU UMETA(DisplayName = "CU"),
    CountryCode_CW UMETA(DisplayName = "CW"),
    CountryCode_CY UMETA(DisplayName = "CY"),
    CountryCode_CZ UMETA(DisplayName = "CZ"),
    CountryCode_DK UMETA(DisplayName = "DK"),
    CountryCode_DJ UMETA(DisplayName = "DJ"),
    CountryCode_DM UMETA(DisplayName = "DM"),
    CountryCode_DO UMETA(DisplayName = "DO"),
    CountryCode_EC UMETA(DisplayName = "EC"),
    CountryCode_EG UMETA(DisplayName = "EG"),
    CountryCode_SV UMETA(DisplayName = "SV"),
    CountryCode_GQ UMETA(DisplayName = "GQ"),
    CountryCode_ER UMETA(DisplayName = "ER"),
    CountryCode_EE UMETA(DisplayName = "EE"),
    CountryCode_ET UMETA(DisplayName = "ET"),
    CountryCode_FK UMETA(DisplayName = "FK"),
    CountryCode_FO UMETA(DisplayName = "FO"),
    CountryCode_FJ UMETA(DisplayName = "FJ"),
    CountryCode_FI UMETA(DisplayName = "FI"),
    CountryCode_FR UMETA(DisplayName = "FR"),
    CountryCode_GF UMETA(DisplayName = "GF"),
    CountryCode_PF UMETA(DisplayName = "PF"),
    CountryCode_TF UMETA(DisplayName = "TF"),
    CountryCode_GA UMETA(DisplayName = "GA"),
    CountryCode_GM UMETA(DisplayName = "GM"),
    CountryCode_GE UMETA(DisplayName = "GE"),
    CountryCode_DE UMETA(DisplayName = "DE"),
    CountryCode_GH UMETA(DisplayName = "GH"),
    CountryCode_GI UMETA(DisplayName = "GI"),
    CountryCode_GR UMETA(DisplayName = "GR"),
    CountryCode_GL UMETA(DisplayName = "GL"),
    CountryCode_GD UMETA(DisplayName = "GD"),
    CountryCode_GP UMETA(DisplayName = "GP"),
    CountryCode_GU UMETA(DisplayName = "GU"),
    CountryCode_GT UMETA(DisplayName = "GT"),
    CountryCode_GG UMETA(DisplayName = "GG"),
    CountryCode_GN UMETA(DisplayName = "GN"),
    CountryCode_GW UMETA(DisplayName = "GW"),
    CountryCode_GY UMETA(DisplayName = "GY"),
    CountryCode_HT UMETA(DisplayName = "HT"),
    CountryCode_HM UMETA(DisplayName = "HM"),
    CountryCode_VA UMETA(DisplayName = "VA"),
    CountryCode_HN UMETA(DisplayName = "HN"),
    CountryCode_HK UMETA(DisplayName = "HK"),
    CountryCode_HU UMETA(DisplayName = "HU"),
    CountryCode_IS UMETA(DisplayName = "IS"),
    CountryCode_IN UMETA(DisplayName = "IN"),
    CountryCode_ID UMETA(DisplayName = "ID"),
    CountryCode_IR UMETA(DisplayName = "IR"),
    CountryCode_IQ UMETA(DisplayName = "IQ"),
    CountryCode_IE UMETA(DisplayName = "IE"),
    CountryCode_IM UMETA(DisplayName = "IM"),
    CountryCode_IL UMETA(DisplayName = "IL"),
    CountryCode_IT UMETA(DisplayName = "IT"),
    CountryCode_JM UMETA(DisplayName = "JM"),
    CountryCode_JP UMETA(DisplayName = "JP"),
    CountryCode_JE UMETA(DisplayName = "JE"),
    CountryCode_JO UMETA(DisplayName = "JO"),
    CountryCode_KZ UMETA(DisplayName = "KZ"),
    CountryCode_KE UMETA(DisplayName = "KE"),
    CountryCode_KI UMETA(DisplayName = "KI"),
    CountryCode_KP UMETA(DisplayName = "KP"),
    CountryCode_KR UMETA(DisplayName = "KR"),
    CountryCode_KW UMETA(DisplayName = "KW"),
    CountryCode_KG UMETA(DisplayName = "KG"),
    CountryCode_LA UMETA(DisplayName = "LA"),
    CountryCode_LV UMETA(DisplayName = "LV"),
    CountryCode_LB UMETA(DisplayName = "LB"),
    CountryCode_LS UMETA(DisplayName = "LS"),
    CountryCode_LR UMETA(DisplayName = "LR"),
    CountryCode_LY UMETA(DisplayName = "LY"),
    CountryCode_LI UMETA(DisplayName = "LI"),
    CountryCode_LT UMETA(DisplayName = "LT"),
    CountryCode_LU UMETA(DisplayName = "LU"),
    CountryCode_MO UMETA(DisplayName = "MO"),
    CountryCode_MK UMETA(DisplayName = "MK"),
    CountryCode_MG UMETA(DisplayName = "MG"),
    CountryCode_MW UMETA(DisplayName = "MW"),
    CountryCode_MY UMETA(DisplayName = "MY"),
    CountryCode_MV UMETA(DisplayName = "MV"),
    CountryCode_ML UMETA(DisplayName = "ML"),
    CountryCode_MT UMETA(DisplayName = "MT"),
    CountryCode_MH UMETA(DisplayName = "MH"),
    CountryCode_MQ UMETA(DisplayName = "MQ"),
    CountryCode_MR UMETA(DisplayName = "MR"),
    CountryCode_MU UMETA(DisplayName = "MU"),
    CountryCode_YT UMETA(DisplayName = "YT"),
    CountryCode_MX UMETA(DisplayName = "MX"),
    CountryCode_FM UMETA(DisplayName = "FM"),
    CountryCode_MD UMETA(DisplayName = "MD"),
    CountryCode_MC UMETA(DisplayName = "MC"),
    CountryCode_MN UMETA(DisplayName = "MN"),
    CountryCode_ME UMETA(DisplayName = "ME"),
    CountryCode_MS UMETA(DisplayName = "MS"),
    CountryCode_MA UMETA(DisplayName = "MA"),
    CountryCode_MZ UMETA(DisplayName = "MZ"),
    CountryCode_MM UMETA(DisplayName = "MM"),
    CountryCode_NA UMETA(DisplayName = "NA"),
    CountryCode_NR UMETA(DisplayName = "NR"),
    CountryCode_NP UMETA(DisplayName = "NP"),
    CountryCode_NL UMETA(DisplayName = "NL"),
    CountryCode_NC UMETA(DisplayName = "NC"),
    CountryCode_NZ UMETA(DisplayName = "NZ"),
    CountryCode_NI UMETA(DisplayName = "NI"),
    CountryCode_NE UMETA(DisplayName = "NE"),
    CountryCode_NG UMETA(DisplayName = "NG"),
    CountryCode_NU UMETA(DisplayName = "NU"),
    CountryCode_NF UMETA(DisplayName = "NF"),
    CountryCode_MP UMETA(DisplayName = "MP"),
    CountryCode_NO UMETA(DisplayName = "NO"),
    CountryCode_OM UMETA(DisplayName = "OM"),
    CountryCode_PK UMETA(DisplayName = "PK"),
    CountryCode_PW UMETA(DisplayName = "PW"),
    CountryCode_PS UMETA(DisplayName = "PS"),
    CountryCode_PA UMETA(DisplayName = "PA"),
    CountryCode_PG UMETA(DisplayName = "PG"),
    CountryCode_PY UMETA(DisplayName = "PY"),
    CountryCode_PE UMETA(DisplayName = "PE"),
    CountryCode_PH UMETA(DisplayName = "PH"),
    CountryCode_PN UMETA(DisplayName = "PN"),
    CountryCode_PL UMETA(DisplayName = "PL"),
    CountryCode_PT UMETA(DisplayName = "PT"),
    CountryCode_PR UMETA(DisplayName = "PR"),
    CountryCode_QA UMETA(DisplayName = "QA"),
    CountryCode_RE UMETA(DisplayName = "RE"),
    CountryCode_RO UMETA(DisplayName = "RO"),
    CountryCode_RU UMETA(DisplayName = "RU"),
    CountryCode_RW UMETA(DisplayName = "RW"),
    CountryCode_BL UMETA(DisplayName = "BL"),
    CountryCode_SH UMETA(DisplayName = "SH"),
    CountryCode_KN UMETA(DisplayName = "KN"),
    CountryCode_LC UMETA(DisplayName = "LC"),
    CountryCode_MF UMETA(DisplayName = "MF"),
    CountryCode_PM UMETA(DisplayName = "PM"),
    CountryCode_VC UMETA(DisplayName = "VC"),
    CountryCode_WS UMETA(DisplayName = "WS"),
    CountryCode_SM UMETA(DisplayName = "SM"),
    CountryCode_ST UMETA(DisplayName = "ST"),
    CountryCode_SA UMETA(DisplayName = "SA"),
    CountryCode_SN UMETA(DisplayName = "SN"),
    CountryCode_RS UMETA(DisplayName = "RS"),
    CountryCode_SC UMETA(DisplayName = "SC"),
    CountryCode_SL UMETA(DisplayName = "SL"),
    CountryCode_SG UMETA(DisplayName = "SG"),
    CountryCode_SX UMETA(DisplayName = "SX"),
    CountryCode_SK UMETA(DisplayName = "SK"),
    CountryCode_SI UMETA(DisplayName = "SI"),
    CountryCode_SB UMETA(DisplayName = "SB"),
    CountryCode_SO UMETA(DisplayName = "SO"),
    CountryCode_ZA UMETA(DisplayName = "ZA"),
    CountryCode_GS UMETA(DisplayName = "GS"),
    CountryCode_SS UMETA(DisplayName = "SS"),
    CountryCode_ES UMETA(DisplayName = "ES"),
    CountryCode_LK UMETA(DisplayName = "LK"),
    CountryCode_SD UMETA(DisplayName = "SD"),
    CountryCode_SR UMETA(DisplayName = "SR"),
    CountryCode_SJ UMETA(DisplayName = "SJ"),
    CountryCode_SZ UMETA(DisplayName = "SZ"),
    CountryCode_SE UMETA(DisplayName = "SE"),
    CountryCode_CH UMETA(DisplayName = "CH"),
    CountryCode_SY UMETA(DisplayName = "SY"),
    CountryCode_TW UMETA(DisplayName = "TW"),
    CountryCode_TJ UMETA(DisplayName = "TJ"),
    CountryCode_TZ UMETA(DisplayName = "TZ"),
    CountryCode_TH UMETA(DisplayName = "TH"),
    CountryCode_TL UMETA(DisplayName = "TL"),
    CountryCode_TG UMETA(DisplayName = "TG"),
    CountryCode_TK UMETA(DisplayName = "TK"),
    CountryCode_TO UMETA(DisplayName = "TO"),
    CountryCode_TT UMETA(DisplayName = "TT"),
    CountryCode_TN UMETA(DisplayName = "TN"),
    CountryCode_TR UMETA(DisplayName = "TR"),
    CountryCode_TM UMETA(DisplayName = "TM"),
    CountryCode_TC UMETA(DisplayName = "TC"),
    CountryCode_TV UMETA(DisplayName = "TV"),
    CountryCode_UG UMETA(DisplayName = "UG"),
    CountryCode_UA UMETA(DisplayName = "UA"),
    CountryCode_AE UMETA(DisplayName = "AE"),
    CountryCode_GB UMETA(DisplayName = "GB"),
    CountryCode_US UMETA(DisplayName = "US"),
    CountryCode_UM UMETA(DisplayName = "UM"),
    CountryCode_UY UMETA(DisplayName = "UY"),
    CountryCode_UZ UMETA(DisplayName = "UZ"),
    CountryCode_VU UMETA(DisplayName = "VU"),
    CountryCode_VE UMETA(DisplayName = "VE"),
    CountryCode_VN UMETA(DisplayName = "VN"),
    CountryCode_VG UMETA(DisplayName = "VG"),
    CountryCode_VI UMETA(DisplayName = "VI"),
    CountryCode_WF UMETA(DisplayName = "WF"),
    CountryCode_EH UMETA(DisplayName = "EH"),
    CountryCode_YE UMETA(DisplayName = "YE"),
    CountryCode_ZM UMETA(DisplayName = "ZM"),
    CountryCode_ZW UMETA(DisplayName = "ZW")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCreateActionsOnPlayerSegmentTaskRequest"))
struct FBPAdminCreateActionsOnPlayerSegmentTaskRequest
{
    GENERATED_BODY()
public:
    FBPAdminCreateActionsOnPlayerSegmentTaskRequest() {};
    FBPAdminCreateActionsOnPlayerSegmentTaskRequest(PlayFab::AdminModels::FCreateActionsOnPlayerSegmentTaskRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FCreateActionsOnPlayerSegmentTaskRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCreateCloudScriptTaskRequest"))
struct FBPAdminCreateCloudScriptTaskRequest
{
    GENERATED_BODY()
public:
    FBPAdminCreateCloudScriptTaskRequest() {};
    FBPAdminCreateCloudScriptTaskRequest(PlayFab::AdminModels::FCreateCloudScriptTaskRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FCreateCloudScriptTaskRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCreatePlayerSharedSecretRequest"))
struct FBPAdminCreatePlayerSharedSecretRequest
{
    GENERATED_BODY()
public:
    FBPAdminCreatePlayerSharedSecretRequest() {};
    FBPAdminCreatePlayerSharedSecretRequest(PlayFab::AdminModels::FCreatePlayerSharedSecretRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FCreatePlayerSharedSecretRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCreatePlayerSharedSecretResult"))
struct FBPAdminCreatePlayerSharedSecretResult
{
    GENERATED_BODY()
public:
    FBPAdminCreatePlayerSharedSecretResult() {};
    FBPAdminCreatePlayerSharedSecretResult(PlayFab::AdminModels::FCreatePlayerSharedSecretResult InData) : Data(InData) {};
    PlayFab::AdminModels::FCreatePlayerSharedSecretResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminCreatePlayerStatisticDefinitionRequest"))
struct FBPAdminCreatePlayerStatisticDefinitionRequest
{
    GENERATED_BODY()
public:
    FBPAdminCreatePlayerStatisticDefinitionRequest() {};
    FBPAdminCreatePlayerStatisticDefinitionRequest(PlayFab::AdminModels::FCreatePlayerStatisticDefinitionRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FCreatePlayerStatisticDefinitionRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCreatePlayerStatisticDefinitionResult"))
struct FBPAdminCreatePlayerStatisticDefinitionResult
{
    GENERATED_BODY()
public:
    FBPAdminCreatePlayerStatisticDefinitionResult() {};
    FBPAdminCreatePlayerStatisticDefinitionResult(PlayFab::AdminModels::FCreatePlayerStatisticDefinitionResult InData) : Data(InData) {};
    PlayFab::AdminModels::FCreatePlayerStatisticDefinitionResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminCreateTaskResult"))
struct FBPAdminCreateTaskResult
{
    GENERATED_BODY()
public:
    FBPAdminCreateTaskResult() {};
    FBPAdminCreateTaskResult(PlayFab::AdminModels::FCreateTaskResult InData) : Data(InData) {};
    PlayFab::AdminModels::FCreateTaskResult Data;
};

UENUM(BlueprintType)
enum class EBPAdminCurrency : uint8
{
    Currency_AED UMETA(DisplayName = "AED"),
    Currency_AFN UMETA(DisplayName = "AFN"),
    Currency_ALL UMETA(DisplayName = "ALL"),
    Currency_AMD UMETA(DisplayName = "AMD"),
    Currency_ANG UMETA(DisplayName = "ANG"),
    Currency_AOA UMETA(DisplayName = "AOA"),
    Currency_ARS UMETA(DisplayName = "ARS"),
    Currency_AUD UMETA(DisplayName = "AUD"),
    Currency_AWG UMETA(DisplayName = "AWG"),
    Currency_AZN UMETA(DisplayName = "AZN"),
    Currency_BAM UMETA(DisplayName = "BAM"),
    Currency_BBD UMETA(DisplayName = "BBD"),
    Currency_BDT UMETA(DisplayName = "BDT"),
    Currency_BGN UMETA(DisplayName = "BGN"),
    Currency_BHD UMETA(DisplayName = "BHD"),
    Currency_BIF UMETA(DisplayName = "BIF"),
    Currency_BMD UMETA(DisplayName = "BMD"),
    Currency_BND UMETA(DisplayName = "BND"),
    Currency_BOB UMETA(DisplayName = "BOB"),
    Currency_BRL UMETA(DisplayName = "BRL"),
    Currency_BSD UMETA(DisplayName = "BSD"),
    Currency_BTN UMETA(DisplayName = "BTN"),
    Currency_BWP UMETA(DisplayName = "BWP"),
    Currency_BYR UMETA(DisplayName = "BYR"),
    Currency_BZD UMETA(DisplayName = "BZD"),
    Currency_CAD UMETA(DisplayName = "CAD"),
    Currency_CDF UMETA(DisplayName = "CDF"),
    Currency_CHF UMETA(DisplayName = "CHF"),
    Currency_CLP UMETA(DisplayName = "CLP"),
    Currency_CNY UMETA(DisplayName = "CNY"),
    Currency_COP UMETA(DisplayName = "COP"),
    Currency_CRC UMETA(DisplayName = "CRC"),
    Currency_CUC UMETA(DisplayName = "CUC"),
    Currency_CUP UMETA(DisplayName = "CUP"),
    Currency_CVE UMETA(DisplayName = "CVE"),
    Currency_CZK UMETA(DisplayName = "CZK"),
    Currency_DJF UMETA(DisplayName = "DJF"),
    Currency_DKK UMETA(DisplayName = "DKK"),
    Currency_DOP UMETA(DisplayName = "DOP"),
    Currency_DZD UMETA(DisplayName = "DZD"),
    Currency_EGP UMETA(DisplayName = "EGP"),
    Currency_ERN UMETA(DisplayName = "ERN"),
    Currency_ETB UMETA(DisplayName = "ETB"),
    Currency_EUR UMETA(DisplayName = "EUR"),
    Currency_FJD UMETA(DisplayName = "FJD"),
    Currency_FKP UMETA(DisplayName = "FKP"),
    Currency_GBP UMETA(DisplayName = "GBP"),
    Currency_GEL UMETA(DisplayName = "GEL"),
    Currency_GGP UMETA(DisplayName = "GGP"),
    Currency_GHS UMETA(DisplayName = "GHS"),
    Currency_GIP UMETA(DisplayName = "GIP"),
    Currency_GMD UMETA(DisplayName = "GMD"),
    Currency_GNF UMETA(DisplayName = "GNF"),
    Currency_GTQ UMETA(DisplayName = "GTQ"),
    Currency_GYD UMETA(DisplayName = "GYD"),
    Currency_HKD UMETA(DisplayName = "HKD"),
    Currency_HNL UMETA(DisplayName = "HNL"),
    Currency_HRK UMETA(DisplayName = "HRK"),
    Currency_HTG UMETA(DisplayName = "HTG"),
    Currency_HUF UMETA(DisplayName = "HUF"),
    Currency_IDR UMETA(DisplayName = "IDR"),
    Currency_ILS UMETA(DisplayName = "ILS"),
    Currency_IMP UMETA(DisplayName = "IMP"),
    Currency_INR UMETA(DisplayName = "INR"),
    Currency_IQD UMETA(DisplayName = "IQD"),
    Currency_IRR UMETA(DisplayName = "IRR"),
    Currency_ISK UMETA(DisplayName = "ISK"),
    Currency_JEP UMETA(DisplayName = "JEP"),
    Currency_JMD UMETA(DisplayName = "JMD"),
    Currency_JOD UMETA(DisplayName = "JOD"),
    Currency_JPY UMETA(DisplayName = "JPY"),
    Currency_KES UMETA(DisplayName = "KES"),
    Currency_KGS UMETA(DisplayName = "KGS"),
    Currency_KHR UMETA(DisplayName = "KHR"),
    Currency_KMF UMETA(DisplayName = "KMF"),
    Currency_KPW UMETA(DisplayName = "KPW"),
    Currency_KRW UMETA(DisplayName = "KRW"),
    Currency_KWD UMETA(DisplayName = "KWD"),
    Currency_KYD UMETA(DisplayName = "KYD"),
    Currency_KZT UMETA(DisplayName = "KZT"),
    Currency_LAK UMETA(DisplayName = "LAK"),
    Currency_LBP UMETA(DisplayName = "LBP"),
    Currency_LKR UMETA(DisplayName = "LKR"),
    Currency_LRD UMETA(DisplayName = "LRD"),
    Currency_LSL UMETA(DisplayName = "LSL"),
    Currency_LYD UMETA(DisplayName = "LYD"),
    Currency_MAD UMETA(DisplayName = "MAD"),
    Currency_MDL UMETA(DisplayName = "MDL"),
    Currency_MGA UMETA(DisplayName = "MGA"),
    Currency_MKD UMETA(DisplayName = "MKD"),
    Currency_MMK UMETA(DisplayName = "MMK"),
    Currency_MNT UMETA(DisplayName = "MNT"),
    Currency_MOP UMETA(DisplayName = "MOP"),
    Currency_MRO UMETA(DisplayName = "MRO"),
    Currency_MUR UMETA(DisplayName = "MUR"),
    Currency_MVR UMETA(DisplayName = "MVR"),
    Currency_MWK UMETA(DisplayName = "MWK"),
    Currency_MXN UMETA(DisplayName = "MXN"),
    Currency_MYR UMETA(DisplayName = "MYR"),
    Currency_MZN UMETA(DisplayName = "MZN"),
    Currency_NAD UMETA(DisplayName = "NAD"),
    Currency_NGN UMETA(DisplayName = "NGN"),
    Currency_NIO UMETA(DisplayName = "NIO"),
    Currency_NOK UMETA(DisplayName = "NOK"),
    Currency_NPR UMETA(DisplayName = "NPR"),
    Currency_NZD UMETA(DisplayName = "NZD"),
    Currency_OMR UMETA(DisplayName = "OMR"),
    Currency_PAB UMETA(DisplayName = "PAB"),
    Currency_PEN UMETA(DisplayName = "PEN"),
    Currency_PGK UMETA(DisplayName = "PGK"),
    Currency_PHP UMETA(DisplayName = "PHP"),
    Currency_PKR UMETA(DisplayName = "PKR"),
    Currency_PLN UMETA(DisplayName = "PLN"),
    Currency_PYG UMETA(DisplayName = "PYG"),
    Currency_QAR UMETA(DisplayName = "QAR"),
    Currency_RON UMETA(DisplayName = "RON"),
    Currency_RSD UMETA(DisplayName = "RSD"),
    Currency_RUB UMETA(DisplayName = "RUB"),
    Currency_RWF UMETA(DisplayName = "RWF"),
    Currency_SAR UMETA(DisplayName = "SAR"),
    Currency_SBD UMETA(DisplayName = "SBD"),
    Currency_SCR UMETA(DisplayName = "SCR"),
    Currency_SDG UMETA(DisplayName = "SDG"),
    Currency_SEK UMETA(DisplayName = "SEK"),
    Currency_SGD UMETA(DisplayName = "SGD"),
    Currency_SHP UMETA(DisplayName = "SHP"),
    Currency_SLL UMETA(DisplayName = "SLL"),
    Currency_SOS UMETA(DisplayName = "SOS"),
    Currency_SPL UMETA(DisplayName = "SPL"),
    Currency_SRD UMETA(DisplayName = "SRD"),
    Currency_STD UMETA(DisplayName = "STD"),
    Currency_SVC UMETA(DisplayName = "SVC"),
    Currency_SYP UMETA(DisplayName = "SYP"),
    Currency_SZL UMETA(DisplayName = "SZL"),
    Currency_THB UMETA(DisplayName = "THB"),
    Currency_TJS UMETA(DisplayName = "TJS"),
    Currency_TMT UMETA(DisplayName = "TMT"),
    Currency_TND UMETA(DisplayName = "TND"),
    Currency_TOP UMETA(DisplayName = "TOP"),
    Currency_TRY UMETA(DisplayName = "TRY"),
    Currency_TTD UMETA(DisplayName = "TTD"),
    Currency_TVD UMETA(DisplayName = "TVD"),
    Currency_TWD UMETA(DisplayName = "TWD"),
    Currency_TZS UMETA(DisplayName = "TZS"),
    Currency_UAH UMETA(DisplayName = "UAH"),
    Currency_UGX UMETA(DisplayName = "UGX"),
    Currency_USD UMETA(DisplayName = "USD"),
    Currency_UYU UMETA(DisplayName = "UYU"),
    Currency_UZS UMETA(DisplayName = "UZS"),
    Currency_VEF UMETA(DisplayName = "VEF"),
    Currency_VND UMETA(DisplayName = "VND"),
    Currency_VUV UMETA(DisplayName = "VUV"),
    Currency_WST UMETA(DisplayName = "WST"),
    Currency_XAF UMETA(DisplayName = "XAF"),
    Currency_XCD UMETA(DisplayName = "XCD"),
    Currency_XDR UMETA(DisplayName = "XDR"),
    Currency_XOF UMETA(DisplayName = "XOF"),
    Currency_XPF UMETA(DisplayName = "XPF"),
    Currency_YER UMETA(DisplayName = "YER"),
    Currency_ZAR UMETA(DisplayName = "ZAR"),
    Currency_ZMW UMETA(DisplayName = "ZMW"),
    Currency_ZWD UMETA(DisplayName = "ZWD")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeleteContentRequest"))
struct FBPAdminDeleteContentRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeleteContentRequest() {};
    FBPAdminDeleteContentRequest(PlayFab::AdminModels::FDeleteContentRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteContentRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeletePlayerRequest"))
struct FBPAdminDeletePlayerRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeletePlayerRequest() {};
    FBPAdminDeletePlayerRequest(PlayFab::AdminModels::FDeletePlayerRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeletePlayerRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminDeletePlayerResult"))
struct FBPAdminDeletePlayerResult
{
    GENERATED_BODY()
public:
    FBPAdminDeletePlayerResult() {};
    FBPAdminDeletePlayerResult(PlayFab::AdminModels::FDeletePlayerResult InData) : Data(InData) {};
    PlayFab::AdminModels::FDeletePlayerResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeletePlayerSharedSecretRequest"))
struct FBPAdminDeletePlayerSharedSecretRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeletePlayerSharedSecretRequest() {};
    FBPAdminDeletePlayerSharedSecretRequest(PlayFab::AdminModels::FDeletePlayerSharedSecretRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeletePlayerSharedSecretRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminDeletePlayerSharedSecretResult"))
struct FBPAdminDeletePlayerSharedSecretResult
{
    GENERATED_BODY()
public:
    FBPAdminDeletePlayerSharedSecretResult() {};
    FBPAdminDeletePlayerSharedSecretResult(PlayFab::AdminModels::FDeletePlayerSharedSecretResult InData) : Data(InData) {};
    PlayFab::AdminModels::FDeletePlayerSharedSecretResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeleteStoreRequest"))
struct FBPAdminDeleteStoreRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeleteStoreRequest() {};
    FBPAdminDeleteStoreRequest(PlayFab::AdminModels::FDeleteStoreRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteStoreRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminDeleteStoreResult"))
struct FBPAdminDeleteStoreResult
{
    GENERATED_BODY()
public:
    FBPAdminDeleteStoreResult() {};
    FBPAdminDeleteStoreResult(PlayFab::AdminModels::FDeleteStoreResult InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteStoreResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeleteTaskRequest"))
struct FBPAdminDeleteTaskRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeleteTaskRequest() {};
    FBPAdminDeleteTaskRequest(PlayFab::AdminModels::FDeleteTaskRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteTaskRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeleteTitleRequest"))
struct FBPAdminDeleteTitleRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeleteTitleRequest() {};
    FBPAdminDeleteTitleRequest(PlayFab::AdminModels::FDeleteTitleRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteTitleRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminDeleteTitleResult"))
struct FBPAdminDeleteTitleResult
{
    GENERATED_BODY()
public:
    FBPAdminDeleteTitleResult() {};
    FBPAdminDeleteTitleResult(PlayFab::AdminModels::FDeleteTitleResult InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteTitleResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminDeleteUsersRequest"))
struct FBPAdminDeleteUsersRequest
{
    GENERATED_BODY()
public:
    FBPAdminDeleteUsersRequest() {};
    FBPAdminDeleteUsersRequest(PlayFab::AdminModels::FDeleteUsersRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteUsersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminDeleteUsersResult"))
struct FBPAdminDeleteUsersResult
{
    GENERATED_BODY()
public:
    FBPAdminDeleteUsersResult() {};
    FBPAdminDeleteUsersResult(PlayFab::AdminModels::FDeleteUsersResult InData) : Data(InData) {};
    PlayFab::AdminModels::FDeleteUsersResult Data;
};

UENUM(BlueprintType)
enum class EBPAdminEffectType : uint8
{
    EffectType_Allow UMETA(DisplayName = "Allow"),
    EffectType_Deny UMETA(DisplayName = "Deny")
};

UENUM(BlueprintType)
enum class EBPAdminEmailVerificationStatus : uint8
{
    EmailVerificationStatus_Unverified UMETA(DisplayName = "Unverified"),
    EmailVerificationStatus_Pending UMETA(DisplayName = "Pending"),
    EmailVerificationStatus_Confirmed UMETA(DisplayName = "Confirmed")
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminEmptyResult"))
struct FBPAdminEmptyResult
{
    GENERATED_BODY()
public:
    FBPAdminEmptyResult() {};
    FBPAdminEmptyResult(PlayFab::AdminModels::FEmptyResult InData) : Data(InData) {};
    PlayFab::AdminModels::FEmptyResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminEntityKey", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminEntityKey"))
struct FBPAdminEntityKey
{
    GENERATED_BODY()
public:
    FBPAdminEntityKey() {};
    FBPAdminEntityKey(PlayFab::AdminModels::FEntityKey InData) : Data(InData) {};
    PlayFab::AdminModels::FEntityKey Data;
};

UENUM(BlueprintType)
enum class EBPAdminEntityTypes : uint8
{
    EntityTypes_title UMETA(DisplayName = "title"),
    EntityTypes_master_player_account UMETA(DisplayName = "master_player_account"),
    EntityTypes_title_player_account UMETA(DisplayName = "title_player_account"),
    EntityTypes_character UMETA(DisplayName = "character"),
    EntityTypes_group UMETA(DisplayName = "group"),
    EntityTypes_service UMETA(DisplayName = "service")
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminExecuteCloudScriptResult"))
struct FBPAdminExecuteCloudScriptResult
{
    GENERATED_BODY()
public:
    FBPAdminExecuteCloudScriptResult() {};
    FBPAdminExecuteCloudScriptResult(PlayFab::AdminModels::FExecuteCloudScriptResult InData) : Data(InData) {};
    PlayFab::AdminModels::FExecuteCloudScriptResult Data;
};

UENUM(BlueprintType)
enum class EBPAdminGameBuildStatus : uint8
{
    GameBuildStatus_Available UMETA(DisplayName = "Available"),
    GameBuildStatus_Validating UMETA(DisplayName = "Validating"),
    GameBuildStatus_InvalidBuildPackage UMETA(DisplayName = "InvalidBuildPackage"),
    GameBuildStatus_Processing UMETA(DisplayName = "Processing"),
    GameBuildStatus_FailedToProcess UMETA(DisplayName = "FailedToProcess")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGameModeInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGameModeInfo"))
struct FBPAdminGameModeInfo
{
    GENERATED_BODY()
public:
    FBPAdminGameModeInfo() {};
    FBPAdminGameModeInfo(PlayFab::AdminModels::FGameModeInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FGameModeInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetActionsOnPlayersInSegmentTaskInstanceResult"))
struct FBPAdminGetActionsOnPlayersInSegmentTaskInstanceResult
{
    GENERATED_BODY()
public:
    FBPAdminGetActionsOnPlayersInSegmentTaskInstanceResult() {};
    FBPAdminGetActionsOnPlayersInSegmentTaskInstanceResult(PlayFab::AdminModels::FGetActionsOnPlayersInSegmentTaskInstanceResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetActionsOnPlayersInSegmentTaskInstanceResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetAllSegmentsRequest"))
struct FBPAdminGetAllSegmentsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetAllSegmentsRequest() {};
    FBPAdminGetAllSegmentsRequest(PlayFab::AdminModels::FGetAllSegmentsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetAllSegmentsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetAllSegmentsResult"))
struct FBPAdminGetAllSegmentsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetAllSegmentsResult() {};
    FBPAdminGetAllSegmentsResult(PlayFab::AdminModels::FGetAllSegmentsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetAllSegmentsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetCatalogItemsRequest"))
struct FBPAdminGetCatalogItemsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetCatalogItemsRequest() {};
    FBPAdminGetCatalogItemsRequest(PlayFab::AdminModels::FGetCatalogItemsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCatalogItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetCatalogItemsResult"))
struct FBPAdminGetCatalogItemsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetCatalogItemsResult() {};
    FBPAdminGetCatalogItemsResult(PlayFab::AdminModels::FGetCatalogItemsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCatalogItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetCloudScriptRevisionRequest"))
struct FBPAdminGetCloudScriptRevisionRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetCloudScriptRevisionRequest() {};
    FBPAdminGetCloudScriptRevisionRequest(PlayFab::AdminModels::FGetCloudScriptRevisionRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCloudScriptRevisionRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetCloudScriptRevisionResult"))
struct FBPAdminGetCloudScriptRevisionResult
{
    GENERATED_BODY()
public:
    FBPAdminGetCloudScriptRevisionResult() {};
    FBPAdminGetCloudScriptRevisionResult(PlayFab::AdminModels::FGetCloudScriptRevisionResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCloudScriptRevisionResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetCloudScriptTaskInstanceResult"))
struct FBPAdminGetCloudScriptTaskInstanceResult
{
    GENERATED_BODY()
public:
    FBPAdminGetCloudScriptTaskInstanceResult() {};
    FBPAdminGetCloudScriptTaskInstanceResult(PlayFab::AdminModels::FGetCloudScriptTaskInstanceResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCloudScriptTaskInstanceResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetCloudScriptVersionsRequest"))
struct FBPAdminGetCloudScriptVersionsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetCloudScriptVersionsRequest() {};
    FBPAdminGetCloudScriptVersionsRequest(PlayFab::AdminModels::FGetCloudScriptVersionsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCloudScriptVersionsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetCloudScriptVersionsResult"))
struct FBPAdminGetCloudScriptVersionsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetCloudScriptVersionsResult() {};
    FBPAdminGetCloudScriptVersionsResult(PlayFab::AdminModels::FGetCloudScriptVersionsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetCloudScriptVersionsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetContentListRequest"))
struct FBPAdminGetContentListRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetContentListRequest() {};
    FBPAdminGetContentListRequest(PlayFab::AdminModels::FGetContentListRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetContentListRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetContentListResult"))
struct FBPAdminGetContentListResult
{
    GENERATED_BODY()
public:
    FBPAdminGetContentListResult() {};
    FBPAdminGetContentListResult(PlayFab::AdminModels::FGetContentListResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetContentListResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetContentUploadUrlRequest"))
struct FBPAdminGetContentUploadUrlRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetContentUploadUrlRequest() {};
    FBPAdminGetContentUploadUrlRequest(PlayFab::AdminModels::FGetContentUploadUrlRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetContentUploadUrlRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetContentUploadUrlResult"))
struct FBPAdminGetContentUploadUrlResult
{
    GENERATED_BODY()
public:
    FBPAdminGetContentUploadUrlResult() {};
    FBPAdminGetContentUploadUrlResult(PlayFab::AdminModels::FGetContentUploadUrlResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetContentUploadUrlResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetDataReportRequest"))
struct FBPAdminGetDataReportRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetDataReportRequest() {};
    FBPAdminGetDataReportRequest(PlayFab::AdminModels::FGetDataReportRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetDataReportRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetDataReportResult"))
struct FBPAdminGetDataReportResult
{
    GENERATED_BODY()
public:
    FBPAdminGetDataReportResult() {};
    FBPAdminGetDataReportResult(PlayFab::AdminModels::FGetDataReportResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetDataReportResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetMatchmakerGameInfoRequest"))
struct FBPAdminGetMatchmakerGameInfoRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetMatchmakerGameInfoRequest() {};
    FBPAdminGetMatchmakerGameInfoRequest(PlayFab::AdminModels::FGetMatchmakerGameInfoRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetMatchmakerGameInfoRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetMatchmakerGameInfoResult"))
struct FBPAdminGetMatchmakerGameInfoResult
{
    GENERATED_BODY()
public:
    FBPAdminGetMatchmakerGameInfoResult() {};
    FBPAdminGetMatchmakerGameInfoResult(PlayFab::AdminModels::FGetMatchmakerGameInfoResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetMatchmakerGameInfoResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetMatchmakerGameModesRequest"))
struct FBPAdminGetMatchmakerGameModesRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetMatchmakerGameModesRequest() {};
    FBPAdminGetMatchmakerGameModesRequest(PlayFab::AdminModels::FGetMatchmakerGameModesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetMatchmakerGameModesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetMatchmakerGameModesResult"))
struct FBPAdminGetMatchmakerGameModesResult
{
    GENERATED_BODY()
public:
    FBPAdminGetMatchmakerGameModesResult() {};
    FBPAdminGetMatchmakerGameModesResult(PlayFab::AdminModels::FGetMatchmakerGameModesResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetMatchmakerGameModesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayerIdFromAuthTokenRequest"))
struct FBPAdminGetPlayerIdFromAuthTokenRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerIdFromAuthTokenRequest() {};
    FBPAdminGetPlayerIdFromAuthTokenRequest(PlayFab::AdminModels::FGetPlayerIdFromAuthTokenRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerIdFromAuthTokenRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerIdFromAuthTokenResult"))
struct FBPAdminGetPlayerIdFromAuthTokenResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerIdFromAuthTokenResult() {};
    FBPAdminGetPlayerIdFromAuthTokenResult(PlayFab::AdminModels::FGetPlayerIdFromAuthTokenResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerIdFromAuthTokenResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayerProfileRequest"))
struct FBPAdminGetPlayerProfileRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerProfileRequest() {};
    FBPAdminGetPlayerProfileRequest(PlayFab::AdminModels::FGetPlayerProfileRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerProfileRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerProfileResult"))
struct FBPAdminGetPlayerProfileResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerProfileResult() {};
    FBPAdminGetPlayerProfileResult(PlayFab::AdminModels::FGetPlayerProfileResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerProfileResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerSegmentsResult"))
struct FBPAdminGetPlayerSegmentsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerSegmentsResult() {};
    FBPAdminGetPlayerSegmentsResult(PlayFab::AdminModels::FGetPlayerSegmentsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerSegmentsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayerSharedSecretsRequest"))
struct FBPAdminGetPlayerSharedSecretsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerSharedSecretsRequest() {};
    FBPAdminGetPlayerSharedSecretsRequest(PlayFab::AdminModels::FGetPlayerSharedSecretsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerSharedSecretsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerSharedSecretsResult"))
struct FBPAdminGetPlayerSharedSecretsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerSharedSecretsResult() {};
    FBPAdminGetPlayerSharedSecretsResult(PlayFab::AdminModels::FGetPlayerSharedSecretsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerSharedSecretsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayersInSegmentRequest"))
struct FBPAdminGetPlayersInSegmentRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayersInSegmentRequest() {};
    FBPAdminGetPlayersInSegmentRequest(PlayFab::AdminModels::FGetPlayersInSegmentRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayersInSegmentRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayersInSegmentResult"))
struct FBPAdminGetPlayersInSegmentResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayersInSegmentResult() {};
    FBPAdminGetPlayersInSegmentResult(PlayFab::AdminModels::FGetPlayersInSegmentResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayersInSegmentResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayersSegmentsRequest"))
struct FBPAdminGetPlayersSegmentsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayersSegmentsRequest() {};
    FBPAdminGetPlayersSegmentsRequest(PlayFab::AdminModels::FGetPlayersSegmentsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayersSegmentsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayerStatisticDefinitionsRequest"))
struct FBPAdminGetPlayerStatisticDefinitionsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerStatisticDefinitionsRequest() {};
    FBPAdminGetPlayerStatisticDefinitionsRequest(PlayFab::AdminModels::FGetPlayerStatisticDefinitionsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerStatisticDefinitionsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerStatisticDefinitionsResult"))
struct FBPAdminGetPlayerStatisticDefinitionsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerStatisticDefinitionsResult() {};
    FBPAdminGetPlayerStatisticDefinitionsResult(PlayFab::AdminModels::FGetPlayerStatisticDefinitionsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerStatisticDefinitionsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayerStatisticVersionsRequest"))
struct FBPAdminGetPlayerStatisticVersionsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerStatisticVersionsRequest() {};
    FBPAdminGetPlayerStatisticVersionsRequest(PlayFab::AdminModels::FGetPlayerStatisticVersionsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerStatisticVersionsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerStatisticVersionsResult"))
struct FBPAdminGetPlayerStatisticVersionsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerStatisticVersionsResult() {};
    FBPAdminGetPlayerStatisticVersionsResult(PlayFab::AdminModels::FGetPlayerStatisticVersionsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerStatisticVersionsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPlayerTagsRequest"))
struct FBPAdminGetPlayerTagsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerTagsRequest() {};
    FBPAdminGetPlayerTagsRequest(PlayFab::AdminModels::FGetPlayerTagsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerTagsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPlayerTagsResult"))
struct FBPAdminGetPlayerTagsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPlayerTagsResult() {};
    FBPAdminGetPlayerTagsResult(PlayFab::AdminModels::FGetPlayerTagsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPlayerTagsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPolicyRequest"))
struct FBPAdminGetPolicyRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPolicyRequest() {};
    FBPAdminGetPolicyRequest(PlayFab::AdminModels::FGetPolicyRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPolicyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPolicyResponse"))
struct FBPAdminGetPolicyResponse
{
    GENERATED_BODY()
public:
    FBPAdminGetPolicyResponse() {};
    FBPAdminGetPolicyResponse(PlayFab::AdminModels::FGetPolicyResponse InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPolicyResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetPublisherDataRequest"))
struct FBPAdminGetPublisherDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetPublisherDataRequest() {};
    FBPAdminGetPublisherDataRequest(PlayFab::AdminModels::FGetPublisherDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPublisherDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetPublisherDataResult"))
struct FBPAdminGetPublisherDataResult
{
    GENERATED_BODY()
public:
    FBPAdminGetPublisherDataResult() {};
    FBPAdminGetPublisherDataResult(PlayFab::AdminModels::FGetPublisherDataResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetPublisherDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetRandomResultTablesRequest"))
struct FBPAdminGetRandomResultTablesRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetRandomResultTablesRequest() {};
    FBPAdminGetRandomResultTablesRequest(PlayFab::AdminModels::FGetRandomResultTablesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetRandomResultTablesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetRandomResultTablesResult"))
struct FBPAdminGetRandomResultTablesResult
{
    GENERATED_BODY()
public:
    FBPAdminGetRandomResultTablesResult() {};
    FBPAdminGetRandomResultTablesResult(PlayFab::AdminModels::FGetRandomResultTablesResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetRandomResultTablesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetSegmentResult"))
struct FBPAdminGetSegmentResult
{
    GENERATED_BODY()
public:
    FBPAdminGetSegmentResult() {};
    FBPAdminGetSegmentResult(PlayFab::AdminModels::FGetSegmentResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetSegmentResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetServerBuildInfoRequest"))
struct FBPAdminGetServerBuildInfoRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetServerBuildInfoRequest() {};
    FBPAdminGetServerBuildInfoRequest(PlayFab::AdminModels::FGetServerBuildInfoRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetServerBuildInfoRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetServerBuildInfoResult"))
struct FBPAdminGetServerBuildInfoResult
{
    GENERATED_BODY()
public:
    FBPAdminGetServerBuildInfoResult() {};
    FBPAdminGetServerBuildInfoResult(PlayFab::AdminModels::FGetServerBuildInfoResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetServerBuildInfoResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetServerBuildUploadURLRequest"))
struct FBPAdminGetServerBuildUploadURLRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetServerBuildUploadURLRequest() {};
    FBPAdminGetServerBuildUploadURLRequest(PlayFab::AdminModels::FGetServerBuildUploadURLRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetServerBuildUploadURLRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetServerBuildUploadURLResult"))
struct FBPAdminGetServerBuildUploadURLResult
{
    GENERATED_BODY()
public:
    FBPAdminGetServerBuildUploadURLResult() {};
    FBPAdminGetServerBuildUploadURLResult(PlayFab::AdminModels::FGetServerBuildUploadURLResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetServerBuildUploadURLResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetStoreItemsRequest"))
struct FBPAdminGetStoreItemsRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetStoreItemsRequest() {};
    FBPAdminGetStoreItemsRequest(PlayFab::AdminModels::FGetStoreItemsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetStoreItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetStoreItemsResult"))
struct FBPAdminGetStoreItemsResult
{
    GENERATED_BODY()
public:
    FBPAdminGetStoreItemsResult() {};
    FBPAdminGetStoreItemsResult(PlayFab::AdminModels::FGetStoreItemsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetStoreItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetTaskInstanceRequest"))
struct FBPAdminGetTaskInstanceRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetTaskInstanceRequest() {};
    FBPAdminGetTaskInstanceRequest(PlayFab::AdminModels::FGetTaskInstanceRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTaskInstanceRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetTaskInstancesRequest"))
struct FBPAdminGetTaskInstancesRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetTaskInstancesRequest() {};
    FBPAdminGetTaskInstancesRequest(PlayFab::AdminModels::FGetTaskInstancesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTaskInstancesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetTaskInstancesResult"))
struct FBPAdminGetTaskInstancesResult
{
    GENERATED_BODY()
public:
    FBPAdminGetTaskInstancesResult() {};
    FBPAdminGetTaskInstancesResult(PlayFab::AdminModels::FGetTaskInstancesResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTaskInstancesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetTasksRequest"))
struct FBPAdminGetTasksRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetTasksRequest() {};
    FBPAdminGetTasksRequest(PlayFab::AdminModels::FGetTasksRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTasksRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetTasksResult"))
struct FBPAdminGetTasksResult
{
    GENERATED_BODY()
public:
    FBPAdminGetTasksResult() {};
    FBPAdminGetTasksResult(PlayFab::AdminModels::FGetTasksResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTasksResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetTitleDataRequest"))
struct FBPAdminGetTitleDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetTitleDataRequest() {};
    FBPAdminGetTitleDataRequest(PlayFab::AdminModels::FGetTitleDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTitleDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetTitleDataResult"))
struct FBPAdminGetTitleDataResult
{
    GENERATED_BODY()
public:
    FBPAdminGetTitleDataResult() {};
    FBPAdminGetTitleDataResult(PlayFab::AdminModels::FGetTitleDataResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetTitleDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetUserBansRequest"))
struct FBPAdminGetUserBansRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetUserBansRequest() {};
    FBPAdminGetUserBansRequest(PlayFab::AdminModels::FGetUserBansRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetUserBansRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetUserBansResult"))
struct FBPAdminGetUserBansResult
{
    GENERATED_BODY()
public:
    FBPAdminGetUserBansResult() {};
    FBPAdminGetUserBansResult(PlayFab::AdminModels::FGetUserBansResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetUserBansResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetUserDataRequest"))
struct FBPAdminGetUserDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetUserDataRequest() {};
    FBPAdminGetUserDataRequest(PlayFab::AdminModels::FGetUserDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetUserDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetUserDataResult"))
struct FBPAdminGetUserDataResult
{
    GENERATED_BODY()
public:
    FBPAdminGetUserDataResult() {};
    FBPAdminGetUserDataResult(PlayFab::AdminModels::FGetUserDataResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetUserDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGetUserInventoryRequest"))
struct FBPAdminGetUserInventoryRequest
{
    GENERATED_BODY()
public:
    FBPAdminGetUserInventoryRequest() {};
    FBPAdminGetUserInventoryRequest(PlayFab::AdminModels::FGetUserInventoryRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGetUserInventoryRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGetUserInventoryResult"))
struct FBPAdminGetUserInventoryResult
{
    GENERATED_BODY()
public:
    FBPAdminGetUserInventoryResult() {};
    FBPAdminGetUserInventoryResult(PlayFab::AdminModels::FGetUserInventoryResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGetUserInventoryResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGrantedItemInstance", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGrantedItemInstance"))
struct FBPAdminGrantedItemInstance
{
    GENERATED_BODY()
public:
    FBPAdminGrantedItemInstance() {};
    FBPAdminGrantedItemInstance(PlayFab::AdminModels::FGrantedItemInstance InData) : Data(InData) {};
    PlayFab::AdminModels::FGrantedItemInstance Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminGrantItemsToUsersRequest"))
struct FBPAdminGrantItemsToUsersRequest
{
    GENERATED_BODY()
public:
    FBPAdminGrantItemsToUsersRequest() {};
    FBPAdminGrantItemsToUsersRequest(PlayFab::AdminModels::FGrantItemsToUsersRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FGrantItemsToUsersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminGrantItemsToUsersResult"))
struct FBPAdminGrantItemsToUsersResult
{
    GENERATED_BODY()
public:
    FBPAdminGrantItemsToUsersResult() {};
    FBPAdminGrantItemsToUsersResult(PlayFab::AdminModels::FGrantItemsToUsersResult InData) : Data(InData) {};
    PlayFab::AdminModels::FGrantItemsToUsersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminIncrementLimitedEditionItemAvailabilityRequest"))
struct FBPAdminIncrementLimitedEditionItemAvailabilityRequest
{
    GENERATED_BODY()
public:
    FBPAdminIncrementLimitedEditionItemAvailabilityRequest() {};
    FBPAdminIncrementLimitedEditionItemAvailabilityRequest(PlayFab::AdminModels::FIncrementLimitedEditionItemAvailabilityRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FIncrementLimitedEditionItemAvailabilityRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminIncrementLimitedEditionItemAvailabilityResult"))
struct FBPAdminIncrementLimitedEditionItemAvailabilityResult
{
    GENERATED_BODY()
public:
    FBPAdminIncrementLimitedEditionItemAvailabilityResult() {};
    FBPAdminIncrementLimitedEditionItemAvailabilityResult(PlayFab::AdminModels::FIncrementLimitedEditionItemAvailabilityResult InData) : Data(InData) {};
    PlayFab::AdminModels::FIncrementLimitedEditionItemAvailabilityResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminIncrementPlayerStatisticVersionRequest"))
struct FBPAdminIncrementPlayerStatisticVersionRequest
{
    GENERATED_BODY()
public:
    FBPAdminIncrementPlayerStatisticVersionRequest() {};
    FBPAdminIncrementPlayerStatisticVersionRequest(PlayFab::AdminModels::FIncrementPlayerStatisticVersionRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FIncrementPlayerStatisticVersionRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminIncrementPlayerStatisticVersionResult"))
struct FBPAdminIncrementPlayerStatisticVersionResult
{
    GENERATED_BODY()
public:
    FBPAdminIncrementPlayerStatisticVersionResult() {};
    FBPAdminIncrementPlayerStatisticVersionResult(PlayFab::AdminModels::FIncrementPlayerStatisticVersionResult InData) : Data(InData) {};
    PlayFab::AdminModels::FIncrementPlayerStatisticVersionResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminItemGrant", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminItemGrant"))
struct FBPAdminItemGrant
{
    GENERATED_BODY()
public:
    FBPAdminItemGrant() {};
    FBPAdminItemGrant(PlayFab::AdminModels::FItemGrant InData) : Data(InData) {};
    PlayFab::AdminModels::FItemGrant Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminItemInstance", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminItemInstance"))
struct FBPAdminItemInstance
{
    GENERATED_BODY()
public:
    FBPAdminItemInstance() {};
    FBPAdminItemInstance(PlayFab::AdminModels::FItemInstance InData) : Data(InData) {};
    PlayFab::AdminModels::FItemInstance Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminLinkedPlatformAccountModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminLinkedPlatformAccountModel"))
struct FBPAdminLinkedPlatformAccountModel
{
    GENERATED_BODY()
public:
    FBPAdminLinkedPlatformAccountModel() {};
    FBPAdminLinkedPlatformAccountModel(PlayFab::AdminModels::FLinkedPlatformAccountModel InData) : Data(InData) {};
    PlayFab::AdminModels::FLinkedPlatformAccountModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminListBuildsRequest"))
struct FBPAdminListBuildsRequest
{
    GENERATED_BODY()
public:
    FBPAdminListBuildsRequest() {};
    FBPAdminListBuildsRequest(PlayFab::AdminModels::FListBuildsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FListBuildsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminListBuildsResult"))
struct FBPAdminListBuildsResult
{
    GENERATED_BODY()
public:
    FBPAdminListBuildsResult() {};
    FBPAdminListBuildsResult(PlayFab::AdminModels::FListBuildsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FListBuildsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminListVirtualCurrencyTypesRequest"))
struct FBPAdminListVirtualCurrencyTypesRequest
{
    GENERATED_BODY()
public:
    FBPAdminListVirtualCurrencyTypesRequest() {};
    FBPAdminListVirtualCurrencyTypesRequest(PlayFab::AdminModels::FListVirtualCurrencyTypesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FListVirtualCurrencyTypesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminListVirtualCurrencyTypesResult"))
struct FBPAdminListVirtualCurrencyTypesResult
{
    GENERATED_BODY()
public:
    FBPAdminListVirtualCurrencyTypesResult() {};
    FBPAdminListVirtualCurrencyTypesResult(PlayFab::AdminModels::FListVirtualCurrencyTypesResult InData) : Data(InData) {};
    PlayFab::AdminModels::FListVirtualCurrencyTypesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminLocationModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminLocationModel"))
struct FBPAdminLocationModel
{
    GENERATED_BODY()
public:
    FBPAdminLocationModel() {};
    FBPAdminLocationModel(PlayFab::AdminModels::FLocationModel InData) : Data(InData) {};
    PlayFab::AdminModels::FLocationModel Data;
};

UENUM(BlueprintType)
enum class EBPAdminLoginIdentityProvider : uint8
{
    LoginIdentityProvider_Unknown UMETA(DisplayName = "Unknown"),
    LoginIdentityProvider_PlayFab UMETA(DisplayName = "PlayFab"),
    LoginIdentityProvider_Custom UMETA(DisplayName = "Custom"),
    LoginIdentityProvider_GameCenter UMETA(DisplayName = "GameCenter"),
    LoginIdentityProvider_GooglePlay UMETA(DisplayName = "GooglePlay"),
    LoginIdentityProvider_Steam UMETA(DisplayName = "Steam"),
    LoginIdentityProvider_XBoxLive UMETA(DisplayName = "XBoxLive"),
    LoginIdentityProvider_PSN UMETA(DisplayName = "PSN"),
    LoginIdentityProvider_Kongregate UMETA(DisplayName = "Kongregate"),
    LoginIdentityProvider_Facebook UMETA(DisplayName = "Facebook"),
    LoginIdentityProvider_IOSDevice UMETA(DisplayName = "IOSDevice"),
    LoginIdentityProvider_AndroidDevice UMETA(DisplayName = "AndroidDevice"),
    LoginIdentityProvider_Twitch UMETA(DisplayName = "Twitch"),
    LoginIdentityProvider_WindowsHello UMETA(DisplayName = "WindowsHello")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminLogStatement", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminLogStatement"))
struct FBPAdminLogStatement
{
    GENERATED_BODY()
public:
    FBPAdminLogStatement() {};
    FBPAdminLogStatement(PlayFab::AdminModels::FLogStatement InData) : Data(InData) {};
    PlayFab::AdminModels::FLogStatement Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminLookupUserAccountInfoRequest"))
struct FBPAdminLookupUserAccountInfoRequest
{
    GENERATED_BODY()
public:
    FBPAdminLookupUserAccountInfoRequest() {};
    FBPAdminLookupUserAccountInfoRequest(PlayFab::AdminModels::FLookupUserAccountInfoRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FLookupUserAccountInfoRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminLookupUserAccountInfoResult"))
struct FBPAdminLookupUserAccountInfoResult
{
    GENERATED_BODY()
public:
    FBPAdminLookupUserAccountInfoResult() {};
    FBPAdminLookupUserAccountInfoResult(PlayFab::AdminModels::FLookupUserAccountInfoResult InData) : Data(InData) {};
    PlayFab::AdminModels::FLookupUserAccountInfoResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminMembershipModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminMembershipModel"))
struct FBPAdminMembershipModel
{
    GENERATED_BODY()
public:
    FBPAdminMembershipModel() {};
    FBPAdminMembershipModel(PlayFab::AdminModels::FMembershipModel InData) : Data(InData) {};
    PlayFab::AdminModels::FMembershipModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminModifyMatchmakerGameModesRequest"))
struct FBPAdminModifyMatchmakerGameModesRequest
{
    GENERATED_BODY()
public:
    FBPAdminModifyMatchmakerGameModesRequest() {};
    FBPAdminModifyMatchmakerGameModesRequest(PlayFab::AdminModels::FModifyMatchmakerGameModesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FModifyMatchmakerGameModesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminModifyMatchmakerGameModesResult"))
struct FBPAdminModifyMatchmakerGameModesResult
{
    GENERATED_BODY()
public:
    FBPAdminModifyMatchmakerGameModesResult() {};
    FBPAdminModifyMatchmakerGameModesResult(PlayFab::AdminModels::FModifyMatchmakerGameModesResult InData) : Data(InData) {};
    PlayFab::AdminModels::FModifyMatchmakerGameModesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminModifyServerBuildRequest"))
struct FBPAdminModifyServerBuildRequest
{
    GENERATED_BODY()
public:
    FBPAdminModifyServerBuildRequest() {};
    FBPAdminModifyServerBuildRequest(PlayFab::AdminModels::FModifyServerBuildRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FModifyServerBuildRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminModifyServerBuildResult"))
struct FBPAdminModifyServerBuildResult
{
    GENERATED_BODY()
public:
    FBPAdminModifyServerBuildResult() {};
    FBPAdminModifyServerBuildResult(PlayFab::AdminModels::FModifyServerBuildResult InData) : Data(InData) {};
    PlayFab::AdminModels::FModifyServerBuildResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminModifyUserVirtualCurrencyResult"))
struct FBPAdminModifyUserVirtualCurrencyResult
{
    GENERATED_BODY()
public:
    FBPAdminModifyUserVirtualCurrencyResult() {};
    FBPAdminModifyUserVirtualCurrencyResult(PlayFab::AdminModels::FModifyUserVirtualCurrencyResult InData) : Data(InData) {};
    PlayFab::AdminModels::FModifyUserVirtualCurrencyResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminNameIdentifier", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminNameIdentifier"))
struct FBPAdminNameIdentifier
{
    GENERATED_BODY()
public:
    FBPAdminNameIdentifier() {};
    FBPAdminNameIdentifier(PlayFab::AdminModels::FNameIdentifier InData) : Data(InData) {};
    PlayFab::AdminModels::FNameIdentifier Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPermissionStatement", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPermissionStatement"))
struct FBPAdminPermissionStatement
{
    GENERATED_BODY()
public:
    FBPAdminPermissionStatement() {};
    FBPAdminPermissionStatement(PlayFab::AdminModels::FPermissionStatement InData) : Data(InData) {};
    PlayFab::AdminModels::FPermissionStatement Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerLinkedAccount", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerLinkedAccount"))
struct FBPAdminPlayerLinkedAccount
{
    GENERATED_BODY()
public:
    FBPAdminPlayerLinkedAccount() {};
    FBPAdminPlayerLinkedAccount(PlayFab::AdminModels::FPlayerLinkedAccount InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerLinkedAccount Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerLocation", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerLocation"))
struct FBPAdminPlayerLocation
{
    GENERATED_BODY()
public:
    FBPAdminPlayerLocation() {};
    FBPAdminPlayerLocation(PlayFab::AdminModels::FPlayerLocation InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerLocation Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerProfile", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerProfile"))
struct FBPAdminPlayerProfile
{
    GENERATED_BODY()
public:
    FBPAdminPlayerProfile() {};
    FBPAdminPlayerProfile(PlayFab::AdminModels::FPlayerProfile InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerProfile Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerProfileModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerProfileModel"))
struct FBPAdminPlayerProfileModel
{
    GENERATED_BODY()
public:
    FBPAdminPlayerProfileModel() {};
    FBPAdminPlayerProfileModel(PlayFab::AdminModels::FPlayerProfileModel InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerProfileModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerProfileViewConstraints", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerProfileViewConstraints"))
struct FBPAdminPlayerProfileViewConstraints
{
    GENERATED_BODY()
public:
    FBPAdminPlayerProfileViewConstraints() {};
    FBPAdminPlayerProfileViewConstraints(PlayFab::AdminModels::FPlayerProfileViewConstraints InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerProfileViewConstraints Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerStatistic", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerStatistic"))
struct FBPAdminPlayerStatistic
{
    GENERATED_BODY()
public:
    FBPAdminPlayerStatistic() {};
    FBPAdminPlayerStatistic(PlayFab::AdminModels::FPlayerStatistic InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerStatistic Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerStatisticDefinition", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerStatisticDefinition"))
struct FBPAdminPlayerStatisticDefinition
{
    GENERATED_BODY()
public:
    FBPAdminPlayerStatisticDefinition() {};
    FBPAdminPlayerStatisticDefinition(PlayFab::AdminModels::FPlayerStatisticDefinition InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerStatisticDefinition Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPlayerStatisticVersion", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPlayerStatisticVersion"))
struct FBPAdminPlayerStatisticVersion
{
    GENERATED_BODY()
public:
    FBPAdminPlayerStatisticVersion() {};
    FBPAdminPlayerStatisticVersion(PlayFab::AdminModels::FPlayerStatisticVersion InData) : Data(InData) {};
    PlayFab::AdminModels::FPlayerStatisticVersion Data;
};

UENUM(BlueprintType)
enum class EBPAdminPushNotificationPlatform : uint8
{
    PushNotificationPlatform_ApplePushNotificationService UMETA(DisplayName = "ApplePushNotificationService"),
    PushNotificationPlatform_GoogleCloudMessaging UMETA(DisplayName = "GoogleCloudMessaging")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPushNotificationRegistration", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPushNotificationRegistration"))
struct FBPAdminPushNotificationRegistration
{
    GENERATED_BODY()
public:
    FBPAdminPushNotificationRegistration() {};
    FBPAdminPushNotificationRegistration(PlayFab::AdminModels::FPushNotificationRegistration InData) : Data(InData) {};
    PlayFab::AdminModels::FPushNotificationRegistration Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminPushNotificationRegistrationModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminPushNotificationRegistrationModel"))
struct FBPAdminPushNotificationRegistrationModel
{
    GENERATED_BODY()
public:
    FBPAdminPushNotificationRegistrationModel() {};
    FBPAdminPushNotificationRegistrationModel(PlayFab::AdminModels::FPushNotificationRegistrationModel InData) : Data(InData) {};
    PlayFab::AdminModels::FPushNotificationRegistrationModel Data;
};

UENUM(BlueprintType)
enum class EBPAdminPushSetupPlatform : uint8
{
    PushSetupPlatform_GCM UMETA(DisplayName = "GCM"),
    PushSetupPlatform_APNS UMETA(DisplayName = "APNS"),
    PushSetupPlatform_APNS_SANDBOX UMETA(DisplayName = "APNS_SANDBOX")
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRandomResultTable"))
struct FBPAdminRandomResultTable
{
    GENERATED_BODY()
public:
    FBPAdminRandomResultTable() {};
    FBPAdminRandomResultTable(PlayFab::AdminModels::FRandomResultTable InData) : Data(InData) {};
    PlayFab::AdminModels::FRandomResultTable Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRandomResultTableListing"))
struct FBPAdminRandomResultTableListing
{
    GENERATED_BODY()
public:
    FBPAdminRandomResultTableListing() {};
    FBPAdminRandomResultTableListing(PlayFab::AdminModels::FRandomResultTableListing InData) : Data(InData) {};
    PlayFab::AdminModels::FRandomResultTableListing Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRefundPurchaseRequest"))
struct FBPAdminRefundPurchaseRequest
{
    GENERATED_BODY()
public:
    FBPAdminRefundPurchaseRequest() {};
    FBPAdminRefundPurchaseRequest(PlayFab::AdminModels::FRefundPurchaseRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRefundPurchaseRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRefundPurchaseResponse"))
struct FBPAdminRefundPurchaseResponse
{
    GENERATED_BODY()
public:
    FBPAdminRefundPurchaseResponse() {};
    FBPAdminRefundPurchaseResponse(PlayFab::AdminModels::FRefundPurchaseResponse InData) : Data(InData) {};
    PlayFab::AdminModels::FRefundPurchaseResponse Data;
};

UENUM(BlueprintType)
enum class EBPAdminRegion : uint8
{
    Region_USCentral UMETA(DisplayName = "USCentral"),
    Region_USEast UMETA(DisplayName = "USEast"),
    Region_EUWest UMETA(DisplayName = "EUWest"),
    Region_Singapore UMETA(DisplayName = "Singapore"),
    Region_Japan UMETA(DisplayName = "Japan"),
    Region_Brazil UMETA(DisplayName = "Brazil"),
    Region_Australia UMETA(DisplayName = "Australia")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRemovePlayerTagRequest"))
struct FBPAdminRemovePlayerTagRequest
{
    GENERATED_BODY()
public:
    FBPAdminRemovePlayerTagRequest() {};
    FBPAdminRemovePlayerTagRequest(PlayFab::AdminModels::FRemovePlayerTagRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRemovePlayerTagRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRemovePlayerTagResult"))
struct FBPAdminRemovePlayerTagResult
{
    GENERATED_BODY()
public:
    FBPAdminRemovePlayerTagResult() {};
    FBPAdminRemovePlayerTagResult(PlayFab::AdminModels::FRemovePlayerTagResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRemovePlayerTagResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRemoveServerBuildRequest"))
struct FBPAdminRemoveServerBuildRequest
{
    GENERATED_BODY()
public:
    FBPAdminRemoveServerBuildRequest() {};
    FBPAdminRemoveServerBuildRequest(PlayFab::AdminModels::FRemoveServerBuildRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRemoveServerBuildRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRemoveServerBuildResult"))
struct FBPAdminRemoveServerBuildResult
{
    GENERATED_BODY()
public:
    FBPAdminRemoveServerBuildResult() {};
    FBPAdminRemoveServerBuildResult(PlayFab::AdminModels::FRemoveServerBuildResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRemoveServerBuildResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRemoveVirtualCurrencyTypesRequest"))
struct FBPAdminRemoveVirtualCurrencyTypesRequest
{
    GENERATED_BODY()
public:
    FBPAdminRemoveVirtualCurrencyTypesRequest() {};
    FBPAdminRemoveVirtualCurrencyTypesRequest(PlayFab::AdminModels::FRemoveVirtualCurrencyTypesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRemoveVirtualCurrencyTypesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminResetCharacterStatisticsRequest"))
struct FBPAdminResetCharacterStatisticsRequest
{
    GENERATED_BODY()
public:
    FBPAdminResetCharacterStatisticsRequest() {};
    FBPAdminResetCharacterStatisticsRequest(PlayFab::AdminModels::FResetCharacterStatisticsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FResetCharacterStatisticsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminResetCharacterStatisticsResult"))
struct FBPAdminResetCharacterStatisticsResult
{
    GENERATED_BODY()
public:
    FBPAdminResetCharacterStatisticsResult() {};
    FBPAdminResetCharacterStatisticsResult(PlayFab::AdminModels::FResetCharacterStatisticsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FResetCharacterStatisticsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminResetPasswordRequest"))
struct FBPAdminResetPasswordRequest
{
    GENERATED_BODY()
public:
    FBPAdminResetPasswordRequest() {};
    FBPAdminResetPasswordRequest(PlayFab::AdminModels::FResetPasswordRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FResetPasswordRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminResetPasswordResult"))
struct FBPAdminResetPasswordResult
{
    GENERATED_BODY()
public:
    FBPAdminResetPasswordResult() {};
    FBPAdminResetPasswordResult(PlayFab::AdminModels::FResetPasswordResult InData) : Data(InData) {};
    PlayFab::AdminModels::FResetPasswordResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminResetUserStatisticsRequest"))
struct FBPAdminResetUserStatisticsRequest
{
    GENERATED_BODY()
public:
    FBPAdminResetUserStatisticsRequest() {};
    FBPAdminResetUserStatisticsRequest(PlayFab::AdminModels::FResetUserStatisticsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FResetUserStatisticsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminResetUserStatisticsResult"))
struct FBPAdminResetUserStatisticsResult
{
    GENERATED_BODY()
public:
    FBPAdminResetUserStatisticsResult() {};
    FBPAdminResetUserStatisticsResult(PlayFab::AdminModels::FResetUserStatisticsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FResetUserStatisticsResult Data;
};

UENUM(BlueprintType)
enum class EBPAdminResolutionOutcome : uint8
{
    ResolutionOutcome_Revoke UMETA(DisplayName = "Revoke"),
    ResolutionOutcome_Reinstate UMETA(DisplayName = "Reinstate"),
    ResolutionOutcome_Manual UMETA(DisplayName = "Manual")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminResolvePurchaseDisputeRequest"))
struct FBPAdminResolvePurchaseDisputeRequest
{
    GENERATED_BODY()
public:
    FBPAdminResolvePurchaseDisputeRequest() {};
    FBPAdminResolvePurchaseDisputeRequest(PlayFab::AdminModels::FResolvePurchaseDisputeRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FResolvePurchaseDisputeRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminResolvePurchaseDisputeResponse"))
struct FBPAdminResolvePurchaseDisputeResponse
{
    GENERATED_BODY()
public:
    FBPAdminResolvePurchaseDisputeResponse() {};
    FBPAdminResolvePurchaseDisputeResponse(PlayFab::AdminModels::FResolvePurchaseDisputeResponse InData) : Data(InData) {};
    PlayFab::AdminModels::FResolvePurchaseDisputeResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminResultTableNode"))
struct FBPAdminResultTableNode
{
    GENERATED_BODY()
public:
    FBPAdminResultTableNode() {};
    FBPAdminResultTableNode(PlayFab::AdminModels::FResultTableNode InData) : Data(InData) {};
    PlayFab::AdminModels::FResultTableNode Data;
};

UENUM(BlueprintType)
enum class EBPAdminResultTableNodeType : uint8
{
    ResultTableNodeType_ItemId UMETA(DisplayName = "ItemId"),
    ResultTableNodeType_TableId UMETA(DisplayName = "TableId")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRevokeAllBansForUserRequest"))
struct FBPAdminRevokeAllBansForUserRequest
{
    GENERATED_BODY()
public:
    FBPAdminRevokeAllBansForUserRequest() {};
    FBPAdminRevokeAllBansForUserRequest(PlayFab::AdminModels::FRevokeAllBansForUserRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeAllBansForUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRevokeAllBansForUserResult"))
struct FBPAdminRevokeAllBansForUserResult
{
    GENERATED_BODY()
public:
    FBPAdminRevokeAllBansForUserResult() {};
    FBPAdminRevokeAllBansForUserResult(PlayFab::AdminModels::FRevokeAllBansForUserResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeAllBansForUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRevokeBansRequest"))
struct FBPAdminRevokeBansRequest
{
    GENERATED_BODY()
public:
    FBPAdminRevokeBansRequest() {};
    FBPAdminRevokeBansRequest(PlayFab::AdminModels::FRevokeBansRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeBansRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRevokeBansResult"))
struct FBPAdminRevokeBansResult
{
    GENERATED_BODY()
public:
    FBPAdminRevokeBansResult() {};
    FBPAdminRevokeBansResult(PlayFab::AdminModels::FRevokeBansResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeBansResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRevokeInventoryItem", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRevokeInventoryItem"))
struct FBPAdminRevokeInventoryItem
{
    GENERATED_BODY()
public:
    FBPAdminRevokeInventoryItem() {};
    FBPAdminRevokeInventoryItem(PlayFab::AdminModels::FRevokeInventoryItem InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeInventoryItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRevokeInventoryItemRequest"))
struct FBPAdminRevokeInventoryItemRequest
{
    GENERATED_BODY()
public:
    FBPAdminRevokeInventoryItemRequest() {};
    FBPAdminRevokeInventoryItemRequest(PlayFab::AdminModels::FRevokeInventoryItemRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeInventoryItemRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRevokeInventoryItemsRequest"))
struct FBPAdminRevokeInventoryItemsRequest
{
    GENERATED_BODY()
public:
    FBPAdminRevokeInventoryItemsRequest() {};
    FBPAdminRevokeInventoryItemsRequest(PlayFab::AdminModels::FRevokeInventoryItemsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeInventoryItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRevokeInventoryItemsResult"))
struct FBPAdminRevokeInventoryItemsResult
{
    GENERATED_BODY()
public:
    FBPAdminRevokeInventoryItemsResult() {};
    FBPAdminRevokeInventoryItemsResult(PlayFab::AdminModels::FRevokeInventoryItemsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeInventoryItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRevokeInventoryResult"))
struct FBPAdminRevokeInventoryResult
{
    GENERATED_BODY()
public:
    FBPAdminRevokeInventoryResult() {};
    FBPAdminRevokeInventoryResult(PlayFab::AdminModels::FRevokeInventoryResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeInventoryResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRevokeItemError", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRevokeItemError"))
struct FBPAdminRevokeItemError
{
    GENERATED_BODY()
public:
    FBPAdminRevokeItemError() {};
    FBPAdminRevokeItemError(PlayFab::AdminModels::FRevokeItemError InData) : Data(InData) {};
    PlayFab::AdminModels::FRevokeItemError Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminRunTaskRequest"))
struct FBPAdminRunTaskRequest
{
    GENERATED_BODY()
public:
    FBPAdminRunTaskRequest() {};
    FBPAdminRunTaskRequest(PlayFab::AdminModels::FRunTaskRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FRunTaskRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminRunTaskResult"))
struct FBPAdminRunTaskResult
{
    GENERATED_BODY()
public:
    FBPAdminRunTaskResult() {};
    FBPAdminRunTaskResult(PlayFab::AdminModels::FRunTaskResult InData) : Data(InData) {};
    PlayFab::AdminModels::FRunTaskResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminScheduledTask", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminScheduledTask"))
struct FBPAdminScheduledTask
{
    GENERATED_BODY()
public:
    FBPAdminScheduledTask() {};
    FBPAdminScheduledTask(PlayFab::AdminModels::FScheduledTask InData) : Data(InData) {};
    PlayFab::AdminModels::FScheduledTask Data;
};

UENUM(BlueprintType)
enum class EBPAdminScheduledTaskType : uint8
{
    ScheduledTaskType_CloudScript UMETA(DisplayName = "CloudScript"),
    ScheduledTaskType_ActionsOnPlayerSegment UMETA(DisplayName = "ActionsOnPlayerSegment")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminScriptExecutionError", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminScriptExecutionError"))
struct FBPAdminScriptExecutionError
{
    GENERATED_BODY()
public:
    FBPAdminScriptExecutionError() {};
    FBPAdminScriptExecutionError(PlayFab::AdminModels::FScriptExecutionError InData) : Data(InData) {};
    PlayFab::AdminModels::FScriptExecutionError Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSendAccountRecoveryEmailRequest"))
struct FBPAdminSendAccountRecoveryEmailRequest
{
    GENERATED_BODY()
public:
    FBPAdminSendAccountRecoveryEmailRequest() {};
    FBPAdminSendAccountRecoveryEmailRequest(PlayFab::AdminModels::FSendAccountRecoveryEmailRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSendAccountRecoveryEmailRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSendAccountRecoveryEmailResult"))
struct FBPAdminSendAccountRecoveryEmailResult
{
    GENERATED_BODY()
public:
    FBPAdminSendAccountRecoveryEmailResult() {};
    FBPAdminSendAccountRecoveryEmailResult(PlayFab::AdminModels::FSendAccountRecoveryEmailResult InData) : Data(InData) {};
    PlayFab::AdminModels::FSendAccountRecoveryEmailResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSetPlayerSecretRequest"))
struct FBPAdminSetPlayerSecretRequest
{
    GENERATED_BODY()
public:
    FBPAdminSetPlayerSecretRequest() {};
    FBPAdminSetPlayerSecretRequest(PlayFab::AdminModels::FSetPlayerSecretRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSetPlayerSecretRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSetPlayerSecretResult"))
struct FBPAdminSetPlayerSecretResult
{
    GENERATED_BODY()
public:
    FBPAdminSetPlayerSecretResult() {};
    FBPAdminSetPlayerSecretResult(PlayFab::AdminModels::FSetPlayerSecretResult InData) : Data(InData) {};
    PlayFab::AdminModels::FSetPlayerSecretResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSetPublishedRevisionRequest"))
struct FBPAdminSetPublishedRevisionRequest
{
    GENERATED_BODY()
public:
    FBPAdminSetPublishedRevisionRequest() {};
    FBPAdminSetPublishedRevisionRequest(PlayFab::AdminModels::FSetPublishedRevisionRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSetPublishedRevisionRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSetPublishedRevisionResult"))
struct FBPAdminSetPublishedRevisionResult
{
    GENERATED_BODY()
public:
    FBPAdminSetPublishedRevisionResult() {};
    FBPAdminSetPublishedRevisionResult(PlayFab::AdminModels::FSetPublishedRevisionResult InData) : Data(InData) {};
    PlayFab::AdminModels::FSetPublishedRevisionResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSetPublisherDataRequest"))
struct FBPAdminSetPublisherDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminSetPublisherDataRequest() {};
    FBPAdminSetPublisherDataRequest(PlayFab::AdminModels::FSetPublisherDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSetPublisherDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSetPublisherDataResult"))
struct FBPAdminSetPublisherDataResult
{
    GENERATED_BODY()
public:
    FBPAdminSetPublisherDataResult() {};
    FBPAdminSetPublisherDataResult(PlayFab::AdminModels::FSetPublisherDataResult InData) : Data(InData) {};
    PlayFab::AdminModels::FSetPublisherDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSetTitleDataRequest"))
struct FBPAdminSetTitleDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminSetTitleDataRequest() {};
    FBPAdminSetTitleDataRequest(PlayFab::AdminModels::FSetTitleDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSetTitleDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSetTitleDataResult"))
struct FBPAdminSetTitleDataResult
{
    GENERATED_BODY()
public:
    FBPAdminSetTitleDataResult() {};
    FBPAdminSetTitleDataResult(PlayFab::AdminModels::FSetTitleDataResult InData) : Data(InData) {};
    PlayFab::AdminModels::FSetTitleDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSetupPushNotificationRequest"))
struct FBPAdminSetupPushNotificationRequest
{
    GENERATED_BODY()
public:
    FBPAdminSetupPushNotificationRequest() {};
    FBPAdminSetupPushNotificationRequest(PlayFab::AdminModels::FSetupPushNotificationRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSetupPushNotificationRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSetupPushNotificationResult"))
struct FBPAdminSetupPushNotificationResult
{
    GENERATED_BODY()
public:
    FBPAdminSetupPushNotificationResult() {};
    FBPAdminSetupPushNotificationResult(PlayFab::AdminModels::FSetupPushNotificationResult InData) : Data(InData) {};
    PlayFab::AdminModels::FSetupPushNotificationResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSharedSecret", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSharedSecret"))
struct FBPAdminSharedSecret
{
    GENERATED_BODY()
public:
    FBPAdminSharedSecret() {};
    FBPAdminSharedSecret(PlayFab::AdminModels::FSharedSecret InData) : Data(InData) {};
    PlayFab::AdminModels::FSharedSecret Data;
};

UENUM(BlueprintType)
enum class EBPAdminSourceType : uint8
{
    SourceType_Admin UMETA(DisplayName = "Admin"),
    SourceType_BackEnd UMETA(DisplayName = "BackEnd"),
    SourceType_GameClient UMETA(DisplayName = "GameClient"),
    SourceType_GameServer UMETA(DisplayName = "GameServer"),
    SourceType_Partner UMETA(DisplayName = "Partner")
};

UENUM(BlueprintType)
enum class EBPAdminStatisticAggregationMethod : uint8
{
    StatisticAggregationMethod_Last UMETA(DisplayName = "Last"),
    StatisticAggregationMethod_Min UMETA(DisplayName = "Min"),
    StatisticAggregationMethod_Max UMETA(DisplayName = "Max"),
    StatisticAggregationMethod_Sum UMETA(DisplayName = "Sum")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminStatisticModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminStatisticModel"))
struct FBPAdminStatisticModel
{
    GENERATED_BODY()
public:
    FBPAdminStatisticModel() {};
    FBPAdminStatisticModel(PlayFab::AdminModels::FStatisticModel InData) : Data(InData) {};
    PlayFab::AdminModels::FStatisticModel Data;
};

UENUM(BlueprintType)
enum class EBPAdminStatisticResetIntervalOption : uint8
{
    StatisticResetIntervalOption_Never UMETA(DisplayName = "Never"),
    StatisticResetIntervalOption_Hour UMETA(DisplayName = "Hour"),
    StatisticResetIntervalOption_Day UMETA(DisplayName = "Day"),
    StatisticResetIntervalOption_Week UMETA(DisplayName = "Week"),
    StatisticResetIntervalOption_Month UMETA(DisplayName = "Month")
};

UENUM(BlueprintType)
enum class EBPAdminStatisticVersionArchivalStatus : uint8
{
    StatisticVersionArchivalStatus_NotScheduled UMETA(DisplayName = "NotScheduled"),
    StatisticVersionArchivalStatus_Scheduled UMETA(DisplayName = "Scheduled"),
    StatisticVersionArchivalStatus_Queued UMETA(DisplayName = "Queued"),
    StatisticVersionArchivalStatus_InProgress UMETA(DisplayName = "InProgress"),
    StatisticVersionArchivalStatus_Complete UMETA(DisplayName = "Complete")
};

UENUM(BlueprintType)
enum class EBPAdminStatisticVersionStatus : uint8
{
    StatisticVersionStatus_Active UMETA(DisplayName = "Active"),
    StatisticVersionStatus_SnapshotPending UMETA(DisplayName = "SnapshotPending"),
    StatisticVersionStatus_Snapshot UMETA(DisplayName = "Snapshot"),
    StatisticVersionStatus_ArchivalPending UMETA(DisplayName = "ArchivalPending"),
    StatisticVersionStatus_Archived UMETA(DisplayName = "Archived")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminStoreItem", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminStoreItem"))
struct FBPAdminStoreItem
{
    GENERATED_BODY()
public:
    FBPAdminStoreItem() {};
    FBPAdminStoreItem(PlayFab::AdminModels::FStoreItem InData) : Data(InData) {};
    PlayFab::AdminModels::FStoreItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminStoreMarketingModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminStoreMarketingModel"))
struct FBPAdminStoreMarketingModel
{
    GENERATED_BODY()
public:
    FBPAdminStoreMarketingModel() {};
    FBPAdminStoreMarketingModel(PlayFab::AdminModels::FStoreMarketingModel InData) : Data(InData) {};
    PlayFab::AdminModels::FStoreMarketingModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSubscriptionModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminSubscriptionModel"))
struct FBPAdminSubscriptionModel
{
    GENERATED_BODY()
public:
    FBPAdminSubscriptionModel() {};
    FBPAdminSubscriptionModel(PlayFab::AdminModels::FSubscriptionModel InData) : Data(InData) {};
    PlayFab::AdminModels::FSubscriptionModel Data;
};

UENUM(BlueprintType)
enum class EBPAdminSubscriptionProviderStatus : uint8
{
    SubscriptionProviderStatus_NoError UMETA(DisplayName = "NoError"),
    SubscriptionProviderStatus_Cancelled UMETA(DisplayName = "Cancelled"),
    SubscriptionProviderStatus_UnknownError UMETA(DisplayName = "UnknownError"),
    SubscriptionProviderStatus_BillingError UMETA(DisplayName = "BillingError"),
    SubscriptionProviderStatus_ProductUnavailable UMETA(DisplayName = "ProductUnavailable"),
    SubscriptionProviderStatus_CustomerDidNotAcceptPriceChange UMETA(DisplayName = "CustomerDidNotAcceptPriceChange"),
    SubscriptionProviderStatus_FreeTrial UMETA(DisplayName = "FreeTrial"),
    SubscriptionProviderStatus_PaymentPending UMETA(DisplayName = "PaymentPending")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminSubtractUserVirtualCurrencyRequest"))
struct FBPAdminSubtractUserVirtualCurrencyRequest
{
    GENERATED_BODY()
public:
    FBPAdminSubtractUserVirtualCurrencyRequest() {};
    FBPAdminSubtractUserVirtualCurrencyRequest(PlayFab::AdminModels::FSubtractUserVirtualCurrencyRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FSubtractUserVirtualCurrencyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminTagModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminTagModel"))
struct FBPAdminTagModel
{
    GENERATED_BODY()
public:
    FBPAdminTagModel() {};
    FBPAdminTagModel(PlayFab::AdminModels::FTagModel InData) : Data(InData) {};
    PlayFab::AdminModels::FTagModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminTaskInstanceBasicSummary", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminTaskInstanceBasicSummary"))
struct FBPAdminTaskInstanceBasicSummary
{
    GENERATED_BODY()
public:
    FBPAdminTaskInstanceBasicSummary() {};
    FBPAdminTaskInstanceBasicSummary(PlayFab::AdminModels::FTaskInstanceBasicSummary InData) : Data(InData) {};
    PlayFab::AdminModels::FTaskInstanceBasicSummary Data;
};

UENUM(BlueprintType)
enum class EBPAdminTaskInstanceStatus : uint8
{
    TaskInstanceStatus_Succeeded UMETA(DisplayName = "Succeeded"),
    TaskInstanceStatus_Starting UMETA(DisplayName = "Starting"),
    TaskInstanceStatus_InProgress UMETA(DisplayName = "InProgress"),
    TaskInstanceStatus_Failed UMETA(DisplayName = "Failed"),
    TaskInstanceStatus_Aborted UMETA(DisplayName = "Aborted"),
    TaskInstanceStatus_Pending UMETA(DisplayName = "Pending")
};

UENUM(BlueprintType)
enum class EBPAdminTitleActivationStatus : uint8
{
    TitleActivationStatus_None UMETA(DisplayName = "None"),
    TitleActivationStatus_ActivatedTitleKey UMETA(DisplayName = "ActivatedTitleKey"),
    TitleActivationStatus_PendingSteam UMETA(DisplayName = "PendingSteam"),
    TitleActivationStatus_ActivatedSteam UMETA(DisplayName = "ActivatedSteam"),
    TitleActivationStatus_RevokedSteam UMETA(DisplayName = "RevokedSteam")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateBanRequest"))
struct FBPAdminUpdateBanRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateBanRequest() {};
    FBPAdminUpdateBanRequest(PlayFab::AdminModels::FUpdateBanRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateBanRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateBansRequest"))
struct FBPAdminUpdateBansRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateBansRequest() {};
    FBPAdminUpdateBansRequest(PlayFab::AdminModels::FUpdateBansRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateBansRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateBansResult"))
struct FBPAdminUpdateBansResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateBansResult() {};
    FBPAdminUpdateBansResult(PlayFab::AdminModels::FUpdateBansResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateBansResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateCatalogItemsRequest"))
struct FBPAdminUpdateCatalogItemsRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateCatalogItemsRequest() {};
    FBPAdminUpdateCatalogItemsRequest(PlayFab::AdminModels::FUpdateCatalogItemsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateCatalogItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateCatalogItemsResult"))
struct FBPAdminUpdateCatalogItemsResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateCatalogItemsResult() {};
    FBPAdminUpdateCatalogItemsResult(PlayFab::AdminModels::FUpdateCatalogItemsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateCatalogItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateCloudScriptRequest"))
struct FBPAdminUpdateCloudScriptRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateCloudScriptRequest() {};
    FBPAdminUpdateCloudScriptRequest(PlayFab::AdminModels::FUpdateCloudScriptRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateCloudScriptRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateCloudScriptResult"))
struct FBPAdminUpdateCloudScriptResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateCloudScriptResult() {};
    FBPAdminUpdateCloudScriptResult(PlayFab::AdminModels::FUpdateCloudScriptResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateCloudScriptResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdatePlayerSharedSecretRequest"))
struct FBPAdminUpdatePlayerSharedSecretRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdatePlayerSharedSecretRequest() {};
    FBPAdminUpdatePlayerSharedSecretRequest(PlayFab::AdminModels::FUpdatePlayerSharedSecretRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdatePlayerSharedSecretRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdatePlayerSharedSecretResult"))
struct FBPAdminUpdatePlayerSharedSecretResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdatePlayerSharedSecretResult() {};
    FBPAdminUpdatePlayerSharedSecretResult(PlayFab::AdminModels::FUpdatePlayerSharedSecretResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdatePlayerSharedSecretResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdatePlayerStatisticDefinitionRequest"))
struct FBPAdminUpdatePlayerStatisticDefinitionRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdatePlayerStatisticDefinitionRequest() {};
    FBPAdminUpdatePlayerStatisticDefinitionRequest(PlayFab::AdminModels::FUpdatePlayerStatisticDefinitionRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdatePlayerStatisticDefinitionRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdatePlayerStatisticDefinitionResult"))
struct FBPAdminUpdatePlayerStatisticDefinitionResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdatePlayerStatisticDefinitionResult() {};
    FBPAdminUpdatePlayerStatisticDefinitionResult(PlayFab::AdminModels::FUpdatePlayerStatisticDefinitionResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdatePlayerStatisticDefinitionResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdatePolicyRequest"))
struct FBPAdminUpdatePolicyRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdatePolicyRequest() {};
    FBPAdminUpdatePolicyRequest(PlayFab::AdminModels::FUpdatePolicyRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdatePolicyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdatePolicyResponse"))
struct FBPAdminUpdatePolicyResponse
{
    GENERATED_BODY()
public:
    FBPAdminUpdatePolicyResponse() {};
    FBPAdminUpdatePolicyResponse(PlayFab::AdminModels::FUpdatePolicyResponse InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdatePolicyResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateRandomResultTablesRequest"))
struct FBPAdminUpdateRandomResultTablesRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateRandomResultTablesRequest() {};
    FBPAdminUpdateRandomResultTablesRequest(PlayFab::AdminModels::FUpdateRandomResultTablesRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateRandomResultTablesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateRandomResultTablesResult"))
struct FBPAdminUpdateRandomResultTablesResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateRandomResultTablesResult() {};
    FBPAdminUpdateRandomResultTablesResult(PlayFab::AdminModels::FUpdateRandomResultTablesResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateRandomResultTablesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateStoreItemsRequest"))
struct FBPAdminUpdateStoreItemsRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateStoreItemsRequest() {};
    FBPAdminUpdateStoreItemsRequest(PlayFab::AdminModels::FUpdateStoreItemsRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateStoreItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateStoreItemsResult"))
struct FBPAdminUpdateStoreItemsResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateStoreItemsResult() {};
    FBPAdminUpdateStoreItemsResult(PlayFab::AdminModels::FUpdateStoreItemsResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateStoreItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateTaskRequest"))
struct FBPAdminUpdateTaskRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateTaskRequest() {};
    FBPAdminUpdateTaskRequest(PlayFab::AdminModels::FUpdateTaskRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateTaskRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateUserDataRequest"))
struct FBPAdminUpdateUserDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateUserDataRequest() {};
    FBPAdminUpdateUserDataRequest(PlayFab::AdminModels::FUpdateUserDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateUserDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateUserDataResult"))
struct FBPAdminUpdateUserDataResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateUserDataResult() {};
    FBPAdminUpdateUserDataResult(PlayFab::AdminModels::FUpdateUserDataResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateUserDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateUserInternalDataRequest"))
struct FBPAdminUpdateUserInternalDataRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateUserInternalDataRequest() {};
    FBPAdminUpdateUserInternalDataRequest(PlayFab::AdminModels::FUpdateUserInternalDataRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateUserInternalDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUpdateUserTitleDisplayNameRequest"))
struct FBPAdminUpdateUserTitleDisplayNameRequest
{
    GENERATED_BODY()
public:
    FBPAdminUpdateUserTitleDisplayNameRequest() {};
    FBPAdminUpdateUserTitleDisplayNameRequest(PlayFab::AdminModels::FUpdateUserTitleDisplayNameRequest InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateUserTitleDisplayNameRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUpdateUserTitleDisplayNameResult"))
struct FBPAdminUpdateUserTitleDisplayNameResult
{
    GENERATED_BODY()
public:
    FBPAdminUpdateUserTitleDisplayNameResult() {};
    FBPAdminUpdateUserTitleDisplayNameResult(PlayFab::AdminModels::FUpdateUserTitleDisplayNameResult InData) : Data(InData) {};
    PlayFab::AdminModels::FUpdateUserTitleDisplayNameResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserAccountInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserAccountInfo"))
struct FBPAdminUserAccountInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserAccountInfo() {};
    FBPAdminUserAccountInfo(PlayFab::AdminModels::FUserAccountInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserAccountInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserAndroidDeviceInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserAndroidDeviceInfo"))
struct FBPAdminUserAndroidDeviceInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserAndroidDeviceInfo() {};
    FBPAdminUserAndroidDeviceInfo(PlayFab::AdminModels::FUserAndroidDeviceInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserAndroidDeviceInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserCustomIdInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserCustomIdInfo"))
struct FBPAdminUserCustomIdInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserCustomIdInfo() {};
    FBPAdminUserCustomIdInfo(PlayFab::AdminModels::FUserCustomIdInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserCustomIdInfo Data;
};

UENUM(BlueprintType)
enum class EBPAdminUserDataPermission : uint8
{
    UserDataPermission_Private UMETA(DisplayName = "Private"),
    UserDataPermission_Public UMETA(DisplayName = "Public")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserDataRecord", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserDataRecord"))
struct FBPAdminUserDataRecord
{
    GENERATED_BODY()
public:
    FBPAdminUserDataRecord() {};
    FBPAdminUserDataRecord(PlayFab::AdminModels::FUserDataRecord InData) : Data(InData) {};
    PlayFab::AdminModels::FUserDataRecord Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserFacebookInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserFacebookInfo"))
struct FBPAdminUserFacebookInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserFacebookInfo() {};
    FBPAdminUserFacebookInfo(PlayFab::AdminModels::FUserFacebookInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserFacebookInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserGameCenterInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserGameCenterInfo"))
struct FBPAdminUserGameCenterInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserGameCenterInfo() {};
    FBPAdminUserGameCenterInfo(PlayFab::AdminModels::FUserGameCenterInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserGameCenterInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserGoogleInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserGoogleInfo"))
struct FBPAdminUserGoogleInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserGoogleInfo() {};
    FBPAdminUserGoogleInfo(PlayFab::AdminModels::FUserGoogleInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserGoogleInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserIosDeviceInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserIosDeviceInfo"))
struct FBPAdminUserIosDeviceInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserIosDeviceInfo() {};
    FBPAdminUserIosDeviceInfo(PlayFab::AdminModels::FUserIosDeviceInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserIosDeviceInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserKongregateInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserKongregateInfo"))
struct FBPAdminUserKongregateInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserKongregateInfo() {};
    FBPAdminUserKongregateInfo(PlayFab::AdminModels::FUserKongregateInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserKongregateInfo Data;
};

UENUM(BlueprintType)
enum class EBPAdminUserOrigination : uint8
{
    UserOrigination_Organic UMETA(DisplayName = "Organic"),
    UserOrigination_Steam UMETA(DisplayName = "Steam"),
    UserOrigination_Google UMETA(DisplayName = "Google"),
    UserOrigination_Amazon UMETA(DisplayName = "Amazon"),
    UserOrigination_Facebook UMETA(DisplayName = "Facebook"),
    UserOrigination_Kongregate UMETA(DisplayName = "Kongregate"),
    UserOrigination_GamersFirst UMETA(DisplayName = "GamersFirst"),
    UserOrigination_Unknown UMETA(DisplayName = "Unknown"),
    UserOrigination_IOS UMETA(DisplayName = "IOS"),
    UserOrigination_LoadTest UMETA(DisplayName = "LoadTest"),
    UserOrigination_Android UMETA(DisplayName = "Android"),
    UserOrigination_PSN UMETA(DisplayName = "PSN"),
    UserOrigination_GameCenter UMETA(DisplayName = "GameCenter"),
    UserOrigination_CustomId UMETA(DisplayName = "CustomId"),
    UserOrigination_XboxLive UMETA(DisplayName = "XboxLive"),
    UserOrigination_Parse UMETA(DisplayName = "Parse"),
    UserOrigination_Twitch UMETA(DisplayName = "Twitch"),
    UserOrigination_WindowsHello UMETA(DisplayName = "WindowsHello")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserPrivateAccountInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserPrivateAccountInfo"))
struct FBPAdminUserPrivateAccountInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserPrivateAccountInfo() {};
    FBPAdminUserPrivateAccountInfo(PlayFab::AdminModels::FUserPrivateAccountInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserPrivateAccountInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserPsnInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserPsnInfo"))
struct FBPAdminUserPsnInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserPsnInfo() {};
    FBPAdminUserPsnInfo(PlayFab::AdminModels::FUserPsnInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserPsnInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserSteamInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserSteamInfo"))
struct FBPAdminUserSteamInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserSteamInfo() {};
    FBPAdminUserSteamInfo(PlayFab::AdminModels::FUserSteamInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserSteamInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserTitleInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserTitleInfo"))
struct FBPAdminUserTitleInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserTitleInfo() {};
    FBPAdminUserTitleInfo(PlayFab::AdminModels::FUserTitleInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserTitleInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserTwitchInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserTwitchInfo"))
struct FBPAdminUserTwitchInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserTwitchInfo() {};
    FBPAdminUserTwitchInfo(PlayFab::AdminModels::FUserTwitchInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserTwitchInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminUserXboxInfo", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminUserXboxInfo"))
struct FBPAdminUserXboxInfo
{
    GENERATED_BODY()
public:
    FBPAdminUserXboxInfo() {};
    FBPAdminUserXboxInfo(PlayFab::AdminModels::FUserXboxInfo InData) : Data(InData) {};
    PlayFab::AdminModels::FUserXboxInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminValueToDateModel", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminValueToDateModel"))
struct FBPAdminValueToDateModel
{
    GENERATED_BODY()
public:
    FBPAdminValueToDateModel() {};
    FBPAdminValueToDateModel(PlayFab::AdminModels::FValueToDateModel InData) : Data(InData) {};
    PlayFab::AdminModels::FValueToDateModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminVirtualCurrencyData", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminVirtualCurrencyData"))
struct FBPAdminVirtualCurrencyData
{
    GENERATED_BODY()
public:
    FBPAdminVirtualCurrencyData() {};
    FBPAdminVirtualCurrencyData(PlayFab::AdminModels::FVirtualCurrencyData InData) : Data(InData) {};
    PlayFab::AdminModels::FVirtualCurrencyData Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFAdminProxyLibrary.MakeBPAdminVirtualCurrencyRechargeTime", HasNativeBreak = "PlayFabProxy.PFAdminProxyLibrary.BreakBPAdminVirtualCurrencyRechargeTime"))
struct FBPAdminVirtualCurrencyRechargeTime
{
    GENERATED_BODY()
public:
    FBPAdminVirtualCurrencyRechargeTime() {};
    FBPAdminVirtualCurrencyRechargeTime(PlayFab::AdminModels::FVirtualCurrencyRechargeTime InData) : Data(InData) {};
    PlayFab::AdminModels::FVirtualCurrencyRechargeTime Data;
};

DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminAddNewsResultDelegate, const FBPAdminAddNewsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminAddPlayerTagResultDelegate, const FBPAdminAddPlayerTagResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminAddServerBuildResultDelegate, const FBPAdminAddServerBuildResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminBanUsersResultDelegate, const FBPAdminBanUsersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminBlankResultDelegate, const FBPAdminBlankResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminCheckLimitedEditionItemAvailabilityResultDelegate, const FBPAdminCheckLimitedEditionItemAvailabilityResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminCreatePlayerSharedSecretResultDelegate, const FBPAdminCreatePlayerSharedSecretResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminCreatePlayerStatisticDefinitionResultDelegate, const FBPAdminCreatePlayerStatisticDefinitionResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminCreateTaskResultDelegate, const FBPAdminCreateTaskResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminDeletePlayerResultDelegate, const FBPAdminDeletePlayerResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminDeletePlayerSharedSecretResultDelegate, const FBPAdminDeletePlayerSharedSecretResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminDeleteStoreResultDelegate, const FBPAdminDeleteStoreResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminDeleteTitleResultDelegate, const FBPAdminDeleteTitleResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminDeleteUsersResultDelegate, const FBPAdminDeleteUsersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminEmptyResultDelegate, const FBPAdminEmptyResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminExecuteCloudScriptResultDelegate, const FBPAdminExecuteCloudScriptResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetActionsOnPlayersInSegmentTaskInstanceResultDelegate, const FBPAdminGetActionsOnPlayersInSegmentTaskInstanceResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetAllSegmentsResultDelegate, const FBPAdminGetAllSegmentsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetCatalogItemsResultDelegate, const FBPAdminGetCatalogItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetCloudScriptRevisionResultDelegate, const FBPAdminGetCloudScriptRevisionResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetCloudScriptTaskInstanceResultDelegate, const FBPAdminGetCloudScriptTaskInstanceResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetCloudScriptVersionsResultDelegate, const FBPAdminGetCloudScriptVersionsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetContentListResultDelegate, const FBPAdminGetContentListResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetContentUploadUrlResultDelegate, const FBPAdminGetContentUploadUrlResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetDataReportResultDelegate, const FBPAdminGetDataReportResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetMatchmakerGameInfoResultDelegate, const FBPAdminGetMatchmakerGameInfoResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetMatchmakerGameModesResultDelegate, const FBPAdminGetMatchmakerGameModesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerIdFromAuthTokenResultDelegate, const FBPAdminGetPlayerIdFromAuthTokenResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerProfileResultDelegate, const FBPAdminGetPlayerProfileResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerSegmentsResultDelegate, const FBPAdminGetPlayerSegmentsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerSharedSecretsResultDelegate, const FBPAdminGetPlayerSharedSecretsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayersInSegmentResultDelegate, const FBPAdminGetPlayersInSegmentResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerStatisticDefinitionsResultDelegate, const FBPAdminGetPlayerStatisticDefinitionsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerStatisticVersionsResultDelegate, const FBPAdminGetPlayerStatisticVersionsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPlayerTagsResultDelegate, const FBPAdminGetPlayerTagsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPolicyResponseDelegate, const FBPAdminGetPolicyResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetPublisherDataResultDelegate, const FBPAdminGetPublisherDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetRandomResultTablesRequestDelegate, const FBPAdminGetRandomResultTablesRequest&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetRandomResultTablesResultDelegate, const FBPAdminGetRandomResultTablesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetSegmentResultDelegate, const FBPAdminGetSegmentResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetServerBuildInfoResultDelegate, const FBPAdminGetServerBuildInfoResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetServerBuildUploadURLResultDelegate, const FBPAdminGetServerBuildUploadURLResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetStoreItemsResultDelegate, const FBPAdminGetStoreItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetTaskInstancesResultDelegate, const FBPAdminGetTaskInstancesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetTasksResultDelegate, const FBPAdminGetTasksResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetTitleDataResultDelegate, const FBPAdminGetTitleDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetUserBansResultDelegate, const FBPAdminGetUserBansResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetUserDataResultDelegate, const FBPAdminGetUserDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGetUserInventoryResultDelegate, const FBPAdminGetUserInventoryResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminGrantItemsToUsersResultDelegate, const FBPAdminGrantItemsToUsersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminIncrementLimitedEditionItemAvailabilityResultDelegate, const FBPAdminIncrementLimitedEditionItemAvailabilityResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminIncrementPlayerStatisticVersionResultDelegate, const FBPAdminIncrementPlayerStatisticVersionResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminListBuildsResultDelegate, const FBPAdminListBuildsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminListVirtualCurrencyTypesResultDelegate, const FBPAdminListVirtualCurrencyTypesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminLookupUserAccountInfoResultDelegate, const FBPAdminLookupUserAccountInfoResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminModifyMatchmakerGameModesResultDelegate, const FBPAdminModifyMatchmakerGameModesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminModifyServerBuildResultDelegate, const FBPAdminModifyServerBuildResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminModifyUserVirtualCurrencyResultDelegate, const FBPAdminModifyUserVirtualCurrencyResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRandomResultTableDelegate, const FBPAdminRandomResultTable&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRandomResultTableListingDelegate, const FBPAdminRandomResultTableListing&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRefundPurchaseResponseDelegate, const FBPAdminRefundPurchaseResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRemovePlayerTagResultDelegate, const FBPAdminRemovePlayerTagResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRemoveServerBuildResultDelegate, const FBPAdminRemoveServerBuildResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminResetCharacterStatisticsResultDelegate, const FBPAdminResetCharacterStatisticsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminResetPasswordResultDelegate, const FBPAdminResetPasswordResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminResetUserStatisticsResultDelegate, const FBPAdminResetUserStatisticsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminResolvePurchaseDisputeResponseDelegate, const FBPAdminResolvePurchaseDisputeResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminResultTableNodeDelegate, const FBPAdminResultTableNode&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRevokeAllBansForUserResultDelegate, const FBPAdminRevokeAllBansForUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRevokeBansResultDelegate, const FBPAdminRevokeBansResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRevokeInventoryItemsResultDelegate, const FBPAdminRevokeInventoryItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRevokeInventoryResultDelegate, const FBPAdminRevokeInventoryResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminRunTaskResultDelegate, const FBPAdminRunTaskResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminSendAccountRecoveryEmailResultDelegate, const FBPAdminSendAccountRecoveryEmailResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminSetPlayerSecretResultDelegate, const FBPAdminSetPlayerSecretResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminSetPublishedRevisionResultDelegate, const FBPAdminSetPublishedRevisionResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminSetPublisherDataResultDelegate, const FBPAdminSetPublisherDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminSetTitleDataResultDelegate, const FBPAdminSetTitleDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminSetupPushNotificationResultDelegate, const FBPAdminSetupPushNotificationResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateBansResultDelegate, const FBPAdminUpdateBansResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateCatalogItemsResultDelegate, const FBPAdminUpdateCatalogItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateCloudScriptResultDelegate, const FBPAdminUpdateCloudScriptResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdatePlayerSharedSecretResultDelegate, const FBPAdminUpdatePlayerSharedSecretResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdatePlayerStatisticDefinitionResultDelegate, const FBPAdminUpdatePlayerStatisticDefinitionResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdatePolicyResponseDelegate, const FBPAdminUpdatePolicyResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateRandomResultTablesRequestDelegate, const FBPAdminUpdateRandomResultTablesRequest&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateRandomResultTablesResultDelegate, const FBPAdminUpdateRandomResultTablesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateStoreItemsResultDelegate, const FBPAdminUpdateStoreItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateUserDataResultDelegate, const FBPAdminUpdateUserDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPAdminUpdateUserTitleDisplayNameResultDelegate, const FBPAdminUpdateUserTitleDisplayNameResult&, Result);

