// This is automatically generated by PlayFab SDKGenerator. DO NOT modify this manually!
#pragma once

#include "CoreMinimal.h"
#include "Core/PlayFabServerAPI.h"
#include "Core/PlayFabServerDataModels.h"
#include "PlayFabServerBPDataModels.generated.h"

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAdCampaignAttribution", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAdCampaignAttribution"))
struct FBPServerAdCampaignAttribution
{
    GENERATED_BODY()
public:
    FBPServerAdCampaignAttribution() {};
    FBPServerAdCampaignAttribution(PlayFab::ServerModels::FAdCampaignAttribution InData) : Data(InData) {};
    PlayFab::ServerModels::FAdCampaignAttribution Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAdCampaignAttributionModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAdCampaignAttributionModel"))
struct FBPServerAdCampaignAttributionModel
{
    GENERATED_BODY()
public:
    FBPServerAdCampaignAttributionModel() {};
    FBPServerAdCampaignAttributionModel(PlayFab::ServerModels::FAdCampaignAttributionModel InData) : Data(InData) {};
    PlayFab::ServerModels::FAdCampaignAttributionModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAddCharacterVirtualCurrencyRequest"))
struct FBPServerAddCharacterVirtualCurrencyRequest
{
    GENERATED_BODY()
public:
    FBPServerAddCharacterVirtualCurrencyRequest() {};
    FBPServerAddCharacterVirtualCurrencyRequest(PlayFab::ServerModels::FAddCharacterVirtualCurrencyRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAddCharacterVirtualCurrencyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAddFriendRequest"))
struct FBPServerAddFriendRequest
{
    GENERATED_BODY()
public:
    FBPServerAddFriendRequest() {};
    FBPServerAddFriendRequest(PlayFab::ServerModels::FAddFriendRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAddFriendRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAddPlayerTagRequest"))
struct FBPServerAddPlayerTagRequest
{
    GENERATED_BODY()
public:
    FBPServerAddPlayerTagRequest() {};
    FBPServerAddPlayerTagRequest(PlayFab::ServerModels::FAddPlayerTagRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAddPlayerTagRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAddPlayerTagResult"))
struct FBPServerAddPlayerTagResult
{
    GENERATED_BODY()
public:
    FBPServerAddPlayerTagResult() {};
    FBPServerAddPlayerTagResult(PlayFab::ServerModels::FAddPlayerTagResult InData) : Data(InData) {};
    PlayFab::ServerModels::FAddPlayerTagResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAddSharedGroupMembersRequest"))
struct FBPServerAddSharedGroupMembersRequest
{
    GENERATED_BODY()
public:
    FBPServerAddSharedGroupMembersRequest() {};
    FBPServerAddSharedGroupMembersRequest(PlayFab::ServerModels::FAddSharedGroupMembersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAddSharedGroupMembersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAddSharedGroupMembersResult"))
struct FBPServerAddSharedGroupMembersResult
{
    GENERATED_BODY()
public:
    FBPServerAddSharedGroupMembersResult() {};
    FBPServerAddSharedGroupMembersResult(PlayFab::ServerModels::FAddSharedGroupMembersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FAddSharedGroupMembersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAddUserVirtualCurrencyRequest"))
struct FBPServerAddUserVirtualCurrencyRequest
{
    GENERATED_BODY()
public:
    FBPServerAddUserVirtualCurrencyRequest() {};
    FBPServerAddUserVirtualCurrencyRequest(PlayFab::ServerModels::FAddUserVirtualCurrencyRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAddUserVirtualCurrencyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAdvancedPushPlatformMsg", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAdvancedPushPlatformMsg"))
struct FBPServerAdvancedPushPlatformMsg
{
    GENERATED_BODY()
public:
    FBPServerAdvancedPushPlatformMsg() {};
    FBPServerAdvancedPushPlatformMsg(PlayFab::ServerModels::FAdvancedPushPlatformMsg InData) : Data(InData) {};
    PlayFab::ServerModels::FAdvancedPushPlatformMsg Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAuthenticateSessionTicketRequest"))
struct FBPServerAuthenticateSessionTicketRequest
{
    GENERATED_BODY()
public:
    FBPServerAuthenticateSessionTicketRequest() {};
    FBPServerAuthenticateSessionTicketRequest(PlayFab::ServerModels::FAuthenticateSessionTicketRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAuthenticateSessionTicketRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAuthenticateSessionTicketResult"))
struct FBPServerAuthenticateSessionTicketResult
{
    GENERATED_BODY()
public:
    FBPServerAuthenticateSessionTicketResult() {};
    FBPServerAuthenticateSessionTicketResult(PlayFab::ServerModels::FAuthenticateSessionTicketResult InData) : Data(InData) {};
    PlayFab::ServerModels::FAuthenticateSessionTicketResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAwardSteamAchievementItem", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAwardSteamAchievementItem"))
struct FBPServerAwardSteamAchievementItem
{
    GENERATED_BODY()
public:
    FBPServerAwardSteamAchievementItem() {};
    FBPServerAwardSteamAchievementItem(PlayFab::ServerModels::FAwardSteamAchievementItem InData) : Data(InData) {};
    PlayFab::ServerModels::FAwardSteamAchievementItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerAwardSteamAchievementRequest"))
struct FBPServerAwardSteamAchievementRequest
{
    GENERATED_BODY()
public:
    FBPServerAwardSteamAchievementRequest() {};
    FBPServerAwardSteamAchievementRequest(PlayFab::ServerModels::FAwardSteamAchievementRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FAwardSteamAchievementRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerAwardSteamAchievementResult"))
struct FBPServerAwardSteamAchievementResult
{
    GENERATED_BODY()
public:
    FBPServerAwardSteamAchievementResult() {};
    FBPServerAwardSteamAchievementResult(PlayFab::ServerModels::FAwardSteamAchievementResult InData) : Data(InData) {};
    PlayFab::ServerModels::FAwardSteamAchievementResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerBanInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerBanInfo"))
struct FBPServerBanInfo
{
    GENERATED_BODY()
public:
    FBPServerBanInfo() {};
    FBPServerBanInfo(PlayFab::ServerModels::FBanInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FBanInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerBanRequest"))
struct FBPServerBanRequest
{
    GENERATED_BODY()
public:
    FBPServerBanRequest() {};
    FBPServerBanRequest(PlayFab::ServerModels::FBanRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FBanRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerBanUsersRequest"))
struct FBPServerBanUsersRequest
{
    GENERATED_BODY()
public:
    FBPServerBanUsersRequest() {};
    FBPServerBanUsersRequest(PlayFab::ServerModels::FBanUsersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FBanUsersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerBanUsersResult"))
struct FBPServerBanUsersResult
{
    GENERATED_BODY()
public:
    FBPServerBanUsersResult() {};
    FBPServerBanUsersResult(PlayFab::ServerModels::FBanUsersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FBanUsersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCatalogItem", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCatalogItem"))
struct FBPServerCatalogItem
{
    GENERATED_BODY()
public:
    FBPServerCatalogItem() {};
    FBPServerCatalogItem(PlayFab::ServerModels::FCatalogItem InData) : Data(InData) {};
    PlayFab::ServerModels::FCatalogItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCatalogItemBundleInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCatalogItemBundleInfo"))
struct FBPServerCatalogItemBundleInfo
{
    GENERATED_BODY()
public:
    FBPServerCatalogItemBundleInfo() {};
    FBPServerCatalogItemBundleInfo(PlayFab::ServerModels::FCatalogItemBundleInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FCatalogItemBundleInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCatalogItemConsumableInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCatalogItemConsumableInfo"))
struct FBPServerCatalogItemConsumableInfo
{
    GENERATED_BODY()
public:
    FBPServerCatalogItemConsumableInfo() {};
    FBPServerCatalogItemConsumableInfo(PlayFab::ServerModels::FCatalogItemConsumableInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FCatalogItemConsumableInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCatalogItemContainerInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCatalogItemContainerInfo"))
struct FBPServerCatalogItemContainerInfo
{
    GENERATED_BODY()
public:
    FBPServerCatalogItemContainerInfo() {};
    FBPServerCatalogItemContainerInfo(PlayFab::ServerModels::FCatalogItemContainerInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FCatalogItemContainerInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCharacterInventory", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCharacterInventory"))
struct FBPServerCharacterInventory
{
    GENERATED_BODY()
public:
    FBPServerCharacterInventory() {};
    FBPServerCharacterInventory(PlayFab::ServerModels::FCharacterInventory InData) : Data(InData) {};
    PlayFab::ServerModels::FCharacterInventory Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCharacterLeaderboardEntry", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCharacterLeaderboardEntry"))
struct FBPServerCharacterLeaderboardEntry
{
    GENERATED_BODY()
public:
    FBPServerCharacterLeaderboardEntry() {};
    FBPServerCharacterLeaderboardEntry(PlayFab::ServerModels::FCharacterLeaderboardEntry InData) : Data(InData) {};
    PlayFab::ServerModels::FCharacterLeaderboardEntry Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCharacterResult"))
struct FBPServerCharacterResult
{
    GENERATED_BODY()
public:
    FBPServerCharacterResult() {};
    FBPServerCharacterResult(PlayFab::ServerModels::FCharacterResult InData) : Data(InData) {};
    PlayFab::ServerModels::FCharacterResult Data;
};

UENUM(BlueprintType)
enum class EBPServerCloudScriptRevisionOption : uint8
{
    CloudScriptRevisionOption_Live UMETA(DisplayName = "Live"),
    CloudScriptRevisionOption_Latest UMETA(DisplayName = "Latest"),
    CloudScriptRevisionOption_Specific UMETA(DisplayName = "Specific")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerConsumeItemRequest"))
struct FBPServerConsumeItemRequest
{
    GENERATED_BODY()
public:
    FBPServerConsumeItemRequest() {};
    FBPServerConsumeItemRequest(PlayFab::ServerModels::FConsumeItemRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FConsumeItemRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerConsumeItemResult"))
struct FBPServerConsumeItemResult
{
    GENERATED_BODY()
public:
    FBPServerConsumeItemResult() {};
    FBPServerConsumeItemResult(PlayFab::ServerModels::FConsumeItemResult InData) : Data(InData) {};
    PlayFab::ServerModels::FConsumeItemResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerContactEmailInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerContactEmailInfo"))
struct FBPServerContactEmailInfo
{
    GENERATED_BODY()
public:
    FBPServerContactEmailInfo() {};
    FBPServerContactEmailInfo(PlayFab::ServerModels::FContactEmailInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FContactEmailInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerContactEmailInfoModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerContactEmailInfoModel"))
struct FBPServerContactEmailInfoModel
{
    GENERATED_BODY()
public:
    FBPServerContactEmailInfoModel() {};
    FBPServerContactEmailInfoModel(PlayFab::ServerModels::FContactEmailInfoModel InData) : Data(InData) {};
    PlayFab::ServerModels::FContactEmailInfoModel Data;
};

UENUM(BlueprintType)
enum class EBPServerContinentCode : uint8
{
    ContinentCode_AF UMETA(DisplayName = "AF"),
    ContinentCode_AN UMETA(DisplayName = "AN"),
    ContinentCode_AS UMETA(DisplayName = "AS"),
    ContinentCode_EU UMETA(DisplayName = "EU"),
    ContinentCode_NA UMETA(DisplayName = "NA"),
    ContinentCode_OC UMETA(DisplayName = "OC"),
    ContinentCode_SA UMETA(DisplayName = "SA")
};

UENUM(BlueprintType)
enum class EBPServerCountryCode : uint8
{
    CountryCode_AF UMETA(DisplayName = "AF"),
    CountryCode_AX UMETA(DisplayName = "AX"),
    CountryCode_AL UMETA(DisplayName = "AL"),
    CountryCode_DZ UMETA(DisplayName = "DZ"),
    CountryCode_AS UMETA(DisplayName = "AS"),
    CountryCode_AD UMETA(DisplayName = "AD"),
    CountryCode_AO UMETA(DisplayName = "AO"),
    CountryCode_AI UMETA(DisplayName = "AI"),
    CountryCode_AQ UMETA(DisplayName = "AQ"),
    CountryCode_AG UMETA(DisplayName = "AG"),
    CountryCode_AR UMETA(DisplayName = "AR"),
    CountryCode_AM UMETA(DisplayName = "AM"),
    CountryCode_AW UMETA(DisplayName = "AW"),
    CountryCode_AU UMETA(DisplayName = "AU"),
    CountryCode_AT UMETA(DisplayName = "AT"),
    CountryCode_AZ UMETA(DisplayName = "AZ"),
    CountryCode_BS UMETA(DisplayName = "BS"),
    CountryCode_BH UMETA(DisplayName = "BH"),
    CountryCode_BD UMETA(DisplayName = "BD"),
    CountryCode_BB UMETA(DisplayName = "BB"),
    CountryCode_BY UMETA(DisplayName = "BY"),
    CountryCode_BE UMETA(DisplayName = "BE"),
    CountryCode_BZ UMETA(DisplayName = "BZ"),
    CountryCode_BJ UMETA(DisplayName = "BJ"),
    CountryCode_BM UMETA(DisplayName = "BM"),
    CountryCode_BT UMETA(DisplayName = "BT"),
    CountryCode_BO UMETA(DisplayName = "BO"),
    CountryCode_BQ UMETA(DisplayName = "BQ"),
    CountryCode_BA UMETA(DisplayName = "BA"),
    CountryCode_BW UMETA(DisplayName = "BW"),
    CountryCode_BV UMETA(DisplayName = "BV"),
    CountryCode_BR UMETA(DisplayName = "BR"),
    CountryCode_IO UMETA(DisplayName = "IO"),
    CountryCode_BN UMETA(DisplayName = "BN"),
    CountryCode_BG UMETA(DisplayName = "BG"),
    CountryCode_BF UMETA(DisplayName = "BF"),
    CountryCode_BI UMETA(DisplayName = "BI"),
    CountryCode_KH UMETA(DisplayName = "KH"),
    CountryCode_CM UMETA(DisplayName = "CM"),
    CountryCode_CA UMETA(DisplayName = "CA"),
    CountryCode_CV UMETA(DisplayName = "CV"),
    CountryCode_KY UMETA(DisplayName = "KY"),
    CountryCode_CF UMETA(DisplayName = "CF"),
    CountryCode_TD UMETA(DisplayName = "TD"),
    CountryCode_CL UMETA(DisplayName = "CL"),
    CountryCode_CN UMETA(DisplayName = "CN"),
    CountryCode_CX UMETA(DisplayName = "CX"),
    CountryCode_CC UMETA(DisplayName = "CC"),
    CountryCode_CO UMETA(DisplayName = "CO"),
    CountryCode_KM UMETA(DisplayName = "KM"),
    CountryCode_CG UMETA(DisplayName = "CG"),
    CountryCode_CD UMETA(DisplayName = "CD"),
    CountryCode_CK UMETA(DisplayName = "CK"),
    CountryCode_CR UMETA(DisplayName = "CR"),
    CountryCode_CI UMETA(DisplayName = "CI"),
    CountryCode_HR UMETA(DisplayName = "HR"),
    CountryCode_CU UMETA(DisplayName = "CU"),
    CountryCode_CW UMETA(DisplayName = "CW"),
    CountryCode_CY UMETA(DisplayName = "CY"),
    CountryCode_CZ UMETA(DisplayName = "CZ"),
    CountryCode_DK UMETA(DisplayName = "DK"),
    CountryCode_DJ UMETA(DisplayName = "DJ"),
    CountryCode_DM UMETA(DisplayName = "DM"),
    CountryCode_DO UMETA(DisplayName = "DO"),
    CountryCode_EC UMETA(DisplayName = "EC"),
    CountryCode_EG UMETA(DisplayName = "EG"),
    CountryCode_SV UMETA(DisplayName = "SV"),
    CountryCode_GQ UMETA(DisplayName = "GQ"),
    CountryCode_ER UMETA(DisplayName = "ER"),
    CountryCode_EE UMETA(DisplayName = "EE"),
    CountryCode_ET UMETA(DisplayName = "ET"),
    CountryCode_FK UMETA(DisplayName = "FK"),
    CountryCode_FO UMETA(DisplayName = "FO"),
    CountryCode_FJ UMETA(DisplayName = "FJ"),
    CountryCode_FI UMETA(DisplayName = "FI"),
    CountryCode_FR UMETA(DisplayName = "FR"),
    CountryCode_GF UMETA(DisplayName = "GF"),
    CountryCode_PF UMETA(DisplayName = "PF"),
    CountryCode_TF UMETA(DisplayName = "TF"),
    CountryCode_GA UMETA(DisplayName = "GA"),
    CountryCode_GM UMETA(DisplayName = "GM"),
    CountryCode_GE UMETA(DisplayName = "GE"),
    CountryCode_DE UMETA(DisplayName = "DE"),
    CountryCode_GH UMETA(DisplayName = "GH"),
    CountryCode_GI UMETA(DisplayName = "GI"),
    CountryCode_GR UMETA(DisplayName = "GR"),
    CountryCode_GL UMETA(DisplayName = "GL"),
    CountryCode_GD UMETA(DisplayName = "GD"),
    CountryCode_GP UMETA(DisplayName = "GP"),
    CountryCode_GU UMETA(DisplayName = "GU"),
    CountryCode_GT UMETA(DisplayName = "GT"),
    CountryCode_GG UMETA(DisplayName = "GG"),
    CountryCode_GN UMETA(DisplayName = "GN"),
    CountryCode_GW UMETA(DisplayName = "GW"),
    CountryCode_GY UMETA(DisplayName = "GY"),
    CountryCode_HT UMETA(DisplayName = "HT"),
    CountryCode_HM UMETA(DisplayName = "HM"),
    CountryCode_VA UMETA(DisplayName = "VA"),
    CountryCode_HN UMETA(DisplayName = "HN"),
    CountryCode_HK UMETA(DisplayName = "HK"),
    CountryCode_HU UMETA(DisplayName = "HU"),
    CountryCode_IS UMETA(DisplayName = "IS"),
    CountryCode_IN UMETA(DisplayName = "IN"),
    CountryCode_ID UMETA(DisplayName = "ID"),
    CountryCode_IR UMETA(DisplayName = "IR"),
    CountryCode_IQ UMETA(DisplayName = "IQ"),
    CountryCode_IE UMETA(DisplayName = "IE"),
    CountryCode_IM UMETA(DisplayName = "IM"),
    CountryCode_IL UMETA(DisplayName = "IL"),
    CountryCode_IT UMETA(DisplayName = "IT"),
    CountryCode_JM UMETA(DisplayName = "JM"),
    CountryCode_JP UMETA(DisplayName = "JP"),
    CountryCode_JE UMETA(DisplayName = "JE"),
    CountryCode_JO UMETA(DisplayName = "JO"),
    CountryCode_KZ UMETA(DisplayName = "KZ"),
    CountryCode_KE UMETA(DisplayName = "KE"),
    CountryCode_KI UMETA(DisplayName = "KI"),
    CountryCode_KP UMETA(DisplayName = "KP"),
    CountryCode_KR UMETA(DisplayName = "KR"),
    CountryCode_KW UMETA(DisplayName = "KW"),
    CountryCode_KG UMETA(DisplayName = "KG"),
    CountryCode_LA UMETA(DisplayName = "LA"),
    CountryCode_LV UMETA(DisplayName = "LV"),
    CountryCode_LB UMETA(DisplayName = "LB"),
    CountryCode_LS UMETA(DisplayName = "LS"),
    CountryCode_LR UMETA(DisplayName = "LR"),
    CountryCode_LY UMETA(DisplayName = "LY"),
    CountryCode_LI UMETA(DisplayName = "LI"),
    CountryCode_LT UMETA(DisplayName = "LT"),
    CountryCode_LU UMETA(DisplayName = "LU"),
    CountryCode_MO UMETA(DisplayName = "MO"),
    CountryCode_MK UMETA(DisplayName = "MK"),
    CountryCode_MG UMETA(DisplayName = "MG"),
    CountryCode_MW UMETA(DisplayName = "MW"),
    CountryCode_MY UMETA(DisplayName = "MY"),
    CountryCode_MV UMETA(DisplayName = "MV"),
    CountryCode_ML UMETA(DisplayName = "ML"),
    CountryCode_MT UMETA(DisplayName = "MT"),
    CountryCode_MH UMETA(DisplayName = "MH"),
    CountryCode_MQ UMETA(DisplayName = "MQ"),
    CountryCode_MR UMETA(DisplayName = "MR"),
    CountryCode_MU UMETA(DisplayName = "MU"),
    CountryCode_YT UMETA(DisplayName = "YT"),
    CountryCode_MX UMETA(DisplayName = "MX"),
    CountryCode_FM UMETA(DisplayName = "FM"),
    CountryCode_MD UMETA(DisplayName = "MD"),
    CountryCode_MC UMETA(DisplayName = "MC"),
    CountryCode_MN UMETA(DisplayName = "MN"),
    CountryCode_ME UMETA(DisplayName = "ME"),
    CountryCode_MS UMETA(DisplayName = "MS"),
    CountryCode_MA UMETA(DisplayName = "MA"),
    CountryCode_MZ UMETA(DisplayName = "MZ"),
    CountryCode_MM UMETA(DisplayName = "MM"),
    CountryCode_NA UMETA(DisplayName = "NA"),
    CountryCode_NR UMETA(DisplayName = "NR"),
    CountryCode_NP UMETA(DisplayName = "NP"),
    CountryCode_NL UMETA(DisplayName = "NL"),
    CountryCode_NC UMETA(DisplayName = "NC"),
    CountryCode_NZ UMETA(DisplayName = "NZ"),
    CountryCode_NI UMETA(DisplayName = "NI"),
    CountryCode_NE UMETA(DisplayName = "NE"),
    CountryCode_NG UMETA(DisplayName = "NG"),
    CountryCode_NU UMETA(DisplayName = "NU"),
    CountryCode_NF UMETA(DisplayName = "NF"),
    CountryCode_MP UMETA(DisplayName = "MP"),
    CountryCode_NO UMETA(DisplayName = "NO"),
    CountryCode_OM UMETA(DisplayName = "OM"),
    CountryCode_PK UMETA(DisplayName = "PK"),
    CountryCode_PW UMETA(DisplayName = "PW"),
    CountryCode_PS UMETA(DisplayName = "PS"),
    CountryCode_PA UMETA(DisplayName = "PA"),
    CountryCode_PG UMETA(DisplayName = "PG"),
    CountryCode_PY UMETA(DisplayName = "PY"),
    CountryCode_PE UMETA(DisplayName = "PE"),
    CountryCode_PH UMETA(DisplayName = "PH"),
    CountryCode_PN UMETA(DisplayName = "PN"),
    CountryCode_PL UMETA(DisplayName = "PL"),
    CountryCode_PT UMETA(DisplayName = "PT"),
    CountryCode_PR UMETA(DisplayName = "PR"),
    CountryCode_QA UMETA(DisplayName = "QA"),
    CountryCode_RE UMETA(DisplayName = "RE"),
    CountryCode_RO UMETA(DisplayName = "RO"),
    CountryCode_RU UMETA(DisplayName = "RU"),
    CountryCode_RW UMETA(DisplayName = "RW"),
    CountryCode_BL UMETA(DisplayName = "BL"),
    CountryCode_SH UMETA(DisplayName = "SH"),
    CountryCode_KN UMETA(DisplayName = "KN"),
    CountryCode_LC UMETA(DisplayName = "LC"),
    CountryCode_MF UMETA(DisplayName = "MF"),
    CountryCode_PM UMETA(DisplayName = "PM"),
    CountryCode_VC UMETA(DisplayName = "VC"),
    CountryCode_WS UMETA(DisplayName = "WS"),
    CountryCode_SM UMETA(DisplayName = "SM"),
    CountryCode_ST UMETA(DisplayName = "ST"),
    CountryCode_SA UMETA(DisplayName = "SA"),
    CountryCode_SN UMETA(DisplayName = "SN"),
    CountryCode_RS UMETA(DisplayName = "RS"),
    CountryCode_SC UMETA(DisplayName = "SC"),
    CountryCode_SL UMETA(DisplayName = "SL"),
    CountryCode_SG UMETA(DisplayName = "SG"),
    CountryCode_SX UMETA(DisplayName = "SX"),
    CountryCode_SK UMETA(DisplayName = "SK"),
    CountryCode_SI UMETA(DisplayName = "SI"),
    CountryCode_SB UMETA(DisplayName = "SB"),
    CountryCode_SO UMETA(DisplayName = "SO"),
    CountryCode_ZA UMETA(DisplayName = "ZA"),
    CountryCode_GS UMETA(DisplayName = "GS"),
    CountryCode_SS UMETA(DisplayName = "SS"),
    CountryCode_ES UMETA(DisplayName = "ES"),
    CountryCode_LK UMETA(DisplayName = "LK"),
    CountryCode_SD UMETA(DisplayName = "SD"),
    CountryCode_SR UMETA(DisplayName = "SR"),
    CountryCode_SJ UMETA(DisplayName = "SJ"),
    CountryCode_SZ UMETA(DisplayName = "SZ"),
    CountryCode_SE UMETA(DisplayName = "SE"),
    CountryCode_CH UMETA(DisplayName = "CH"),
    CountryCode_SY UMETA(DisplayName = "SY"),
    CountryCode_TW UMETA(DisplayName = "TW"),
    CountryCode_TJ UMETA(DisplayName = "TJ"),
    CountryCode_TZ UMETA(DisplayName = "TZ"),
    CountryCode_TH UMETA(DisplayName = "TH"),
    CountryCode_TL UMETA(DisplayName = "TL"),
    CountryCode_TG UMETA(DisplayName = "TG"),
    CountryCode_TK UMETA(DisplayName = "TK"),
    CountryCode_TO UMETA(DisplayName = "TO"),
    CountryCode_TT UMETA(DisplayName = "TT"),
    CountryCode_TN UMETA(DisplayName = "TN"),
    CountryCode_TR UMETA(DisplayName = "TR"),
    CountryCode_TM UMETA(DisplayName = "TM"),
    CountryCode_TC UMETA(DisplayName = "TC"),
    CountryCode_TV UMETA(DisplayName = "TV"),
    CountryCode_UG UMETA(DisplayName = "UG"),
    CountryCode_UA UMETA(DisplayName = "UA"),
    CountryCode_AE UMETA(DisplayName = "AE"),
    CountryCode_GB UMETA(DisplayName = "GB"),
    CountryCode_US UMETA(DisplayName = "US"),
    CountryCode_UM UMETA(DisplayName = "UM"),
    CountryCode_UY UMETA(DisplayName = "UY"),
    CountryCode_UZ UMETA(DisplayName = "UZ"),
    CountryCode_VU UMETA(DisplayName = "VU"),
    CountryCode_VE UMETA(DisplayName = "VE"),
    CountryCode_VN UMETA(DisplayName = "VN"),
    CountryCode_VG UMETA(DisplayName = "VG"),
    CountryCode_VI UMETA(DisplayName = "VI"),
    CountryCode_WF UMETA(DisplayName = "WF"),
    CountryCode_EH UMETA(DisplayName = "EH"),
    CountryCode_YE UMETA(DisplayName = "YE"),
    CountryCode_ZM UMETA(DisplayName = "ZM"),
    CountryCode_ZW UMETA(DisplayName = "ZW")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerCreateSharedGroupRequest"))
struct FBPServerCreateSharedGroupRequest
{
    GENERATED_BODY()
public:
    FBPServerCreateSharedGroupRequest() {};
    FBPServerCreateSharedGroupRequest(PlayFab::ServerModels::FCreateSharedGroupRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FCreateSharedGroupRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerCreateSharedGroupResult"))
struct FBPServerCreateSharedGroupResult
{
    GENERATED_BODY()
public:
    FBPServerCreateSharedGroupResult() {};
    FBPServerCreateSharedGroupResult(PlayFab::ServerModels::FCreateSharedGroupResult InData) : Data(InData) {};
    PlayFab::ServerModels::FCreateSharedGroupResult Data;
};

UENUM(BlueprintType)
enum class EBPServerCurrency : uint8
{
    Currency_AED UMETA(DisplayName = "AED"),
    Currency_AFN UMETA(DisplayName = "AFN"),
    Currency_ALL UMETA(DisplayName = "ALL"),
    Currency_AMD UMETA(DisplayName = "AMD"),
    Currency_ANG UMETA(DisplayName = "ANG"),
    Currency_AOA UMETA(DisplayName = "AOA"),
    Currency_ARS UMETA(DisplayName = "ARS"),
    Currency_AUD UMETA(DisplayName = "AUD"),
    Currency_AWG UMETA(DisplayName = "AWG"),
    Currency_AZN UMETA(DisplayName = "AZN"),
    Currency_BAM UMETA(DisplayName = "BAM"),
    Currency_BBD UMETA(DisplayName = "BBD"),
    Currency_BDT UMETA(DisplayName = "BDT"),
    Currency_BGN UMETA(DisplayName = "BGN"),
    Currency_BHD UMETA(DisplayName = "BHD"),
    Currency_BIF UMETA(DisplayName = "BIF"),
    Currency_BMD UMETA(DisplayName = "BMD"),
    Currency_BND UMETA(DisplayName = "BND"),
    Currency_BOB UMETA(DisplayName = "BOB"),
    Currency_BRL UMETA(DisplayName = "BRL"),
    Currency_BSD UMETA(DisplayName = "BSD"),
    Currency_BTN UMETA(DisplayName = "BTN"),
    Currency_BWP UMETA(DisplayName = "BWP"),
    Currency_BYR UMETA(DisplayName = "BYR"),
    Currency_BZD UMETA(DisplayName = "BZD"),
    Currency_CAD UMETA(DisplayName = "CAD"),
    Currency_CDF UMETA(DisplayName = "CDF"),
    Currency_CHF UMETA(DisplayName = "CHF"),
    Currency_CLP UMETA(DisplayName = "CLP"),
    Currency_CNY UMETA(DisplayName = "CNY"),
    Currency_COP UMETA(DisplayName = "COP"),
    Currency_CRC UMETA(DisplayName = "CRC"),
    Currency_CUC UMETA(DisplayName = "CUC"),
    Currency_CUP UMETA(DisplayName = "CUP"),
    Currency_CVE UMETA(DisplayName = "CVE"),
    Currency_CZK UMETA(DisplayName = "CZK"),
    Currency_DJF UMETA(DisplayName = "DJF"),
    Currency_DKK UMETA(DisplayName = "DKK"),
    Currency_DOP UMETA(DisplayName = "DOP"),
    Currency_DZD UMETA(DisplayName = "DZD"),
    Currency_EGP UMETA(DisplayName = "EGP"),
    Currency_ERN UMETA(DisplayName = "ERN"),
    Currency_ETB UMETA(DisplayName = "ETB"),
    Currency_EUR UMETA(DisplayName = "EUR"),
    Currency_FJD UMETA(DisplayName = "FJD"),
    Currency_FKP UMETA(DisplayName = "FKP"),
    Currency_GBP UMETA(DisplayName = "GBP"),
    Currency_GEL UMETA(DisplayName = "GEL"),
    Currency_GGP UMETA(DisplayName = "GGP"),
    Currency_GHS UMETA(DisplayName = "GHS"),
    Currency_GIP UMETA(DisplayName = "GIP"),
    Currency_GMD UMETA(DisplayName = "GMD"),
    Currency_GNF UMETA(DisplayName = "GNF"),
    Currency_GTQ UMETA(DisplayName = "GTQ"),
    Currency_GYD UMETA(DisplayName = "GYD"),
    Currency_HKD UMETA(DisplayName = "HKD"),
    Currency_HNL UMETA(DisplayName = "HNL"),
    Currency_HRK UMETA(DisplayName = "HRK"),
    Currency_HTG UMETA(DisplayName = "HTG"),
    Currency_HUF UMETA(DisplayName = "HUF"),
    Currency_IDR UMETA(DisplayName = "IDR"),
    Currency_ILS UMETA(DisplayName = "ILS"),
    Currency_IMP UMETA(DisplayName = "IMP"),
    Currency_INR UMETA(DisplayName = "INR"),
    Currency_IQD UMETA(DisplayName = "IQD"),
    Currency_IRR UMETA(DisplayName = "IRR"),
    Currency_ISK UMETA(DisplayName = "ISK"),
    Currency_JEP UMETA(DisplayName = "JEP"),
    Currency_JMD UMETA(DisplayName = "JMD"),
    Currency_JOD UMETA(DisplayName = "JOD"),
    Currency_JPY UMETA(DisplayName = "JPY"),
    Currency_KES UMETA(DisplayName = "KES"),
    Currency_KGS UMETA(DisplayName = "KGS"),
    Currency_KHR UMETA(DisplayName = "KHR"),
    Currency_KMF UMETA(DisplayName = "KMF"),
    Currency_KPW UMETA(DisplayName = "KPW"),
    Currency_KRW UMETA(DisplayName = "KRW"),
    Currency_KWD UMETA(DisplayName = "KWD"),
    Currency_KYD UMETA(DisplayName = "KYD"),
    Currency_KZT UMETA(DisplayName = "KZT"),
    Currency_LAK UMETA(DisplayName = "LAK"),
    Currency_LBP UMETA(DisplayName = "LBP"),
    Currency_LKR UMETA(DisplayName = "LKR"),
    Currency_LRD UMETA(DisplayName = "LRD"),
    Currency_LSL UMETA(DisplayName = "LSL"),
    Currency_LYD UMETA(DisplayName = "LYD"),
    Currency_MAD UMETA(DisplayName = "MAD"),
    Currency_MDL UMETA(DisplayName = "MDL"),
    Currency_MGA UMETA(DisplayName = "MGA"),
    Currency_MKD UMETA(DisplayName = "MKD"),
    Currency_MMK UMETA(DisplayName = "MMK"),
    Currency_MNT UMETA(DisplayName = "MNT"),
    Currency_MOP UMETA(DisplayName = "MOP"),
    Currency_MRO UMETA(DisplayName = "MRO"),
    Currency_MUR UMETA(DisplayName = "MUR"),
    Currency_MVR UMETA(DisplayName = "MVR"),
    Currency_MWK UMETA(DisplayName = "MWK"),
    Currency_MXN UMETA(DisplayName = "MXN"),
    Currency_MYR UMETA(DisplayName = "MYR"),
    Currency_MZN UMETA(DisplayName = "MZN"),
    Currency_NAD UMETA(DisplayName = "NAD"),
    Currency_NGN UMETA(DisplayName = "NGN"),
    Currency_NIO UMETA(DisplayName = "NIO"),
    Currency_NOK UMETA(DisplayName = "NOK"),
    Currency_NPR UMETA(DisplayName = "NPR"),
    Currency_NZD UMETA(DisplayName = "NZD"),
    Currency_OMR UMETA(DisplayName = "OMR"),
    Currency_PAB UMETA(DisplayName = "PAB"),
    Currency_PEN UMETA(DisplayName = "PEN"),
    Currency_PGK UMETA(DisplayName = "PGK"),
    Currency_PHP UMETA(DisplayName = "PHP"),
    Currency_PKR UMETA(DisplayName = "PKR"),
    Currency_PLN UMETA(DisplayName = "PLN"),
    Currency_PYG UMETA(DisplayName = "PYG"),
    Currency_QAR UMETA(DisplayName = "QAR"),
    Currency_RON UMETA(DisplayName = "RON"),
    Currency_RSD UMETA(DisplayName = "RSD"),
    Currency_RUB UMETA(DisplayName = "RUB"),
    Currency_RWF UMETA(DisplayName = "RWF"),
    Currency_SAR UMETA(DisplayName = "SAR"),
    Currency_SBD UMETA(DisplayName = "SBD"),
    Currency_SCR UMETA(DisplayName = "SCR"),
    Currency_SDG UMETA(DisplayName = "SDG"),
    Currency_SEK UMETA(DisplayName = "SEK"),
    Currency_SGD UMETA(DisplayName = "SGD"),
    Currency_SHP UMETA(DisplayName = "SHP"),
    Currency_SLL UMETA(DisplayName = "SLL"),
    Currency_SOS UMETA(DisplayName = "SOS"),
    Currency_SPL UMETA(DisplayName = "SPL"),
    Currency_SRD UMETA(DisplayName = "SRD"),
    Currency_STD UMETA(DisplayName = "STD"),
    Currency_SVC UMETA(DisplayName = "SVC"),
    Currency_SYP UMETA(DisplayName = "SYP"),
    Currency_SZL UMETA(DisplayName = "SZL"),
    Currency_THB UMETA(DisplayName = "THB"),
    Currency_TJS UMETA(DisplayName = "TJS"),
    Currency_TMT UMETA(DisplayName = "TMT"),
    Currency_TND UMETA(DisplayName = "TND"),
    Currency_TOP UMETA(DisplayName = "TOP"),
    Currency_TRY UMETA(DisplayName = "TRY"),
    Currency_TTD UMETA(DisplayName = "TTD"),
    Currency_TVD UMETA(DisplayName = "TVD"),
    Currency_TWD UMETA(DisplayName = "TWD"),
    Currency_TZS UMETA(DisplayName = "TZS"),
    Currency_UAH UMETA(DisplayName = "UAH"),
    Currency_UGX UMETA(DisplayName = "UGX"),
    Currency_USD UMETA(DisplayName = "USD"),
    Currency_UYU UMETA(DisplayName = "UYU"),
    Currency_UZS UMETA(DisplayName = "UZS"),
    Currency_VEF UMETA(DisplayName = "VEF"),
    Currency_VND UMETA(DisplayName = "VND"),
    Currency_VUV UMETA(DisplayName = "VUV"),
    Currency_WST UMETA(DisplayName = "WST"),
    Currency_XAF UMETA(DisplayName = "XAF"),
    Currency_XCD UMETA(DisplayName = "XCD"),
    Currency_XDR UMETA(DisplayName = "XDR"),
    Currency_XOF UMETA(DisplayName = "XOF"),
    Currency_XPF UMETA(DisplayName = "XPF"),
    Currency_YER UMETA(DisplayName = "YER"),
    Currency_ZAR UMETA(DisplayName = "ZAR"),
    Currency_ZMW UMETA(DisplayName = "ZMW"),
    Currency_ZWD UMETA(DisplayName = "ZWD")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerDeleteCharacterFromUserRequest"))
struct FBPServerDeleteCharacterFromUserRequest
{
    GENERATED_BODY()
public:
    FBPServerDeleteCharacterFromUserRequest() {};
    FBPServerDeleteCharacterFromUserRequest(PlayFab::ServerModels::FDeleteCharacterFromUserRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FDeleteCharacterFromUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerDeleteCharacterFromUserResult"))
struct FBPServerDeleteCharacterFromUserResult
{
    GENERATED_BODY()
public:
    FBPServerDeleteCharacterFromUserResult() {};
    FBPServerDeleteCharacterFromUserResult(PlayFab::ServerModels::FDeleteCharacterFromUserResult InData) : Data(InData) {};
    PlayFab::ServerModels::FDeleteCharacterFromUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerDeleteSharedGroupRequest"))
struct FBPServerDeleteSharedGroupRequest
{
    GENERATED_BODY()
public:
    FBPServerDeleteSharedGroupRequest() {};
    FBPServerDeleteSharedGroupRequest(PlayFab::ServerModels::FDeleteSharedGroupRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FDeleteSharedGroupRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerDeleteUsersRequest"))
struct FBPServerDeleteUsersRequest
{
    GENERATED_BODY()
public:
    FBPServerDeleteUsersRequest() {};
    FBPServerDeleteUsersRequest(PlayFab::ServerModels::FDeleteUsersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FDeleteUsersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerDeleteUsersResult"))
struct FBPServerDeleteUsersResult
{
    GENERATED_BODY()
public:
    FBPServerDeleteUsersResult() {};
    FBPServerDeleteUsersResult(PlayFab::ServerModels::FDeleteUsersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FDeleteUsersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerDeregisterGameRequest"))
struct FBPServerDeregisterGameRequest
{
    GENERATED_BODY()
public:
    FBPServerDeregisterGameRequest() {};
    FBPServerDeregisterGameRequest(PlayFab::ServerModels::FDeregisterGameRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FDeregisterGameRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerDeregisterGameResponse"))
struct FBPServerDeregisterGameResponse
{
    GENERATED_BODY()
public:
    FBPServerDeregisterGameResponse() {};
    FBPServerDeregisterGameResponse(PlayFab::ServerModels::FDeregisterGameResponse InData) : Data(InData) {};
    PlayFab::ServerModels::FDeregisterGameResponse Data;
};

UENUM(BlueprintType)
enum class EBPServerEmailVerificationStatus : uint8
{
    EmailVerificationStatus_Unverified UMETA(DisplayName = "Unverified"),
    EmailVerificationStatus_Pending UMETA(DisplayName = "Pending"),
    EmailVerificationStatus_Confirmed UMETA(DisplayName = "Confirmed")
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerEmptyResult"))
struct FBPServerEmptyResult
{
    GENERATED_BODY()
public:
    FBPServerEmptyResult() {};
    FBPServerEmptyResult(PlayFab::ServerModels::FEmptyResult InData) : Data(InData) {};
    PlayFab::ServerModels::FEmptyResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerEntityKey", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerEntityKey"))
struct FBPServerEntityKey
{
    GENERATED_BODY()
public:
    FBPServerEntityKey() {};
    FBPServerEntityKey(PlayFab::ServerModels::FEntityKey InData) : Data(InData) {};
    PlayFab::ServerModels::FEntityKey Data;
};

UENUM(BlueprintType)
enum class EBPServerEntityTypes : uint8
{
    EntityTypes_title UMETA(DisplayName = "title"),
    EntityTypes_master_player_account UMETA(DisplayName = "master_player_account"),
    EntityTypes_title_player_account UMETA(DisplayName = "title_player_account"),
    EntityTypes_character UMETA(DisplayName = "character"),
    EntityTypes_group UMETA(DisplayName = "group"),
    EntityTypes_service UMETA(DisplayName = "service")
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerEvaluateRandomResultTableRequest"))
struct FBPServerEvaluateRandomResultTableRequest
{
    GENERATED_BODY()
public:
    FBPServerEvaluateRandomResultTableRequest() {};
    FBPServerEvaluateRandomResultTableRequest(PlayFab::ServerModels::FEvaluateRandomResultTableRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FEvaluateRandomResultTableRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerEvaluateRandomResultTableResult"))
struct FBPServerEvaluateRandomResultTableResult
{
    GENERATED_BODY()
public:
    FBPServerEvaluateRandomResultTableResult() {};
    FBPServerEvaluateRandomResultTableResult(PlayFab::ServerModels::FEvaluateRandomResultTableResult InData) : Data(InData) {};
    PlayFab::ServerModels::FEvaluateRandomResultTableResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerExecuteCloudScriptResult"))
struct FBPServerExecuteCloudScriptResult
{
    GENERATED_BODY()
public:
    FBPServerExecuteCloudScriptResult() {};
    FBPServerExecuteCloudScriptResult(PlayFab::ServerModels::FExecuteCloudScriptResult InData) : Data(InData) {};
    PlayFab::ServerModels::FExecuteCloudScriptResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerExecuteCloudScriptServerRequest"))
struct FBPServerExecuteCloudScriptServerRequest
{
    GENERATED_BODY()
public:
    FBPServerExecuteCloudScriptServerRequest() {};
    FBPServerExecuteCloudScriptServerRequest(PlayFab::ServerModels::FExecuteCloudScriptServerRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FExecuteCloudScriptServerRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerFacebookPlayFabIdPair", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerFacebookPlayFabIdPair"))
struct FBPServerFacebookPlayFabIdPair
{
    GENERATED_BODY()
public:
    FBPServerFacebookPlayFabIdPair() {};
    FBPServerFacebookPlayFabIdPair(PlayFab::ServerModels::FFacebookPlayFabIdPair InData) : Data(InData) {};
    PlayFab::ServerModels::FFacebookPlayFabIdPair Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerFriendInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerFriendInfo"))
struct FBPServerFriendInfo
{
    GENERATED_BODY()
public:
    FBPServerFriendInfo() {};
    FBPServerFriendInfo(PlayFab::ServerModels::FFriendInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FFriendInfo Data;
};

UENUM(BlueprintType)
enum class EBPServerGameInstanceState : uint8
{
    GameInstanceState_Open UMETA(DisplayName = "Open"),
    GameInstanceState_Closed UMETA(DisplayName = "Closed")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetAllSegmentsRequest"))
struct FBPServerGetAllSegmentsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetAllSegmentsRequest() {};
    FBPServerGetAllSegmentsRequest(PlayFab::ServerModels::FGetAllSegmentsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetAllSegmentsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetAllSegmentsResult"))
struct FBPServerGetAllSegmentsResult
{
    GENERATED_BODY()
public:
    FBPServerGetAllSegmentsResult() {};
    FBPServerGetAllSegmentsResult(PlayFab::ServerModels::FGetAllSegmentsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetAllSegmentsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetCatalogItemsRequest"))
struct FBPServerGetCatalogItemsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetCatalogItemsRequest() {};
    FBPServerGetCatalogItemsRequest(PlayFab::ServerModels::FGetCatalogItemsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCatalogItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetCatalogItemsResult"))
struct FBPServerGetCatalogItemsResult
{
    GENERATED_BODY()
public:
    FBPServerGetCatalogItemsResult() {};
    FBPServerGetCatalogItemsResult(PlayFab::ServerModels::FGetCatalogItemsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCatalogItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetCharacterDataRequest"))
struct FBPServerGetCharacterDataRequest
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterDataRequest() {};
    FBPServerGetCharacterDataRequest(PlayFab::ServerModels::FGetCharacterDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetCharacterDataResult"))
struct FBPServerGetCharacterDataResult
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterDataResult() {};
    FBPServerGetCharacterDataResult(PlayFab::ServerModels::FGetCharacterDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetCharacterInventoryRequest"))
struct FBPServerGetCharacterInventoryRequest
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterInventoryRequest() {};
    FBPServerGetCharacterInventoryRequest(PlayFab::ServerModels::FGetCharacterInventoryRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterInventoryRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetCharacterInventoryResult"))
struct FBPServerGetCharacterInventoryResult
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterInventoryResult() {};
    FBPServerGetCharacterInventoryResult(PlayFab::ServerModels::FGetCharacterInventoryResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterInventoryResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetCharacterLeaderboardRequest"))
struct FBPServerGetCharacterLeaderboardRequest
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterLeaderboardRequest() {};
    FBPServerGetCharacterLeaderboardRequest(PlayFab::ServerModels::FGetCharacterLeaderboardRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterLeaderboardRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetCharacterLeaderboardResult"))
struct FBPServerGetCharacterLeaderboardResult
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterLeaderboardResult() {};
    FBPServerGetCharacterLeaderboardResult(PlayFab::ServerModels::FGetCharacterLeaderboardResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterLeaderboardResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetCharacterStatisticsRequest"))
struct FBPServerGetCharacterStatisticsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterStatisticsRequest() {};
    FBPServerGetCharacterStatisticsRequest(PlayFab::ServerModels::FGetCharacterStatisticsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterStatisticsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetCharacterStatisticsResult"))
struct FBPServerGetCharacterStatisticsResult
{
    GENERATED_BODY()
public:
    FBPServerGetCharacterStatisticsResult() {};
    FBPServerGetCharacterStatisticsResult(PlayFab::ServerModels::FGetCharacterStatisticsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetCharacterStatisticsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetContentDownloadUrlRequest"))
struct FBPServerGetContentDownloadUrlRequest
{
    GENERATED_BODY()
public:
    FBPServerGetContentDownloadUrlRequest() {};
    FBPServerGetContentDownloadUrlRequest(PlayFab::ServerModels::FGetContentDownloadUrlRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetContentDownloadUrlRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetContentDownloadUrlResult"))
struct FBPServerGetContentDownloadUrlResult
{
    GENERATED_BODY()
public:
    FBPServerGetContentDownloadUrlResult() {};
    FBPServerGetContentDownloadUrlResult(PlayFab::ServerModels::FGetContentDownloadUrlResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetContentDownloadUrlResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetFriendLeaderboardRequest"))
struct FBPServerGetFriendLeaderboardRequest
{
    GENERATED_BODY()
public:
    FBPServerGetFriendLeaderboardRequest() {};
    FBPServerGetFriendLeaderboardRequest(PlayFab::ServerModels::FGetFriendLeaderboardRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetFriendLeaderboardRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetFriendsListRequest"))
struct FBPServerGetFriendsListRequest
{
    GENERATED_BODY()
public:
    FBPServerGetFriendsListRequest() {};
    FBPServerGetFriendsListRequest(PlayFab::ServerModels::FGetFriendsListRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetFriendsListRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetFriendsListResult"))
struct FBPServerGetFriendsListResult
{
    GENERATED_BODY()
public:
    FBPServerGetFriendsListResult() {};
    FBPServerGetFriendsListResult(PlayFab::ServerModels::FGetFriendsListResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetFriendsListResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetLeaderboardAroundCharacterRequest"))
struct FBPServerGetLeaderboardAroundCharacterRequest
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardAroundCharacterRequest() {};
    FBPServerGetLeaderboardAroundCharacterRequest(PlayFab::ServerModels::FGetLeaderboardAroundCharacterRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardAroundCharacterRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetLeaderboardAroundCharacterResult"))
struct FBPServerGetLeaderboardAroundCharacterResult
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardAroundCharacterResult() {};
    FBPServerGetLeaderboardAroundCharacterResult(PlayFab::ServerModels::FGetLeaderboardAroundCharacterResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardAroundCharacterResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetLeaderboardAroundUserRequest"))
struct FBPServerGetLeaderboardAroundUserRequest
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardAroundUserRequest() {};
    FBPServerGetLeaderboardAroundUserRequest(PlayFab::ServerModels::FGetLeaderboardAroundUserRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardAroundUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetLeaderboardAroundUserResult"))
struct FBPServerGetLeaderboardAroundUserResult
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardAroundUserResult() {};
    FBPServerGetLeaderboardAroundUserResult(PlayFab::ServerModels::FGetLeaderboardAroundUserResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardAroundUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetLeaderboardForUsersCharactersRequest"))
struct FBPServerGetLeaderboardForUsersCharactersRequest
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardForUsersCharactersRequest() {};
    FBPServerGetLeaderboardForUsersCharactersRequest(PlayFab::ServerModels::FGetLeaderboardForUsersCharactersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardForUsersCharactersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetLeaderboardForUsersCharactersResult"))
struct FBPServerGetLeaderboardForUsersCharactersResult
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardForUsersCharactersResult() {};
    FBPServerGetLeaderboardForUsersCharactersResult(PlayFab::ServerModels::FGetLeaderboardForUsersCharactersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardForUsersCharactersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetLeaderboardRequest"))
struct FBPServerGetLeaderboardRequest
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardRequest() {};
    FBPServerGetLeaderboardRequest(PlayFab::ServerModels::FGetLeaderboardRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetLeaderboardResult"))
struct FBPServerGetLeaderboardResult
{
    GENERATED_BODY()
public:
    FBPServerGetLeaderboardResult() {};
    FBPServerGetLeaderboardResult(PlayFab::ServerModels::FGetLeaderboardResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetLeaderboardResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayerCombinedInfoRequest"))
struct FBPServerGetPlayerCombinedInfoRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerCombinedInfoRequest() {};
    FBPServerGetPlayerCombinedInfoRequest(PlayFab::ServerModels::FGetPlayerCombinedInfoRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerCombinedInfoRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayerCombinedInfoRequestParams"))
struct FBPServerGetPlayerCombinedInfoRequestParams
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerCombinedInfoRequestParams() {};
    FBPServerGetPlayerCombinedInfoRequestParams(PlayFab::ServerModels::FGetPlayerCombinedInfoRequestParams InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerCombinedInfoRequestParams Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerCombinedInfoResult"))
struct FBPServerGetPlayerCombinedInfoResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerCombinedInfoResult() {};
    FBPServerGetPlayerCombinedInfoResult(PlayFab::ServerModels::FGetPlayerCombinedInfoResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerCombinedInfoResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerCombinedInfoResultPayload"))
struct FBPServerGetPlayerCombinedInfoResultPayload
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerCombinedInfoResultPayload() {};
    FBPServerGetPlayerCombinedInfoResultPayload(PlayFab::ServerModels::FGetPlayerCombinedInfoResultPayload InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerCombinedInfoResultPayload Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayerProfileRequest"))
struct FBPServerGetPlayerProfileRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerProfileRequest() {};
    FBPServerGetPlayerProfileRequest(PlayFab::ServerModels::FGetPlayerProfileRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerProfileRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerProfileResult"))
struct FBPServerGetPlayerProfileResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerProfileResult() {};
    FBPServerGetPlayerProfileResult(PlayFab::ServerModels::FGetPlayerProfileResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerProfileResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerSegmentsResult"))
struct FBPServerGetPlayerSegmentsResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerSegmentsResult() {};
    FBPServerGetPlayerSegmentsResult(PlayFab::ServerModels::FGetPlayerSegmentsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerSegmentsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayersInSegmentRequest"))
struct FBPServerGetPlayersInSegmentRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayersInSegmentRequest() {};
    FBPServerGetPlayersInSegmentRequest(PlayFab::ServerModels::FGetPlayersInSegmentRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayersInSegmentRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayersInSegmentResult"))
struct FBPServerGetPlayersInSegmentResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayersInSegmentResult() {};
    FBPServerGetPlayersInSegmentResult(PlayFab::ServerModels::FGetPlayersInSegmentResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayersInSegmentResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayersSegmentsRequest"))
struct FBPServerGetPlayersSegmentsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayersSegmentsRequest() {};
    FBPServerGetPlayersSegmentsRequest(PlayFab::ServerModels::FGetPlayersSegmentsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayersSegmentsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayerStatisticsRequest"))
struct FBPServerGetPlayerStatisticsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerStatisticsRequest() {};
    FBPServerGetPlayerStatisticsRequest(PlayFab::ServerModels::FGetPlayerStatisticsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerStatisticsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerStatisticsResult"))
struct FBPServerGetPlayerStatisticsResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerStatisticsResult() {};
    FBPServerGetPlayerStatisticsResult(PlayFab::ServerModels::FGetPlayerStatisticsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerStatisticsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayerStatisticVersionsRequest"))
struct FBPServerGetPlayerStatisticVersionsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerStatisticVersionsRequest() {};
    FBPServerGetPlayerStatisticVersionsRequest(PlayFab::ServerModels::FGetPlayerStatisticVersionsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerStatisticVersionsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerStatisticVersionsResult"))
struct FBPServerGetPlayerStatisticVersionsResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerStatisticVersionsResult() {};
    FBPServerGetPlayerStatisticVersionsResult(PlayFab::ServerModels::FGetPlayerStatisticVersionsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerStatisticVersionsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayerTagsRequest"))
struct FBPServerGetPlayerTagsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerTagsRequest() {};
    FBPServerGetPlayerTagsRequest(PlayFab::ServerModels::FGetPlayerTagsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerTagsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayerTagsResult"))
struct FBPServerGetPlayerTagsResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayerTagsResult() {};
    FBPServerGetPlayerTagsResult(PlayFab::ServerModels::FGetPlayerTagsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayerTagsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayFabIDsFromFacebookIDsRequest"))
struct FBPServerGetPlayFabIDsFromFacebookIDsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayFabIDsFromFacebookIDsRequest() {};
    FBPServerGetPlayFabIDsFromFacebookIDsRequest(PlayFab::ServerModels::FGetPlayFabIDsFromFacebookIDsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayFabIDsFromFacebookIDsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayFabIDsFromFacebookIDsResult"))
struct FBPServerGetPlayFabIDsFromFacebookIDsResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayFabIDsFromFacebookIDsResult() {};
    FBPServerGetPlayFabIDsFromFacebookIDsResult(PlayFab::ServerModels::FGetPlayFabIDsFromFacebookIDsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayFabIDsFromFacebookIDsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPlayFabIDsFromSteamIDsRequest"))
struct FBPServerGetPlayFabIDsFromSteamIDsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPlayFabIDsFromSteamIDsRequest() {};
    FBPServerGetPlayFabIDsFromSteamIDsRequest(PlayFab::ServerModels::FGetPlayFabIDsFromSteamIDsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayFabIDsFromSteamIDsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPlayFabIDsFromSteamIDsResult"))
struct FBPServerGetPlayFabIDsFromSteamIDsResult
{
    GENERATED_BODY()
public:
    FBPServerGetPlayFabIDsFromSteamIDsResult() {};
    FBPServerGetPlayFabIDsFromSteamIDsResult(PlayFab::ServerModels::FGetPlayFabIDsFromSteamIDsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPlayFabIDsFromSteamIDsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetPublisherDataRequest"))
struct FBPServerGetPublisherDataRequest
{
    GENERATED_BODY()
public:
    FBPServerGetPublisherDataRequest() {};
    FBPServerGetPublisherDataRequest(PlayFab::ServerModels::FGetPublisherDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPublisherDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetPublisherDataResult"))
struct FBPServerGetPublisherDataResult
{
    GENERATED_BODY()
public:
    FBPServerGetPublisherDataResult() {};
    FBPServerGetPublisherDataResult(PlayFab::ServerModels::FGetPublisherDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetPublisherDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetRandomResultTablesRequest"))
struct FBPServerGetRandomResultTablesRequest
{
    GENERATED_BODY()
public:
    FBPServerGetRandomResultTablesRequest() {};
    FBPServerGetRandomResultTablesRequest(PlayFab::ServerModels::FGetRandomResultTablesRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetRandomResultTablesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetRandomResultTablesResult"))
struct FBPServerGetRandomResultTablesResult
{
    GENERATED_BODY()
public:
    FBPServerGetRandomResultTablesResult() {};
    FBPServerGetRandomResultTablesResult(PlayFab::ServerModels::FGetRandomResultTablesResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetRandomResultTablesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetSegmentResult"))
struct FBPServerGetSegmentResult
{
    GENERATED_BODY()
public:
    FBPServerGetSegmentResult() {};
    FBPServerGetSegmentResult(PlayFab::ServerModels::FGetSegmentResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetSegmentResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetSharedGroupDataRequest"))
struct FBPServerGetSharedGroupDataRequest
{
    GENERATED_BODY()
public:
    FBPServerGetSharedGroupDataRequest() {};
    FBPServerGetSharedGroupDataRequest(PlayFab::ServerModels::FGetSharedGroupDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetSharedGroupDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetSharedGroupDataResult"))
struct FBPServerGetSharedGroupDataResult
{
    GENERATED_BODY()
public:
    FBPServerGetSharedGroupDataResult() {};
    FBPServerGetSharedGroupDataResult(PlayFab::ServerModels::FGetSharedGroupDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetSharedGroupDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetTimeRequest"))
struct FBPServerGetTimeRequest
{
    GENERATED_BODY()
public:
    FBPServerGetTimeRequest() {};
    FBPServerGetTimeRequest(PlayFab::ServerModels::FGetTimeRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetTimeRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetTimeResult"))
struct FBPServerGetTimeResult
{
    GENERATED_BODY()
public:
    FBPServerGetTimeResult() {};
    FBPServerGetTimeResult(PlayFab::ServerModels::FGetTimeResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetTimeResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetTitleDataRequest"))
struct FBPServerGetTitleDataRequest
{
    GENERATED_BODY()
public:
    FBPServerGetTitleDataRequest() {};
    FBPServerGetTitleDataRequest(PlayFab::ServerModels::FGetTitleDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetTitleDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetTitleDataResult"))
struct FBPServerGetTitleDataResult
{
    GENERATED_BODY()
public:
    FBPServerGetTitleDataResult() {};
    FBPServerGetTitleDataResult(PlayFab::ServerModels::FGetTitleDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetTitleDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetTitleNewsRequest"))
struct FBPServerGetTitleNewsRequest
{
    GENERATED_BODY()
public:
    FBPServerGetTitleNewsRequest() {};
    FBPServerGetTitleNewsRequest(PlayFab::ServerModels::FGetTitleNewsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetTitleNewsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetTitleNewsResult"))
struct FBPServerGetTitleNewsResult
{
    GENERATED_BODY()
public:
    FBPServerGetTitleNewsResult() {};
    FBPServerGetTitleNewsResult(PlayFab::ServerModels::FGetTitleNewsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetTitleNewsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetUserAccountInfoRequest"))
struct FBPServerGetUserAccountInfoRequest
{
    GENERATED_BODY()
public:
    FBPServerGetUserAccountInfoRequest() {};
    FBPServerGetUserAccountInfoRequest(PlayFab::ServerModels::FGetUserAccountInfoRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserAccountInfoRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetUserAccountInfoResult"))
struct FBPServerGetUserAccountInfoResult
{
    GENERATED_BODY()
public:
    FBPServerGetUserAccountInfoResult() {};
    FBPServerGetUserAccountInfoResult(PlayFab::ServerModels::FGetUserAccountInfoResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserAccountInfoResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetUserBansRequest"))
struct FBPServerGetUserBansRequest
{
    GENERATED_BODY()
public:
    FBPServerGetUserBansRequest() {};
    FBPServerGetUserBansRequest(PlayFab::ServerModels::FGetUserBansRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserBansRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetUserBansResult"))
struct FBPServerGetUserBansResult
{
    GENERATED_BODY()
public:
    FBPServerGetUserBansResult() {};
    FBPServerGetUserBansResult(PlayFab::ServerModels::FGetUserBansResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserBansResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetUserDataRequest"))
struct FBPServerGetUserDataRequest
{
    GENERATED_BODY()
public:
    FBPServerGetUserDataRequest() {};
    FBPServerGetUserDataRequest(PlayFab::ServerModels::FGetUserDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetUserDataResult"))
struct FBPServerGetUserDataResult
{
    GENERATED_BODY()
public:
    FBPServerGetUserDataResult() {};
    FBPServerGetUserDataResult(PlayFab::ServerModels::FGetUserDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGetUserInventoryRequest"))
struct FBPServerGetUserInventoryRequest
{
    GENERATED_BODY()
public:
    FBPServerGetUserInventoryRequest() {};
    FBPServerGetUserInventoryRequest(PlayFab::ServerModels::FGetUserInventoryRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserInventoryRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGetUserInventoryResult"))
struct FBPServerGetUserInventoryResult
{
    GENERATED_BODY()
public:
    FBPServerGetUserInventoryResult() {};
    FBPServerGetUserInventoryResult(PlayFab::ServerModels::FGetUserInventoryResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGetUserInventoryResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGrantCharacterToUserRequest"))
struct FBPServerGrantCharacterToUserRequest
{
    GENERATED_BODY()
public:
    FBPServerGrantCharacterToUserRequest() {};
    FBPServerGrantCharacterToUserRequest(PlayFab::ServerModels::FGrantCharacterToUserRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantCharacterToUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGrantCharacterToUserResult"))
struct FBPServerGrantCharacterToUserResult
{
    GENERATED_BODY()
public:
    FBPServerGrantCharacterToUserResult() {};
    FBPServerGrantCharacterToUserResult(PlayFab::ServerModels::FGrantCharacterToUserResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantCharacterToUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGrantedItemInstance", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGrantedItemInstance"))
struct FBPServerGrantedItemInstance
{
    GENERATED_BODY()
public:
    FBPServerGrantedItemInstance() {};
    FBPServerGrantedItemInstance(PlayFab::ServerModels::FGrantedItemInstance InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantedItemInstance Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGrantItemsToCharacterRequest"))
struct FBPServerGrantItemsToCharacterRequest
{
    GENERATED_BODY()
public:
    FBPServerGrantItemsToCharacterRequest() {};
    FBPServerGrantItemsToCharacterRequest(PlayFab::ServerModels::FGrantItemsToCharacterRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantItemsToCharacterRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGrantItemsToCharacterResult"))
struct FBPServerGrantItemsToCharacterResult
{
    GENERATED_BODY()
public:
    FBPServerGrantItemsToCharacterResult() {};
    FBPServerGrantItemsToCharacterResult(PlayFab::ServerModels::FGrantItemsToCharacterResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantItemsToCharacterResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGrantItemsToUserRequest"))
struct FBPServerGrantItemsToUserRequest
{
    GENERATED_BODY()
public:
    FBPServerGrantItemsToUserRequest() {};
    FBPServerGrantItemsToUserRequest(PlayFab::ServerModels::FGrantItemsToUserRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantItemsToUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGrantItemsToUserResult"))
struct FBPServerGrantItemsToUserResult
{
    GENERATED_BODY()
public:
    FBPServerGrantItemsToUserResult() {};
    FBPServerGrantItemsToUserResult(PlayFab::ServerModels::FGrantItemsToUserResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantItemsToUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerGrantItemsToUsersRequest"))
struct FBPServerGrantItemsToUsersRequest
{
    GENERATED_BODY()
public:
    FBPServerGrantItemsToUsersRequest() {};
    FBPServerGrantItemsToUsersRequest(PlayFab::ServerModels::FGrantItemsToUsersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantItemsToUsersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerGrantItemsToUsersResult"))
struct FBPServerGrantItemsToUsersResult
{
    GENERATED_BODY()
public:
    FBPServerGrantItemsToUsersResult() {};
    FBPServerGrantItemsToUsersResult(PlayFab::ServerModels::FGrantItemsToUsersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FGrantItemsToUsersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerItemGrant", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerItemGrant"))
struct FBPServerItemGrant
{
    GENERATED_BODY()
public:
    FBPServerItemGrant() {};
    FBPServerItemGrant(PlayFab::ServerModels::FItemGrant InData) : Data(InData) {};
    PlayFab::ServerModels::FItemGrant Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerItemInstance", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerItemInstance"))
struct FBPServerItemInstance
{
    GENERATED_BODY()
public:
    FBPServerItemInstance() {};
    FBPServerItemInstance(PlayFab::ServerModels::FItemInstance InData) : Data(InData) {};
    PlayFab::ServerModels::FItemInstance Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerLinkedPlatformAccountModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerLinkedPlatformAccountModel"))
struct FBPServerLinkedPlatformAccountModel
{
    GENERATED_BODY()
public:
    FBPServerLinkedPlatformAccountModel() {};
    FBPServerLinkedPlatformAccountModel(PlayFab::ServerModels::FLinkedPlatformAccountModel InData) : Data(InData) {};
    PlayFab::ServerModels::FLinkedPlatformAccountModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerListUsersCharactersRequest"))
struct FBPServerListUsersCharactersRequest
{
    GENERATED_BODY()
public:
    FBPServerListUsersCharactersRequest() {};
    FBPServerListUsersCharactersRequest(PlayFab::ServerModels::FListUsersCharactersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FListUsersCharactersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerListUsersCharactersResult"))
struct FBPServerListUsersCharactersResult
{
    GENERATED_BODY()
public:
    FBPServerListUsersCharactersResult() {};
    FBPServerListUsersCharactersResult(PlayFab::ServerModels::FListUsersCharactersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FListUsersCharactersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerLocationModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerLocationModel"))
struct FBPServerLocationModel
{
    GENERATED_BODY()
public:
    FBPServerLocationModel() {};
    FBPServerLocationModel(PlayFab::ServerModels::FLocationModel InData) : Data(InData) {};
    PlayFab::ServerModels::FLocationModel Data;
};

UENUM(BlueprintType)
enum class EBPServerLoginIdentityProvider : uint8
{
    LoginIdentityProvider_Unknown UMETA(DisplayName = "Unknown"),
    LoginIdentityProvider_PlayFab UMETA(DisplayName = "PlayFab"),
    LoginIdentityProvider_Custom UMETA(DisplayName = "Custom"),
    LoginIdentityProvider_GameCenter UMETA(DisplayName = "GameCenter"),
    LoginIdentityProvider_GooglePlay UMETA(DisplayName = "GooglePlay"),
    LoginIdentityProvider_Steam UMETA(DisplayName = "Steam"),
    LoginIdentityProvider_XBoxLive UMETA(DisplayName = "XBoxLive"),
    LoginIdentityProvider_PSN UMETA(DisplayName = "PSN"),
    LoginIdentityProvider_Kongregate UMETA(DisplayName = "Kongregate"),
    LoginIdentityProvider_Facebook UMETA(DisplayName = "Facebook"),
    LoginIdentityProvider_IOSDevice UMETA(DisplayName = "IOSDevice"),
    LoginIdentityProvider_AndroidDevice UMETA(DisplayName = "AndroidDevice"),
    LoginIdentityProvider_Twitch UMETA(DisplayName = "Twitch"),
    LoginIdentityProvider_WindowsHello UMETA(DisplayName = "WindowsHello")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerLogStatement", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerLogStatement"))
struct FBPServerLogStatement
{
    GENERATED_BODY()
public:
    FBPServerLogStatement() {};
    FBPServerLogStatement(PlayFab::ServerModels::FLogStatement InData) : Data(InData) {};
    PlayFab::ServerModels::FLogStatement Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerMembershipModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerMembershipModel"))
struct FBPServerMembershipModel
{
    GENERATED_BODY()
public:
    FBPServerMembershipModel() {};
    FBPServerMembershipModel(PlayFab::ServerModels::FMembershipModel InData) : Data(InData) {};
    PlayFab::ServerModels::FMembershipModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerModifyCharacterVirtualCurrencyResult"))
struct FBPServerModifyCharacterVirtualCurrencyResult
{
    GENERATED_BODY()
public:
    FBPServerModifyCharacterVirtualCurrencyResult() {};
    FBPServerModifyCharacterVirtualCurrencyResult(PlayFab::ServerModels::FModifyCharacterVirtualCurrencyResult InData) : Data(InData) {};
    PlayFab::ServerModels::FModifyCharacterVirtualCurrencyResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerModifyItemUsesRequest"))
struct FBPServerModifyItemUsesRequest
{
    GENERATED_BODY()
public:
    FBPServerModifyItemUsesRequest() {};
    FBPServerModifyItemUsesRequest(PlayFab::ServerModels::FModifyItemUsesRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FModifyItemUsesRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerModifyItemUsesResult"))
struct FBPServerModifyItemUsesResult
{
    GENERATED_BODY()
public:
    FBPServerModifyItemUsesResult() {};
    FBPServerModifyItemUsesResult(PlayFab::ServerModels::FModifyItemUsesResult InData) : Data(InData) {};
    PlayFab::ServerModels::FModifyItemUsesResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerModifyUserVirtualCurrencyResult"))
struct FBPServerModifyUserVirtualCurrencyResult
{
    GENERATED_BODY()
public:
    FBPServerModifyUserVirtualCurrencyResult() {};
    FBPServerModifyUserVirtualCurrencyResult(PlayFab::ServerModels::FModifyUserVirtualCurrencyResult InData) : Data(InData) {};
    PlayFab::ServerModels::FModifyUserVirtualCurrencyResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerMoveItemToCharacterFromCharacterRequest"))
struct FBPServerMoveItemToCharacterFromCharacterRequest
{
    GENERATED_BODY()
public:
    FBPServerMoveItemToCharacterFromCharacterRequest() {};
    FBPServerMoveItemToCharacterFromCharacterRequest(PlayFab::ServerModels::FMoveItemToCharacterFromCharacterRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FMoveItemToCharacterFromCharacterRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerMoveItemToCharacterFromCharacterResult"))
struct FBPServerMoveItemToCharacterFromCharacterResult
{
    GENERATED_BODY()
public:
    FBPServerMoveItemToCharacterFromCharacterResult() {};
    FBPServerMoveItemToCharacterFromCharacterResult(PlayFab::ServerModels::FMoveItemToCharacterFromCharacterResult InData) : Data(InData) {};
    PlayFab::ServerModels::FMoveItemToCharacterFromCharacterResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerMoveItemToCharacterFromUserRequest"))
struct FBPServerMoveItemToCharacterFromUserRequest
{
    GENERATED_BODY()
public:
    FBPServerMoveItemToCharacterFromUserRequest() {};
    FBPServerMoveItemToCharacterFromUserRequest(PlayFab::ServerModels::FMoveItemToCharacterFromUserRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FMoveItemToCharacterFromUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerMoveItemToCharacterFromUserResult"))
struct FBPServerMoveItemToCharacterFromUserResult
{
    GENERATED_BODY()
public:
    FBPServerMoveItemToCharacterFromUserResult() {};
    FBPServerMoveItemToCharacterFromUserResult(PlayFab::ServerModels::FMoveItemToCharacterFromUserResult InData) : Data(InData) {};
    PlayFab::ServerModels::FMoveItemToCharacterFromUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerMoveItemToUserFromCharacterRequest"))
struct FBPServerMoveItemToUserFromCharacterRequest
{
    GENERATED_BODY()
public:
    FBPServerMoveItemToUserFromCharacterRequest() {};
    FBPServerMoveItemToUserFromCharacterRequest(PlayFab::ServerModels::FMoveItemToUserFromCharacterRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FMoveItemToUserFromCharacterRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerMoveItemToUserFromCharacterResult"))
struct FBPServerMoveItemToUserFromCharacterResult
{
    GENERATED_BODY()
public:
    FBPServerMoveItemToUserFromCharacterResult() {};
    FBPServerMoveItemToUserFromCharacterResult(PlayFab::ServerModels::FMoveItemToUserFromCharacterResult InData) : Data(InData) {};
    PlayFab::ServerModels::FMoveItemToUserFromCharacterResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerNotifyMatchmakerPlayerLeftRequest"))
struct FBPServerNotifyMatchmakerPlayerLeftRequest
{
    GENERATED_BODY()
public:
    FBPServerNotifyMatchmakerPlayerLeftRequest() {};
    FBPServerNotifyMatchmakerPlayerLeftRequest(PlayFab::ServerModels::FNotifyMatchmakerPlayerLeftRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FNotifyMatchmakerPlayerLeftRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerNotifyMatchmakerPlayerLeftResult"))
struct FBPServerNotifyMatchmakerPlayerLeftResult
{
    GENERATED_BODY()
public:
    FBPServerNotifyMatchmakerPlayerLeftResult() {};
    FBPServerNotifyMatchmakerPlayerLeftResult(PlayFab::ServerModels::FNotifyMatchmakerPlayerLeftResult InData) : Data(InData) {};
    PlayFab::ServerModels::FNotifyMatchmakerPlayerLeftResult Data;
};

UENUM(BlueprintType)
enum class EBPServerPlayerConnectionState : uint8
{
    PlayerConnectionState_Unassigned UMETA(DisplayName = "Unassigned"),
    PlayerConnectionState_Connecting UMETA(DisplayName = "Connecting"),
    PlayerConnectionState_Participating UMETA(DisplayName = "Participating"),
    PlayerConnectionState_Participated UMETA(DisplayName = "Participated")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerLeaderboardEntry", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerLeaderboardEntry"))
struct FBPServerPlayerLeaderboardEntry
{
    GENERATED_BODY()
public:
    FBPServerPlayerLeaderboardEntry() {};
    FBPServerPlayerLeaderboardEntry(PlayFab::ServerModels::FPlayerLeaderboardEntry InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerLeaderboardEntry Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerLinkedAccount", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerLinkedAccount"))
struct FBPServerPlayerLinkedAccount
{
    GENERATED_BODY()
public:
    FBPServerPlayerLinkedAccount() {};
    FBPServerPlayerLinkedAccount(PlayFab::ServerModels::FPlayerLinkedAccount InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerLinkedAccount Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerLocation", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerLocation"))
struct FBPServerPlayerLocation
{
    GENERATED_BODY()
public:
    FBPServerPlayerLocation() {};
    FBPServerPlayerLocation(PlayFab::ServerModels::FPlayerLocation InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerLocation Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerProfile", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerProfile"))
struct FBPServerPlayerProfile
{
    GENERATED_BODY()
public:
    FBPServerPlayerProfile() {};
    FBPServerPlayerProfile(PlayFab::ServerModels::FPlayerProfile InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerProfile Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerProfileModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerProfileModel"))
struct FBPServerPlayerProfileModel
{
    GENERATED_BODY()
public:
    FBPServerPlayerProfileModel() {};
    FBPServerPlayerProfileModel(PlayFab::ServerModels::FPlayerProfileModel InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerProfileModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerProfileViewConstraints", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerProfileViewConstraints"))
struct FBPServerPlayerProfileViewConstraints
{
    GENERATED_BODY()
public:
    FBPServerPlayerProfileViewConstraints() {};
    FBPServerPlayerProfileViewConstraints(PlayFab::ServerModels::FPlayerProfileViewConstraints InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerProfileViewConstraints Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerStatistic", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerStatistic"))
struct FBPServerPlayerStatistic
{
    GENERATED_BODY()
public:
    FBPServerPlayerStatistic() {};
    FBPServerPlayerStatistic(PlayFab::ServerModels::FPlayerStatistic InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerStatistic Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPlayerStatisticVersion", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPlayerStatisticVersion"))
struct FBPServerPlayerStatisticVersion
{
    GENERATED_BODY()
public:
    FBPServerPlayerStatisticVersion() {};
    FBPServerPlayerStatisticVersion(PlayFab::ServerModels::FPlayerStatisticVersion InData) : Data(InData) {};
    PlayFab::ServerModels::FPlayerStatisticVersion Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPushNotificationPackage", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPushNotificationPackage"))
struct FBPServerPushNotificationPackage
{
    GENERATED_BODY()
public:
    FBPServerPushNotificationPackage() {};
    FBPServerPushNotificationPackage(PlayFab::ServerModels::FPushNotificationPackage InData) : Data(InData) {};
    PlayFab::ServerModels::FPushNotificationPackage Data;
};

UENUM(BlueprintType)
enum class EBPServerPushNotificationPlatform : uint8
{
    PushNotificationPlatform_ApplePushNotificationService UMETA(DisplayName = "ApplePushNotificationService"),
    PushNotificationPlatform_GoogleCloudMessaging UMETA(DisplayName = "GoogleCloudMessaging")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPushNotificationRegistration", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPushNotificationRegistration"))
struct FBPServerPushNotificationRegistration
{
    GENERATED_BODY()
public:
    FBPServerPushNotificationRegistration() {};
    FBPServerPushNotificationRegistration(PlayFab::ServerModels::FPushNotificationRegistration InData) : Data(InData) {};
    PlayFab::ServerModels::FPushNotificationRegistration Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerPushNotificationRegistrationModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerPushNotificationRegistrationModel"))
struct FBPServerPushNotificationRegistrationModel
{
    GENERATED_BODY()
public:
    FBPServerPushNotificationRegistrationModel() {};
    FBPServerPushNotificationRegistrationModel(PlayFab::ServerModels::FPushNotificationRegistrationModel InData) : Data(InData) {};
    PlayFab::ServerModels::FPushNotificationRegistrationModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRandomResultTableListing"))
struct FBPServerRandomResultTableListing
{
    GENERATED_BODY()
public:
    FBPServerRandomResultTableListing() {};
    FBPServerRandomResultTableListing(PlayFab::ServerModels::FRandomResultTableListing InData) : Data(InData) {};
    PlayFab::ServerModels::FRandomResultTableListing Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRedeemCouponRequest"))
struct FBPServerRedeemCouponRequest
{
    GENERATED_BODY()
public:
    FBPServerRedeemCouponRequest() {};
    FBPServerRedeemCouponRequest(PlayFab::ServerModels::FRedeemCouponRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRedeemCouponRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRedeemCouponResult"))
struct FBPServerRedeemCouponResult
{
    GENERATED_BODY()
public:
    FBPServerRedeemCouponResult() {};
    FBPServerRedeemCouponResult(PlayFab::ServerModels::FRedeemCouponResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRedeemCouponResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRedeemMatchmakerTicketRequest"))
struct FBPServerRedeemMatchmakerTicketRequest
{
    GENERATED_BODY()
public:
    FBPServerRedeemMatchmakerTicketRequest() {};
    FBPServerRedeemMatchmakerTicketRequest(PlayFab::ServerModels::FRedeemMatchmakerTicketRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRedeemMatchmakerTicketRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRedeemMatchmakerTicketResult"))
struct FBPServerRedeemMatchmakerTicketResult
{
    GENERATED_BODY()
public:
    FBPServerRedeemMatchmakerTicketResult() {};
    FBPServerRedeemMatchmakerTicketResult(PlayFab::ServerModels::FRedeemMatchmakerTicketResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRedeemMatchmakerTicketResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRefreshGameServerInstanceHeartbeatRequest"))
struct FBPServerRefreshGameServerInstanceHeartbeatRequest
{
    GENERATED_BODY()
public:
    FBPServerRefreshGameServerInstanceHeartbeatRequest() {};
    FBPServerRefreshGameServerInstanceHeartbeatRequest(PlayFab::ServerModels::FRefreshGameServerInstanceHeartbeatRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRefreshGameServerInstanceHeartbeatRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRefreshGameServerInstanceHeartbeatResult"))
struct FBPServerRefreshGameServerInstanceHeartbeatResult
{
    GENERATED_BODY()
public:
    FBPServerRefreshGameServerInstanceHeartbeatResult() {};
    FBPServerRefreshGameServerInstanceHeartbeatResult(PlayFab::ServerModels::FRefreshGameServerInstanceHeartbeatResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRefreshGameServerInstanceHeartbeatResult Data;
};

UENUM(BlueprintType)
enum class EBPServerRegion : uint8
{
    Region_USCentral UMETA(DisplayName = "USCentral"),
    Region_USEast UMETA(DisplayName = "USEast"),
    Region_EUWest UMETA(DisplayName = "EUWest"),
    Region_Singapore UMETA(DisplayName = "Singapore"),
    Region_Japan UMETA(DisplayName = "Japan"),
    Region_Brazil UMETA(DisplayName = "Brazil"),
    Region_Australia UMETA(DisplayName = "Australia")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRegisterGameRequest"))
struct FBPServerRegisterGameRequest
{
    GENERATED_BODY()
public:
    FBPServerRegisterGameRequest() {};
    FBPServerRegisterGameRequest(PlayFab::ServerModels::FRegisterGameRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRegisterGameRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRegisterGameResponse"))
struct FBPServerRegisterGameResponse
{
    GENERATED_BODY()
public:
    FBPServerRegisterGameResponse() {};
    FBPServerRegisterGameResponse(PlayFab::ServerModels::FRegisterGameResponse InData) : Data(InData) {};
    PlayFab::ServerModels::FRegisterGameResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRemoveFriendRequest"))
struct FBPServerRemoveFriendRequest
{
    GENERATED_BODY()
public:
    FBPServerRemoveFriendRequest() {};
    FBPServerRemoveFriendRequest(PlayFab::ServerModels::FRemoveFriendRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRemoveFriendRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRemovePlayerTagRequest"))
struct FBPServerRemovePlayerTagRequest
{
    GENERATED_BODY()
public:
    FBPServerRemovePlayerTagRequest() {};
    FBPServerRemovePlayerTagRequest(PlayFab::ServerModels::FRemovePlayerTagRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRemovePlayerTagRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRemovePlayerTagResult"))
struct FBPServerRemovePlayerTagResult
{
    GENERATED_BODY()
public:
    FBPServerRemovePlayerTagResult() {};
    FBPServerRemovePlayerTagResult(PlayFab::ServerModels::FRemovePlayerTagResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRemovePlayerTagResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRemoveSharedGroupMembersRequest"))
struct FBPServerRemoveSharedGroupMembersRequest
{
    GENERATED_BODY()
public:
    FBPServerRemoveSharedGroupMembersRequest() {};
    FBPServerRemoveSharedGroupMembersRequest(PlayFab::ServerModels::FRemoveSharedGroupMembersRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRemoveSharedGroupMembersRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRemoveSharedGroupMembersResult"))
struct FBPServerRemoveSharedGroupMembersResult
{
    GENERATED_BODY()
public:
    FBPServerRemoveSharedGroupMembersResult() {};
    FBPServerRemoveSharedGroupMembersResult(PlayFab::ServerModels::FRemoveSharedGroupMembersResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRemoveSharedGroupMembersResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerReportPlayerServerRequest"))
struct FBPServerReportPlayerServerRequest
{
    GENERATED_BODY()
public:
    FBPServerReportPlayerServerRequest() {};
    FBPServerReportPlayerServerRequest(PlayFab::ServerModels::FReportPlayerServerRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FReportPlayerServerRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerReportPlayerServerResult"))
struct FBPServerReportPlayerServerResult
{
    GENERATED_BODY()
public:
    FBPServerReportPlayerServerResult() {};
    FBPServerReportPlayerServerResult(PlayFab::ServerModels::FReportPlayerServerResult InData) : Data(InData) {};
    PlayFab::ServerModels::FReportPlayerServerResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerResultTableNode"))
struct FBPServerResultTableNode
{
    GENERATED_BODY()
public:
    FBPServerResultTableNode() {};
    FBPServerResultTableNode(PlayFab::ServerModels::FResultTableNode InData) : Data(InData) {};
    PlayFab::ServerModels::FResultTableNode Data;
};

UENUM(BlueprintType)
enum class EBPServerResultTableNodeType : uint8
{
    ResultTableNodeType_ItemId UMETA(DisplayName = "ItemId"),
    ResultTableNodeType_TableId UMETA(DisplayName = "TableId")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRevokeAllBansForUserRequest"))
struct FBPServerRevokeAllBansForUserRequest
{
    GENERATED_BODY()
public:
    FBPServerRevokeAllBansForUserRequest() {};
    FBPServerRevokeAllBansForUserRequest(PlayFab::ServerModels::FRevokeAllBansForUserRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeAllBansForUserRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRevokeAllBansForUserResult"))
struct FBPServerRevokeAllBansForUserResult
{
    GENERATED_BODY()
public:
    FBPServerRevokeAllBansForUserResult() {};
    FBPServerRevokeAllBansForUserResult(PlayFab::ServerModels::FRevokeAllBansForUserResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeAllBansForUserResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRevokeBansRequest"))
struct FBPServerRevokeBansRequest
{
    GENERATED_BODY()
public:
    FBPServerRevokeBansRequest() {};
    FBPServerRevokeBansRequest(PlayFab::ServerModels::FRevokeBansRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeBansRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRevokeBansResult"))
struct FBPServerRevokeBansResult
{
    GENERATED_BODY()
public:
    FBPServerRevokeBansResult() {};
    FBPServerRevokeBansResult(PlayFab::ServerModels::FRevokeBansResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeBansResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRevokeInventoryItem", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRevokeInventoryItem"))
struct FBPServerRevokeInventoryItem
{
    GENERATED_BODY()
public:
    FBPServerRevokeInventoryItem() {};
    FBPServerRevokeInventoryItem(PlayFab::ServerModels::FRevokeInventoryItem InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeInventoryItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRevokeInventoryItemRequest"))
struct FBPServerRevokeInventoryItemRequest
{
    GENERATED_BODY()
public:
    FBPServerRevokeInventoryItemRequest() {};
    FBPServerRevokeInventoryItemRequest(PlayFab::ServerModels::FRevokeInventoryItemRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeInventoryItemRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRevokeInventoryItemsRequest"))
struct FBPServerRevokeInventoryItemsRequest
{
    GENERATED_BODY()
public:
    FBPServerRevokeInventoryItemsRequest() {};
    FBPServerRevokeInventoryItemsRequest(PlayFab::ServerModels::FRevokeInventoryItemsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeInventoryItemsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRevokeInventoryItemsResult"))
struct FBPServerRevokeInventoryItemsResult
{
    GENERATED_BODY()
public:
    FBPServerRevokeInventoryItemsResult() {};
    FBPServerRevokeInventoryItemsResult(PlayFab::ServerModels::FRevokeInventoryItemsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeInventoryItemsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRevokeInventoryResult"))
struct FBPServerRevokeInventoryResult
{
    GENERATED_BODY()
public:
    FBPServerRevokeInventoryResult() {};
    FBPServerRevokeInventoryResult(PlayFab::ServerModels::FRevokeInventoryResult InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeInventoryResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerRevokeItemError", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerRevokeItemError"))
struct FBPServerRevokeItemError
{
    GENERATED_BODY()
public:
    FBPServerRevokeItemError() {};
    FBPServerRevokeItemError(PlayFab::ServerModels::FRevokeItemError InData) : Data(InData) {};
    PlayFab::ServerModels::FRevokeItemError Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerScriptExecutionError", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerScriptExecutionError"))
struct FBPServerScriptExecutionError
{
    GENERATED_BODY()
public:
    FBPServerScriptExecutionError() {};
    FBPServerScriptExecutionError(PlayFab::ServerModels::FScriptExecutionError InData) : Data(InData) {};
    PlayFab::ServerModels::FScriptExecutionError Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSendCustomAccountRecoveryEmailRequest"))
struct FBPServerSendCustomAccountRecoveryEmailRequest
{
    GENERATED_BODY()
public:
    FBPServerSendCustomAccountRecoveryEmailRequest() {};
    FBPServerSendCustomAccountRecoveryEmailRequest(PlayFab::ServerModels::FSendCustomAccountRecoveryEmailRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSendCustomAccountRecoveryEmailRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSendCustomAccountRecoveryEmailResult"))
struct FBPServerSendCustomAccountRecoveryEmailResult
{
    GENERATED_BODY()
public:
    FBPServerSendCustomAccountRecoveryEmailResult() {};
    FBPServerSendCustomAccountRecoveryEmailResult(PlayFab::ServerModels::FSendCustomAccountRecoveryEmailResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSendCustomAccountRecoveryEmailResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSendEmailFromTemplateRequest"))
struct FBPServerSendEmailFromTemplateRequest
{
    GENERATED_BODY()
public:
    FBPServerSendEmailFromTemplateRequest() {};
    FBPServerSendEmailFromTemplateRequest(PlayFab::ServerModels::FSendEmailFromTemplateRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSendEmailFromTemplateRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSendEmailFromTemplateResult"))
struct FBPServerSendEmailFromTemplateResult
{
    GENERATED_BODY()
public:
    FBPServerSendEmailFromTemplateResult() {};
    FBPServerSendEmailFromTemplateResult(PlayFab::ServerModels::FSendEmailFromTemplateResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSendEmailFromTemplateResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSendPushNotificationRequest"))
struct FBPServerSendPushNotificationRequest
{
    GENERATED_BODY()
public:
    FBPServerSendPushNotificationRequest() {};
    FBPServerSendPushNotificationRequest(PlayFab::ServerModels::FSendPushNotificationRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSendPushNotificationRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSendPushNotificationResult"))
struct FBPServerSendPushNotificationResult
{
    GENERATED_BODY()
public:
    FBPServerSendPushNotificationResult() {};
    FBPServerSendPushNotificationResult(PlayFab::ServerModels::FSendPushNotificationResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSendPushNotificationResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetFriendTagsRequest"))
struct FBPServerSetFriendTagsRequest
{
    GENERATED_BODY()
public:
    FBPServerSetFriendTagsRequest() {};
    FBPServerSetFriendTagsRequest(PlayFab::ServerModels::FSetFriendTagsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetFriendTagsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetGameServerInstanceDataRequest"))
struct FBPServerSetGameServerInstanceDataRequest
{
    GENERATED_BODY()
public:
    FBPServerSetGameServerInstanceDataRequest() {};
    FBPServerSetGameServerInstanceDataRequest(PlayFab::ServerModels::FSetGameServerInstanceDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetGameServerInstanceDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSetGameServerInstanceDataResult"))
struct FBPServerSetGameServerInstanceDataResult
{
    GENERATED_BODY()
public:
    FBPServerSetGameServerInstanceDataResult() {};
    FBPServerSetGameServerInstanceDataResult(PlayFab::ServerModels::FSetGameServerInstanceDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSetGameServerInstanceDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetGameServerInstanceStateRequest"))
struct FBPServerSetGameServerInstanceStateRequest
{
    GENERATED_BODY()
public:
    FBPServerSetGameServerInstanceStateRequest() {};
    FBPServerSetGameServerInstanceStateRequest(PlayFab::ServerModels::FSetGameServerInstanceStateRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetGameServerInstanceStateRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSetGameServerInstanceStateResult"))
struct FBPServerSetGameServerInstanceStateResult
{
    GENERATED_BODY()
public:
    FBPServerSetGameServerInstanceStateResult() {};
    FBPServerSetGameServerInstanceStateResult(PlayFab::ServerModels::FSetGameServerInstanceStateResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSetGameServerInstanceStateResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetGameServerInstanceTagsRequest"))
struct FBPServerSetGameServerInstanceTagsRequest
{
    GENERATED_BODY()
public:
    FBPServerSetGameServerInstanceTagsRequest() {};
    FBPServerSetGameServerInstanceTagsRequest(PlayFab::ServerModels::FSetGameServerInstanceTagsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetGameServerInstanceTagsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSetGameServerInstanceTagsResult"))
struct FBPServerSetGameServerInstanceTagsResult
{
    GENERATED_BODY()
public:
    FBPServerSetGameServerInstanceTagsResult() {};
    FBPServerSetGameServerInstanceTagsResult(PlayFab::ServerModels::FSetGameServerInstanceTagsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSetGameServerInstanceTagsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetPlayerSecretRequest"))
struct FBPServerSetPlayerSecretRequest
{
    GENERATED_BODY()
public:
    FBPServerSetPlayerSecretRequest() {};
    FBPServerSetPlayerSecretRequest(PlayFab::ServerModels::FSetPlayerSecretRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetPlayerSecretRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSetPlayerSecretResult"))
struct FBPServerSetPlayerSecretResult
{
    GENERATED_BODY()
public:
    FBPServerSetPlayerSecretResult() {};
    FBPServerSetPlayerSecretResult(PlayFab::ServerModels::FSetPlayerSecretResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSetPlayerSecretResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetPublisherDataRequest"))
struct FBPServerSetPublisherDataRequest
{
    GENERATED_BODY()
public:
    FBPServerSetPublisherDataRequest() {};
    FBPServerSetPublisherDataRequest(PlayFab::ServerModels::FSetPublisherDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetPublisherDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSetPublisherDataResult"))
struct FBPServerSetPublisherDataResult
{
    GENERATED_BODY()
public:
    FBPServerSetPublisherDataResult() {};
    FBPServerSetPublisherDataResult(PlayFab::ServerModels::FSetPublisherDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSetPublisherDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSetTitleDataRequest"))
struct FBPServerSetTitleDataRequest
{
    GENERATED_BODY()
public:
    FBPServerSetTitleDataRequest() {};
    FBPServerSetTitleDataRequest(PlayFab::ServerModels::FSetTitleDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSetTitleDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSetTitleDataResult"))
struct FBPServerSetTitleDataResult
{
    GENERATED_BODY()
public:
    FBPServerSetTitleDataResult() {};
    FBPServerSetTitleDataResult(PlayFab::ServerModels::FSetTitleDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FSetTitleDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSharedGroupDataRecord", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSharedGroupDataRecord"))
struct FBPServerSharedGroupDataRecord
{
    GENERATED_BODY()
public:
    FBPServerSharedGroupDataRecord() {};
    FBPServerSharedGroupDataRecord(PlayFab::ServerModels::FSharedGroupDataRecord InData) : Data(InData) {};
    PlayFab::ServerModels::FSharedGroupDataRecord Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerStatisticModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerStatisticModel"))
struct FBPServerStatisticModel
{
    GENERATED_BODY()
public:
    FBPServerStatisticModel() {};
    FBPServerStatisticModel(PlayFab::ServerModels::FStatisticModel InData) : Data(InData) {};
    PlayFab::ServerModels::FStatisticModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerStatisticNameVersion", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerStatisticNameVersion"))
struct FBPServerStatisticNameVersion
{
    GENERATED_BODY()
public:
    FBPServerStatisticNameVersion() {};
    FBPServerStatisticNameVersion(PlayFab::ServerModels::FStatisticNameVersion InData) : Data(InData) {};
    PlayFab::ServerModels::FStatisticNameVersion Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerStatisticUpdate", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerStatisticUpdate"))
struct FBPServerStatisticUpdate
{
    GENERATED_BODY()
public:
    FBPServerStatisticUpdate() {};
    FBPServerStatisticUpdate(PlayFab::ServerModels::FStatisticUpdate InData) : Data(InData) {};
    PlayFab::ServerModels::FStatisticUpdate Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerStatisticValue", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerStatisticValue"))
struct FBPServerStatisticValue
{
    GENERATED_BODY()
public:
    FBPServerStatisticValue() {};
    FBPServerStatisticValue(PlayFab::ServerModels::FStatisticValue InData) : Data(InData) {};
    PlayFab::ServerModels::FStatisticValue Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSteamPlayFabIdPair", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSteamPlayFabIdPair"))
struct FBPServerSteamPlayFabIdPair
{
    GENERATED_BODY()
public:
    FBPServerSteamPlayFabIdPair() {};
    FBPServerSteamPlayFabIdPair(PlayFab::ServerModels::FSteamPlayFabIdPair InData) : Data(InData) {};
    PlayFab::ServerModels::FSteamPlayFabIdPair Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSubscriptionModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerSubscriptionModel"))
struct FBPServerSubscriptionModel
{
    GENERATED_BODY()
public:
    FBPServerSubscriptionModel() {};
    FBPServerSubscriptionModel(PlayFab::ServerModels::FSubscriptionModel InData) : Data(InData) {};
    PlayFab::ServerModels::FSubscriptionModel Data;
};

UENUM(BlueprintType)
enum class EBPServerSubscriptionProviderStatus : uint8
{
    SubscriptionProviderStatus_NoError UMETA(DisplayName = "NoError"),
    SubscriptionProviderStatus_Cancelled UMETA(DisplayName = "Cancelled"),
    SubscriptionProviderStatus_UnknownError UMETA(DisplayName = "UnknownError"),
    SubscriptionProviderStatus_BillingError UMETA(DisplayName = "BillingError"),
    SubscriptionProviderStatus_ProductUnavailable UMETA(DisplayName = "ProductUnavailable"),
    SubscriptionProviderStatus_CustomerDidNotAcceptPriceChange UMETA(DisplayName = "CustomerDidNotAcceptPriceChange"),
    SubscriptionProviderStatus_FreeTrial UMETA(DisplayName = "FreeTrial"),
    SubscriptionProviderStatus_PaymentPending UMETA(DisplayName = "PaymentPending")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSubtractCharacterVirtualCurrencyRequest"))
struct FBPServerSubtractCharacterVirtualCurrencyRequest
{
    GENERATED_BODY()
public:
    FBPServerSubtractCharacterVirtualCurrencyRequest() {};
    FBPServerSubtractCharacterVirtualCurrencyRequest(PlayFab::ServerModels::FSubtractCharacterVirtualCurrencyRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSubtractCharacterVirtualCurrencyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerSubtractUserVirtualCurrencyRequest"))
struct FBPServerSubtractUserVirtualCurrencyRequest
{
    GENERATED_BODY()
public:
    FBPServerSubtractUserVirtualCurrencyRequest() {};
    FBPServerSubtractUserVirtualCurrencyRequest(PlayFab::ServerModels::FSubtractUserVirtualCurrencyRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FSubtractUserVirtualCurrencyRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerTagModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerTagModel"))
struct FBPServerTagModel
{
    GENERATED_BODY()
public:
    FBPServerTagModel() {};
    FBPServerTagModel(PlayFab::ServerModels::FTagModel InData) : Data(InData) {};
    PlayFab::ServerModels::FTagModel Data;
};

UENUM(BlueprintType)
enum class EBPServerTitleActivationStatus : uint8
{
    TitleActivationStatus_None UMETA(DisplayName = "None"),
    TitleActivationStatus_ActivatedTitleKey UMETA(DisplayName = "ActivatedTitleKey"),
    TitleActivationStatus_PendingSteam UMETA(DisplayName = "PendingSteam"),
    TitleActivationStatus_ActivatedSteam UMETA(DisplayName = "ActivatedSteam"),
    TitleActivationStatus_RevokedSteam UMETA(DisplayName = "RevokedSteam")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerTitleNewsItem", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerTitleNewsItem"))
struct FBPServerTitleNewsItem
{
    GENERATED_BODY()
public:
    FBPServerTitleNewsItem() {};
    FBPServerTitleNewsItem(PlayFab::ServerModels::FTitleNewsItem InData) : Data(InData) {};
    PlayFab::ServerModels::FTitleNewsItem Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUnlockContainerInstanceRequest"))
struct FBPServerUnlockContainerInstanceRequest
{
    GENERATED_BODY()
public:
    FBPServerUnlockContainerInstanceRequest() {};
    FBPServerUnlockContainerInstanceRequest(PlayFab::ServerModels::FUnlockContainerInstanceRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUnlockContainerInstanceRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUnlockContainerItemRequest"))
struct FBPServerUnlockContainerItemRequest
{
    GENERATED_BODY()
public:
    FBPServerUnlockContainerItemRequest() {};
    FBPServerUnlockContainerItemRequest(PlayFab::ServerModels::FUnlockContainerItemRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUnlockContainerItemRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUnlockContainerItemResult"))
struct FBPServerUnlockContainerItemResult
{
    GENERATED_BODY()
public:
    FBPServerUnlockContainerItemResult() {};
    FBPServerUnlockContainerItemResult(PlayFab::ServerModels::FUnlockContainerItemResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUnlockContainerItemResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateAvatarUrlRequest"))
struct FBPServerUpdateAvatarUrlRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateAvatarUrlRequest() {};
    FBPServerUpdateAvatarUrlRequest(PlayFab::ServerModels::FUpdateAvatarUrlRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateAvatarUrlRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateBanRequest"))
struct FBPServerUpdateBanRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateBanRequest() {};
    FBPServerUpdateBanRequest(PlayFab::ServerModels::FUpdateBanRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateBanRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateBansRequest"))
struct FBPServerUpdateBansRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateBansRequest() {};
    FBPServerUpdateBansRequest(PlayFab::ServerModels::FUpdateBansRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateBansRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUpdateBansResult"))
struct FBPServerUpdateBansResult
{
    GENERATED_BODY()
public:
    FBPServerUpdateBansResult() {};
    FBPServerUpdateBansResult(PlayFab::ServerModels::FUpdateBansResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateBansResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateCharacterDataRequest"))
struct FBPServerUpdateCharacterDataRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateCharacterDataRequest() {};
    FBPServerUpdateCharacterDataRequest(PlayFab::ServerModels::FUpdateCharacterDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateCharacterDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUpdateCharacterDataResult"))
struct FBPServerUpdateCharacterDataResult
{
    GENERATED_BODY()
public:
    FBPServerUpdateCharacterDataResult() {};
    FBPServerUpdateCharacterDataResult(PlayFab::ServerModels::FUpdateCharacterDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateCharacterDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateCharacterStatisticsRequest"))
struct FBPServerUpdateCharacterStatisticsRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateCharacterStatisticsRequest() {};
    FBPServerUpdateCharacterStatisticsRequest(PlayFab::ServerModels::FUpdateCharacterStatisticsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateCharacterStatisticsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUpdateCharacterStatisticsResult"))
struct FBPServerUpdateCharacterStatisticsResult
{
    GENERATED_BODY()
public:
    FBPServerUpdateCharacterStatisticsResult() {};
    FBPServerUpdateCharacterStatisticsResult(PlayFab::ServerModels::FUpdateCharacterStatisticsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateCharacterStatisticsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdatePlayerStatisticsRequest"))
struct FBPServerUpdatePlayerStatisticsRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdatePlayerStatisticsRequest() {};
    FBPServerUpdatePlayerStatisticsRequest(PlayFab::ServerModels::FUpdatePlayerStatisticsRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdatePlayerStatisticsRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUpdatePlayerStatisticsResult"))
struct FBPServerUpdatePlayerStatisticsResult
{
    GENERATED_BODY()
public:
    FBPServerUpdatePlayerStatisticsResult() {};
    FBPServerUpdatePlayerStatisticsResult(PlayFab::ServerModels::FUpdatePlayerStatisticsResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdatePlayerStatisticsResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateSharedGroupDataRequest"))
struct FBPServerUpdateSharedGroupDataRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateSharedGroupDataRequest() {};
    FBPServerUpdateSharedGroupDataRequest(PlayFab::ServerModels::FUpdateSharedGroupDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateSharedGroupDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUpdateSharedGroupDataResult"))
struct FBPServerUpdateSharedGroupDataResult
{
    GENERATED_BODY()
public:
    FBPServerUpdateSharedGroupDataResult() {};
    FBPServerUpdateSharedGroupDataResult(PlayFab::ServerModels::FUpdateSharedGroupDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateSharedGroupDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateUserDataRequest"))
struct FBPServerUpdateUserDataRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateUserDataRequest() {};
    FBPServerUpdateUserDataRequest(PlayFab::ServerModels::FUpdateUserDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateUserDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUpdateUserDataResult"))
struct FBPServerUpdateUserDataResult
{
    GENERATED_BODY()
public:
    FBPServerUpdateUserDataResult() {};
    FBPServerUpdateUserDataResult(PlayFab::ServerModels::FUpdateUserDataResult InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateUserDataResult Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateUserInternalDataRequest"))
struct FBPServerUpdateUserInternalDataRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateUserInternalDataRequest() {};
    FBPServerUpdateUserInternalDataRequest(PlayFab::ServerModels::FUpdateUserInternalDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateUserInternalDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUpdateUserInventoryItemDataRequest"))
struct FBPServerUpdateUserInventoryItemDataRequest
{
    GENERATED_BODY()
public:
    FBPServerUpdateUserInventoryItemDataRequest() {};
    FBPServerUpdateUserInventoryItemDataRequest(PlayFab::ServerModels::FUpdateUserInventoryItemDataRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FUpdateUserInventoryItemDataRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserAccountInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserAccountInfo"))
struct FBPServerUserAccountInfo
{
    GENERATED_BODY()
public:
    FBPServerUserAccountInfo() {};
    FBPServerUserAccountInfo(PlayFab::ServerModels::FUserAccountInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserAccountInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserAndroidDeviceInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserAndroidDeviceInfo"))
struct FBPServerUserAndroidDeviceInfo
{
    GENERATED_BODY()
public:
    FBPServerUserAndroidDeviceInfo() {};
    FBPServerUserAndroidDeviceInfo(PlayFab::ServerModels::FUserAndroidDeviceInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserAndroidDeviceInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserCustomIdInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserCustomIdInfo"))
struct FBPServerUserCustomIdInfo
{
    GENERATED_BODY()
public:
    FBPServerUserCustomIdInfo() {};
    FBPServerUserCustomIdInfo(PlayFab::ServerModels::FUserCustomIdInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserCustomIdInfo Data;
};

UENUM(BlueprintType)
enum class EBPServerUserDataPermission : uint8
{
    UserDataPermission_Private UMETA(DisplayName = "Private"),
    UserDataPermission_Public UMETA(DisplayName = "Public")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserDataRecord", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserDataRecord"))
struct FBPServerUserDataRecord
{
    GENERATED_BODY()
public:
    FBPServerUserDataRecord() {};
    FBPServerUserDataRecord(PlayFab::ServerModels::FUserDataRecord InData) : Data(InData) {};
    PlayFab::ServerModels::FUserDataRecord Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserFacebookInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserFacebookInfo"))
struct FBPServerUserFacebookInfo
{
    GENERATED_BODY()
public:
    FBPServerUserFacebookInfo() {};
    FBPServerUserFacebookInfo(PlayFab::ServerModels::FUserFacebookInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserFacebookInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserGameCenterInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserGameCenterInfo"))
struct FBPServerUserGameCenterInfo
{
    GENERATED_BODY()
public:
    FBPServerUserGameCenterInfo() {};
    FBPServerUserGameCenterInfo(PlayFab::ServerModels::FUserGameCenterInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserGameCenterInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserGoogleInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserGoogleInfo"))
struct FBPServerUserGoogleInfo
{
    GENERATED_BODY()
public:
    FBPServerUserGoogleInfo() {};
    FBPServerUserGoogleInfo(PlayFab::ServerModels::FUserGoogleInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserGoogleInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserIosDeviceInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserIosDeviceInfo"))
struct FBPServerUserIosDeviceInfo
{
    GENERATED_BODY()
public:
    FBPServerUserIosDeviceInfo() {};
    FBPServerUserIosDeviceInfo(PlayFab::ServerModels::FUserIosDeviceInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserIosDeviceInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserKongregateInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserKongregateInfo"))
struct FBPServerUserKongregateInfo
{
    GENERATED_BODY()
public:
    FBPServerUserKongregateInfo() {};
    FBPServerUserKongregateInfo(PlayFab::ServerModels::FUserKongregateInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserKongregateInfo Data;
};

UENUM(BlueprintType)
enum class EBPServerUserOrigination : uint8
{
    UserOrigination_Organic UMETA(DisplayName = "Organic"),
    UserOrigination_Steam UMETA(DisplayName = "Steam"),
    UserOrigination_Google UMETA(DisplayName = "Google"),
    UserOrigination_Amazon UMETA(DisplayName = "Amazon"),
    UserOrigination_Facebook UMETA(DisplayName = "Facebook"),
    UserOrigination_Kongregate UMETA(DisplayName = "Kongregate"),
    UserOrigination_GamersFirst UMETA(DisplayName = "GamersFirst"),
    UserOrigination_Unknown UMETA(DisplayName = "Unknown"),
    UserOrigination_IOS UMETA(DisplayName = "IOS"),
    UserOrigination_LoadTest UMETA(DisplayName = "LoadTest"),
    UserOrigination_Android UMETA(DisplayName = "Android"),
    UserOrigination_PSN UMETA(DisplayName = "PSN"),
    UserOrigination_GameCenter UMETA(DisplayName = "GameCenter"),
    UserOrigination_CustomId UMETA(DisplayName = "CustomId"),
    UserOrigination_XboxLive UMETA(DisplayName = "XboxLive"),
    UserOrigination_Parse UMETA(DisplayName = "Parse"),
    UserOrigination_Twitch UMETA(DisplayName = "Twitch"),
    UserOrigination_WindowsHello UMETA(DisplayName = "WindowsHello")
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserPrivateAccountInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserPrivateAccountInfo"))
struct FBPServerUserPrivateAccountInfo
{
    GENERATED_BODY()
public:
    FBPServerUserPrivateAccountInfo() {};
    FBPServerUserPrivateAccountInfo(PlayFab::ServerModels::FUserPrivateAccountInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserPrivateAccountInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserPsnInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserPsnInfo"))
struct FBPServerUserPsnInfo
{
    GENERATED_BODY()
public:
    FBPServerUserPsnInfo() {};
    FBPServerUserPsnInfo(PlayFab::ServerModels::FUserPsnInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserPsnInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserSteamInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserSteamInfo"))
struct FBPServerUserSteamInfo
{
    GENERATED_BODY()
public:
    FBPServerUserSteamInfo() {};
    FBPServerUserSteamInfo(PlayFab::ServerModels::FUserSteamInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserSteamInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserTitleInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserTitleInfo"))
struct FBPServerUserTitleInfo
{
    GENERATED_BODY()
public:
    FBPServerUserTitleInfo() {};
    FBPServerUserTitleInfo(PlayFab::ServerModels::FUserTitleInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserTitleInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserTwitchInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserTwitchInfo"))
struct FBPServerUserTwitchInfo
{
    GENERATED_BODY()
public:
    FBPServerUserTwitchInfo() {};
    FBPServerUserTwitchInfo(PlayFab::ServerModels::FUserTwitchInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserTwitchInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerUserXboxInfo", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerUserXboxInfo"))
struct FBPServerUserXboxInfo
{
    GENERATED_BODY()
public:
    FBPServerUserXboxInfo() {};
    FBPServerUserXboxInfo(PlayFab::ServerModels::FUserXboxInfo InData) : Data(InData) {};
    PlayFab::ServerModels::FUserXboxInfo Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerValueToDateModel", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerValueToDateModel"))
struct FBPServerValueToDateModel
{
    GENERATED_BODY()
public:
    FBPServerValueToDateModel() {};
    FBPServerValueToDateModel(PlayFab::ServerModels::FValueToDateModel InData) : Data(InData) {};
    PlayFab::ServerModels::FValueToDateModel Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerVirtualCurrencyRechargeTime", HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerVirtualCurrencyRechargeTime"))
struct FBPServerVirtualCurrencyRechargeTime
{
    GENERATED_BODY()
public:
    FBPServerVirtualCurrencyRechargeTime() {};
    FBPServerVirtualCurrencyRechargeTime(PlayFab::ServerModels::FVirtualCurrencyRechargeTime InData) : Data(InData) {};
    PlayFab::ServerModels::FVirtualCurrencyRechargeTime Data;
};

USTRUCT(BlueprintType, meta = (HasNativeBreak = "PlayFabProxy.PFServerProxyLibrary.BreakBPServerWriteEventResponse"))
struct FBPServerWriteEventResponse
{
    GENERATED_BODY()
public:
    FBPServerWriteEventResponse() {};
    FBPServerWriteEventResponse(PlayFab::ServerModels::FWriteEventResponse InData) : Data(InData) {};
    PlayFab::ServerModels::FWriteEventResponse Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerWriteServerCharacterEventRequest"))
struct FBPServerWriteServerCharacterEventRequest
{
    GENERATED_BODY()
public:
    FBPServerWriteServerCharacterEventRequest() {};
    FBPServerWriteServerCharacterEventRequest(PlayFab::ServerModels::FWriteServerCharacterEventRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FWriteServerCharacterEventRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerWriteServerPlayerEventRequest"))
struct FBPServerWriteServerPlayerEventRequest
{
    GENERATED_BODY()
public:
    FBPServerWriteServerPlayerEventRequest() {};
    FBPServerWriteServerPlayerEventRequest(PlayFab::ServerModels::FWriteServerPlayerEventRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FWriteServerPlayerEventRequest Data;
};

USTRUCT(BlueprintType, meta = (HasNativeMake = "PlayFabProxy.PFServerProxyLibrary.MakeBPServerWriteTitleEventRequest"))
struct FBPServerWriteTitleEventRequest
{
    GENERATED_BODY()
public:
    FBPServerWriteTitleEventRequest() {};
    FBPServerWriteTitleEventRequest(PlayFab::ServerModels::FWriteTitleEventRequest InData) : Data(InData) {};
    PlayFab::ServerModels::FWriteTitleEventRequest Data;
};

DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerAddPlayerTagResultDelegate, const FBPServerAddPlayerTagResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerAddSharedGroupMembersResultDelegate, const FBPServerAddSharedGroupMembersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerAuthenticateSessionTicketResultDelegate, const FBPServerAuthenticateSessionTicketResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerAwardSteamAchievementResultDelegate, const FBPServerAwardSteamAchievementResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerBanUsersResultDelegate, const FBPServerBanUsersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerCharacterResultDelegate, const FBPServerCharacterResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerConsumeItemResultDelegate, const FBPServerConsumeItemResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerCreateSharedGroupResultDelegate, const FBPServerCreateSharedGroupResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerDeleteCharacterFromUserResultDelegate, const FBPServerDeleteCharacterFromUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerDeleteUsersResultDelegate, const FBPServerDeleteUsersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerDeregisterGameResponseDelegate, const FBPServerDeregisterGameResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerEmptyResultDelegate, const FBPServerEmptyResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerEvaluateRandomResultTableRequestDelegate, const FBPServerEvaluateRandomResultTableRequest&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerEvaluateRandomResultTableResultDelegate, const FBPServerEvaluateRandomResultTableResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerExecuteCloudScriptResultDelegate, const FBPServerExecuteCloudScriptResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetAllSegmentsResultDelegate, const FBPServerGetAllSegmentsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetCatalogItemsResultDelegate, const FBPServerGetCatalogItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetCharacterDataResultDelegate, const FBPServerGetCharacterDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetCharacterInventoryResultDelegate, const FBPServerGetCharacterInventoryResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetCharacterLeaderboardResultDelegate, const FBPServerGetCharacterLeaderboardResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetCharacterStatisticsResultDelegate, const FBPServerGetCharacterStatisticsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetContentDownloadUrlResultDelegate, const FBPServerGetContentDownloadUrlResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetFriendsListResultDelegate, const FBPServerGetFriendsListResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetLeaderboardAroundCharacterResultDelegate, const FBPServerGetLeaderboardAroundCharacterResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetLeaderboardAroundUserResultDelegate, const FBPServerGetLeaderboardAroundUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetLeaderboardForUsersCharactersResultDelegate, const FBPServerGetLeaderboardForUsersCharactersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetLeaderboardResultDelegate, const FBPServerGetLeaderboardResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerCombinedInfoResultDelegate, const FBPServerGetPlayerCombinedInfoResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerCombinedInfoResultPayloadDelegate, const FBPServerGetPlayerCombinedInfoResultPayload&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerProfileResultDelegate, const FBPServerGetPlayerProfileResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerSegmentsResultDelegate, const FBPServerGetPlayerSegmentsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayersInSegmentResultDelegate, const FBPServerGetPlayersInSegmentResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerStatisticsResultDelegate, const FBPServerGetPlayerStatisticsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerStatisticVersionsResultDelegate, const FBPServerGetPlayerStatisticVersionsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayerTagsResultDelegate, const FBPServerGetPlayerTagsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayFabIDsFromFacebookIDsResultDelegate, const FBPServerGetPlayFabIDsFromFacebookIDsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPlayFabIDsFromSteamIDsResultDelegate, const FBPServerGetPlayFabIDsFromSteamIDsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetPublisherDataResultDelegate, const FBPServerGetPublisherDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetRandomResultTablesRequestDelegate, const FBPServerGetRandomResultTablesRequest&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetRandomResultTablesResultDelegate, const FBPServerGetRandomResultTablesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetSegmentResultDelegate, const FBPServerGetSegmentResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetSharedGroupDataResultDelegate, const FBPServerGetSharedGroupDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetTimeResultDelegate, const FBPServerGetTimeResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetTitleDataResultDelegate, const FBPServerGetTitleDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetTitleNewsResultDelegate, const FBPServerGetTitleNewsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetUserAccountInfoResultDelegate, const FBPServerGetUserAccountInfoResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetUserBansResultDelegate, const FBPServerGetUserBansResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetUserDataResultDelegate, const FBPServerGetUserDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGetUserInventoryResultDelegate, const FBPServerGetUserInventoryResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGrantCharacterToUserResultDelegate, const FBPServerGrantCharacterToUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGrantItemsToCharacterResultDelegate, const FBPServerGrantItemsToCharacterResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGrantItemsToUserResultDelegate, const FBPServerGrantItemsToUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerGrantItemsToUsersResultDelegate, const FBPServerGrantItemsToUsersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerListUsersCharactersResultDelegate, const FBPServerListUsersCharactersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerModifyCharacterVirtualCurrencyResultDelegate, const FBPServerModifyCharacterVirtualCurrencyResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerModifyItemUsesResultDelegate, const FBPServerModifyItemUsesResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerModifyUserVirtualCurrencyResultDelegate, const FBPServerModifyUserVirtualCurrencyResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerMoveItemToCharacterFromCharacterResultDelegate, const FBPServerMoveItemToCharacterFromCharacterResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerMoveItemToCharacterFromUserResultDelegate, const FBPServerMoveItemToCharacterFromUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerMoveItemToUserFromCharacterResultDelegate, const FBPServerMoveItemToUserFromCharacterResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerNotifyMatchmakerPlayerLeftResultDelegate, const FBPServerNotifyMatchmakerPlayerLeftResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRandomResultTableListingDelegate, const FBPServerRandomResultTableListing&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRedeemCouponResultDelegate, const FBPServerRedeemCouponResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRedeemMatchmakerTicketResultDelegate, const FBPServerRedeemMatchmakerTicketResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRefreshGameServerInstanceHeartbeatResultDelegate, const FBPServerRefreshGameServerInstanceHeartbeatResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRegisterGameResponseDelegate, const FBPServerRegisterGameResponse&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRemovePlayerTagResultDelegate, const FBPServerRemovePlayerTagResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRemoveSharedGroupMembersResultDelegate, const FBPServerRemoveSharedGroupMembersResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerReportPlayerServerResultDelegate, const FBPServerReportPlayerServerResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerResultTableNodeDelegate, const FBPServerResultTableNode&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRevokeAllBansForUserResultDelegate, const FBPServerRevokeAllBansForUserResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRevokeBansResultDelegate, const FBPServerRevokeBansResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRevokeInventoryItemsResultDelegate, const FBPServerRevokeInventoryItemsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerRevokeInventoryResultDelegate, const FBPServerRevokeInventoryResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSendCustomAccountRecoveryEmailResultDelegate, const FBPServerSendCustomAccountRecoveryEmailResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSendEmailFromTemplateResultDelegate, const FBPServerSendEmailFromTemplateResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSendPushNotificationResultDelegate, const FBPServerSendPushNotificationResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSetGameServerInstanceDataResultDelegate, const FBPServerSetGameServerInstanceDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSetGameServerInstanceStateResultDelegate, const FBPServerSetGameServerInstanceStateResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSetGameServerInstanceTagsResultDelegate, const FBPServerSetGameServerInstanceTagsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSetPlayerSecretResultDelegate, const FBPServerSetPlayerSecretResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSetPublisherDataResultDelegate, const FBPServerSetPublisherDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerSetTitleDataResultDelegate, const FBPServerSetTitleDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUnlockContainerItemResultDelegate, const FBPServerUnlockContainerItemResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUpdateBansResultDelegate, const FBPServerUpdateBansResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUpdateCharacterDataResultDelegate, const FBPServerUpdateCharacterDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUpdateCharacterStatisticsResultDelegate, const FBPServerUpdateCharacterStatisticsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUpdatePlayerStatisticsResultDelegate, const FBPServerUpdatePlayerStatisticsResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUpdateSharedGroupDataResultDelegate, const FBPServerUpdateSharedGroupDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerUpdateUserDataResultDelegate, const FBPServerUpdateUserDataResult&, Result);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_OneParam(FBPServerWriteEventResponseDelegate, const FBPServerWriteEventResponse&, Result);

